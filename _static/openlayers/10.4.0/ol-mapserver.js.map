{"version":3,"file":"ol-mapserver-10.4.0.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAY,GAAID,IAEhBD,EAAS,GAAIC,GACd,CATD,CASGK,MAAM,IACT,kCCRAH,EAAOD,QAAU,CAChB,UAAa,CAAC,IAAK,IAAK,KACxB,aAAgB,CAAC,IAAK,IAAK,KAC3B,KAAQ,CAAC,EAAG,IAAK,KACjB,WAAc,CAAC,IAAK,IAAK,KACzB,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,KACpB,OAAU,CAAC,IAAK,IAAK,KACrB,MAAS,CAAC,EAAG,EAAG,GAChB,eAAkB,CAAC,IAAK,IAAK,KAC7B,KAAQ,CAAC,EAAG,EAAG,KACf,WAAc,CAAC,IAAK,GAAI,KACxB,MAAS,CAAC,IAAK,GAAI,IACnB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,GAAI,IAAK,KACvB,WAAc,CAAC,IAAK,IAAK,GACzB,UAAa,CAAC,IAAK,IAAK,IACxB,MAAS,CAAC,IAAK,IAAK,IACpB,eAAkB,CAAC,IAAK,IAAK,KAC7B,SAAY,CAAC,IAAK,IAAK,KACvB,QAAW,CAAC,IAAK,GAAI,IACrB,KAAQ,CAAC,EAAG,IAAK,KACjB,SAAY,CAAC,EAAG,EAAG,KACnB,SAAY,CAAC,EAAG,IAAK,KACrB,cAAiB,CAAC,IAAK,IAAK,IAC5B,SAAY,CAAC,IAAK,IAAK,KACvB,UAAa,CAAC,EAAG,IAAK,GACtB,SAAY,CAAC,IAAK,IAAK,KACvB,UAAa,CAAC,IAAK,IAAK,KACxB,YAAe,CAAC,IAAK,EAAG,KACxB,eAAkB,CAAC,GAAI,IAAK,IAC5B,WAAc,CAAC,IAAK,IAAK,GACzB,WAAc,CAAC,IAAK,GAAI,KACxB,QAAW,CAAC,IAAK,EAAG,GACpB,WAAc,CAAC,IAAK,IAAK,KACzB,aAAgB,CAAC,IAAK,IAAK,KAC3B,cAAiB,CAAC,GAAI,GAAI,KAC1B,cAAiB,CAAC,GAAI,GAAI,IAC1B,cAAiB,CAAC,GAAI,GAAI,IAC1B,cAAiB,CAAC,EAAG,IAAK,KAC1B,WAAc,CAAC,IAAK,EAAG,KACvB,SAAY,CAAC,IAAK,GAAI,KACtB,YAAe,CAAC,EAAG,IAAK,KACxB,QAAW,CAAC,IAAK,IAAK,KACtB,QAAW,CAAC,IAAK,IAAK,KACtB,WAAc,CAAC,GAAI,IAAK,KACxB,UAAa,CAAC,IAAK,GAAI,IACvB,YAAe,CAAC,IAAK,IAAK,KAC1B,YAAe,CAAC,GAAI,IAAK,IACzB,QAAW,CAAC,IAAK,EAAG,KACpB,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,IAAK,KACzB,KAAQ,CAAC,IAAK,IAAK,GACnB,UAAa,CAAC,IAAK,IAAK,IACxB,KAAQ,CAAC,IAAK,IAAK,KACnB,MAAS,CAAC,EAAG,IAAK,GAClB,YAAe,CAAC,IAAK,IAAK,IAC1B,KAAQ,CAAC,IAAK,IAAK,KACnB,SAAY,CAAC,IAAK,IAAK,KACvB,QAAW,CAAC,IAAK,IAAK,KACtB,UAAa,CAAC,IAAK,GAAI,IACvB,OAAU,CAAC,GAAI,EAAG,KAClB,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,KACpB,SAAY,CAAC,IAAK,IAAK,KACvB,cAAiB,CAAC,IAAK,IAAK,KAC5B,UAAa,CAAC,IAAK,IAAK,GACxB,aAAgB,CAAC,IAAK,IAAK,KAC3B,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,qBAAwB,CAAC,IAAK,IAAK,KACnC,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,YAAe,CAAC,IAAK,IAAK,KAC1B,cAAiB,CAAC,GAAI,IAAK,KAC3B,aAAgB,CAAC,IAAK,IAAK,KAC3B,eAAkB,CAAC,IAAK,IAAK,KAC7B,eAAkB,CAAC,IAAK,IAAK,KAC7B,eAAkB,CAAC,IAAK,IAAK,KAC7B,YAAe,CAAC,IAAK,IAAK,KAC1B,KAAQ,CAAC,EAAG,IAAK,GACjB,UAAa,CAAC,GAAI,IAAK,IACvB,MAAS,CAAC,IAAK,IAAK,KACpB,QAAW,CAAC,IAAK,EAAG,KACpB,OAAU,CAAC,IAAK,EAAG,GACnB,iBAAoB,CAAC,IAAK,IAAK,KAC/B,WAAc,CAAC,EAAG,EAAG,KACrB,aAAgB,CAAC,IAAK,GAAI,KAC1B,aAAgB,CAAC,IAAK,IAAK,KAC3B,eAAkB,CAAC,GAAI,IAAK,KAC5B,gBAAmB,CAAC,IAAK,IAAK,KAC9B,kBAAqB,CAAC,EAAG,IAAK,KAC9B,gBAAmB,CAAC,GAAI,IAAK,KAC7B,gBAAmB,CAAC,IAAK,GAAI,KAC7B,aAAgB,CAAC,GAAI,GAAI,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,SAAY,CAAC,IAAK,IAAK,KACvB,YAAe,CAAC,IAAK,IAAK,KAC1B,KAAQ,CAAC,EAAG,EAAG,KACf,QAAW,CAAC,IAAK,IAAK,KACtB,MAAS,CAAC,IAAK,IAAK,GACpB,UAAa,CAAC,IAAK,IAAK,IACxB,OAAU,CAAC,IAAK,IAAK,GACrB,UAAa,CAAC,IAAK,GAAI,GACvB,OAAU,CAAC,IAAK,IAAK,KACrB,cAAiB,CAAC,IAAK,IAAK,KAC5B,UAAa,CAAC,IAAK,IAAK,KACxB,cAAiB,CAAC,IAAK,IAAK,KAC5B,cAAiB,CAAC,IAAK,IAAK,KAC5B,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,KAAQ,CAAC,IAAK,IAAK,IACnB,KAAQ,CAAC,IAAK,IAAK,KACnB,KAAQ,CAAC,IAAK,IAAK,KACnB,WAAc,CAAC,IAAK,IAAK,KACzB,OAAU,CAAC,IAAK,EAAG,KACnB,cAAiB,CAAC,IAAK,GAAI,KAC3B,IAAO,CAAC,IAAK,EAAG,GAChB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,GAAI,IAAK,KACvB,YAAe,CAAC,IAAK,GAAI,IACzB,OAAU,CAAC,IAAK,IAAK,KACrB,WAAc,CAAC,IAAK,IAAK,IACzB,SAAY,CAAC,GAAI,IAAK,IACtB,SAAY,CAAC,IAAK,IAAK,KACvB,OAAU,CAAC,IAAK,GAAI,IACpB,OAAU,CAAC,IAAK,IAAK,KACrB,QAAW,CAAC,IAAK,IAAK,KACtB,UAAa,CAAC,IAAK,GAAI,KACvB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,KAAQ,CAAC,IAAK,IAAK,KACnB,YAAe,CAAC,EAAG,IAAK,KACxB,UAAa,CAAC,GAAI,IAAK,KACvB,IAAO,CAAC,IAAK,IAAK,KAClB,KAAQ,CAAC,EAAG,IAAK,KACjB,QAAW,CAAC,IAAK,IAAK,KACtB,OAAU,CAAC,IAAK,GAAI,IACpB,UAAa,CAAC,GAAI,IAAK,KACvB,OAAU,CAAC,IAAK,IAAK,KACrB,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,KACpB,WAAc,CAAC,IAAK,IAAK,KACzB,OAAU,CAAC,IAAK,IAAK,GACrB,YAAe,CAAC,IAAK,IAAK,OCrJvBK,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaR,QAGrB,IAAIC,EAASI,EAAyBE,GAAY,CAGjDP,QAAS,CAAC,GAOX,OAHAU,EAAoBH,GAAUN,EAAQA,EAAOD,QAASM,GAG/CL,EAAOD,OACf,CCrBAM,EAAoBK,EAAI,CAACX,EAASY,KACjC,IAAI,IAAIC,KAAOD,EACXN,EAAoBQ,EAAEF,EAAYC,KAASP,EAAoBQ,EAAEd,EAASa,IAC5EE,OAAOC,eAAehB,EAASa,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDP,EAAoBQ,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,oCCOlF,QAMO,MANP,EAYU,SCZV,EAMkB,iBCLlB,EAMU,SANV,EAiBe,cAjBf,EAkBS,QAlBT,EAwBW,UAxBX,EAyBY,WAzBZ,EA4Ba,YA5Bb,EA6BS,QCFT,EA3BA,MACE,WAAAI,GAMEC,KAAKC,UAAW,CAClB,CAKA,OAAAC,GACOF,KAAKC,WACRD,KAAKC,UAAW,EAChBD,KAAKG,kBAET,CAMA,eAAAA,GAAmB,GCed,SAASC,EAAUC,EAAGC,GAC3B,OAAOD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,CAClC,CAoCO,SAASC,EAAkBC,EAAKC,EAAQC,GAC7C,GAAIF,EAAI,IAAMC,EACZ,OAAO,EAGT,MAAME,EAAIH,EAAII,OACd,GAAIH,GAAUD,EAAIG,EAAI,GACpB,OAAOA,EAAI,EAGb,GAAyB,mBAAdD,EAA0B,CACnC,IAAK,IAAIG,EAAI,EAAGA,EAAIF,IAAKE,EAAG,CAC1B,MAAMC,EAAYN,EAAIK,GACtB,GAAIC,IAAcL,EAChB,OAAOI,EAET,GAAIC,EAAYL,EACd,OAAIC,EAAUD,EAAQD,EAAIK,EAAI,GAAIC,GAAa,EACtCD,EAAI,EAENA,CAEX,CACA,OAAOF,EAAI,CACb,CAEA,GAAID,EAAY,EAAG,CACjB,IAAK,IAAIG,EAAI,EAAGA,EAAIF,IAAKE,EACvB,GAAIL,EAAIK,GAAKJ,EACX,OAAOI,EAAI,EAGf,OAAOF,EAAI,CACb,CAEA,GAAID,EAAY,EAAG,CACjB,IAAK,IAAIG,EAAI,EAAGA,EAAIF,IAAKE,EACvB,GAAIL,EAAIK,IAAMJ,EACZ,OAAOI,EAGX,OAAOF,EAAI,CACb,CAEA,IAAK,IAAIE,EAAI,EAAGA,EAAIF,IAAKE,EAAG,CAC1B,GAAIL,EAAIK,IAAMJ,EACZ,OAAOI,EAET,GAAIL,EAAIK,GAAKJ,EACX,OAAID,EAAIK,EAAI,GAAKJ,EAASA,EAASD,EAAIK,GAC9BA,EAAI,EAENA,CAEX,CACA,OAAOF,EAAI,CACb,CAkDO,SAASI,EAAOC,EAAMC,GAC3B,MAAMC,EAAOF,EAAKJ,OAClB,GAAIM,IAASD,EAAKL,OAChB,OAAO,EAET,IAAK,IAAIC,EAAI,EAAGA,EAAIK,EAAML,IACxB,GAAIG,EAAKH,KAAOI,EAAKJ,GACnB,OAAO,EAGX,OAAO,CACT,CChMO,SAASM,IACd,OAAO,CACT,CAMO,SAAS,IACd,OAAO,CACT,CAOO,SAASC,IAAQ,CAwCjB,SAASC,EAAUC,GAaxB,OAZA,WACE,IAAIC,EACJ,IACEA,EAAQD,GACV,CAAE,MAAOE,GACP,OAAOC,QAAQC,OAAOF,EACxB,CACA,OAAID,aAAiBE,QACZF,EAEFE,QAAQE,QAAQJ,EACzB,CACOK,EACT,CCzEO,SAASC,EAAMC,GACpB,IAAK,MAAMC,KAAYD,SACdA,EAAOC,EAElB,CAOO,SAAS,EAAQD,GACtB,IAAIC,EACJ,IAAKA,KAAYD,EACf,OAAO,EAET,OAAQC,CACV,CCmDA,QA9DA,MAIE,WAAAhC,CAAYiC,GAIVhC,KAAKiC,mBAKLjC,KAAKkC,iBAOLlC,KAAKgC,KAAOA,EAOZhC,KAAKS,OAAS,IAChB,CAOA,cAAA0B,GACEnC,KAAKkC,kBAAmB,CAC1B,CAMA,eAAAE,GACEpC,KAAKiC,oBAAqB,CAC5B,GCqIF,EArKA,cAAqB,EAInB,WAAAlC,CAAYU,GACV4B,QAMArC,KAAKsC,aAAe7B,EAMpBT,KAAKuC,iBAAmB,KAMxBvC,KAAKwC,aAAe,KAMpBxC,KAAKyC,WAAa,IACpB,CAMA,gBAAAC,CAAiBV,EAAMW,GACrB,IAAKX,IAASW,EACZ,OAEF,MAAMC,EAAY5C,KAAKyC,aAAezC,KAAKyC,WAAa,CAAC,GACnDI,EAAmBD,EAAUZ,KAAUY,EAAUZ,GAAQ,IAC1Da,EAAiBC,SAASH,IAC7BE,EAAiBE,KAAKJ,EAE1B,CAYA,aAAAK,CAAcC,GACZ,MAAMC,EAA4B,iBAAVD,EAClBjB,EAAOkB,EAAWD,EAAQA,EAAMjB,KAChCY,EAAY5C,KAAKyC,YAAczC,KAAKyC,WAAWT,GACrD,IAAKY,EACH,OAGF,MAAMO,EAAMD,EAAW,IAAIE,EAAMH,GAA8B,EAC1DE,EAAI1C,SACP0C,EAAI1C,OAAST,KAAKsC,cAAgBtC,MAEpC,MAAMqD,EAAcrD,KAAKwC,eAAiBxC,KAAKwC,aAAe,CAAC,GACzDc,EACJtD,KAAKuC,mBAAqBvC,KAAKuC,iBAAmB,CAAC,GAMrD,IAAIgB,EALEvB,KAAQqB,IACZA,EAAYrB,GAAQ,EACpBsB,EAAgBtB,GAAQ,KAExBqB,EAAYrB,GAEd,IAAK,IAAInB,EAAI,EAAG2C,EAAKZ,EAAUhC,OAAQC,EAAI2C,IAAM3C,EAU/C,GARE0C,EADE,gBAAiBX,EAAU/B,GAE3B+B,EAAU/B,GACV4C,YAAYN,GAGZP,EAAU/B,GACVf,KAAKE,KAAMmD,IAEG,IAAdI,GAAuBJ,EAAIlB,mBAAoB,CACjDsB,GAAY,EACZ,KACF,CAEF,GAA4B,KAAtBF,EAAYrB,GAAa,CAC7B,IAAI0B,EAAKJ,EAAgBtB,GAEzB,WADOsB,EAAgBtB,GAChB0B,KACL1D,KAAK2D,oBAAoB3B,EAAMZ,UAE1BiC,EAAYrB,EACrB,CACA,OAAOuB,CACT,CAMA,eAAApD,GACEH,KAAKyC,YAAcZ,EAAM7B,KAAKyC,WAChC,CASA,YAAAmB,CAAa5B,GACX,OAAQhC,KAAKyC,YAAczC,KAAKyC,WAAWT,SAAUhD,CACvD,CAOA,WAAA6E,CAAY7B,GACV,QAAKhC,KAAKyC,aAGHT,EACHA,KAAQhC,KAAKyC,WACbnD,OAAOwE,KAAK9D,KAAKyC,YAAY7B,OAAS,EAC5C,CAMA,mBAAA+C,CAAoB3B,EAAMW,GACxB,IAAK3C,KAAKyC,WACR,OAEF,MAAMG,EAAY5C,KAAKyC,WAAWT,GAClC,IAAKY,EACH,OAEF,MAAMmB,EAAQnB,EAAUoB,QAAQrB,IACjB,IAAXoB,IACE/D,KAAKuC,kBAAoBP,KAAQhC,KAAKuC,kBAExCK,EAAUmB,GAAS3C,IACjBpB,KAAKuC,iBAAiBP,KAExBY,EAAUqB,OAAOF,EAAO,GACC,IAArBnB,EAAUhC,eACLZ,KAAKyC,WAAWT,IAI/B,GC/IK,SAASkC,EAAOzD,EAAQuB,EAAMW,EAAUwB,EAASC,GACtD,GAAIA,EAAM,CACR,MAAMC,EAAmB1B,EAMzBA,EAAW,SAAUM,GAEnB,OADAxC,EAAOkD,oBAAoB3B,EAAMW,GAC1B0B,EAAiBvE,KAAKqE,GAAWnE,KAAMiD,EAChD,CACF,MAAWkB,GAAWA,IAAY1D,IAChCkC,EAAWA,EAAS2B,KAAKH,IAE3B,MAAMI,EAAY,CAChB9D,OAAQA,EACRuB,KAAMA,EACNW,SAAUA,GAGZ,OADAlC,EAAOiC,iBAAiBV,EAAMW,GACvB4B,CACT,CAsBO,SAAS,EAAW9D,EAAQuB,EAAMW,EAAUwB,GACjD,OAAOD,EAAOzD,EAAQuB,EAAMW,EAAUwB,GAAS,EACjD,CAWO,SAAS,EAAc/E,GACxBA,GAAOA,EAAIqB,SACbrB,EAAIqB,OAAOkD,oBAAoBvE,EAAI4C,KAAM5C,EAAIuD,UAC7Cd,EAAMzC,GAEV,CCpEA,MAAMoF,UAAmB,EACvB,WAAAzE,GACEsC,QAEArC,KAAKyE,GAEDzE,KACF,WAEFA,KAAKoE,KAEDpE,KACF,aAEFA,KAAK0E,GAAiD1E,KAAe,WAMrEA,KAAK2E,UAAY,CACnB,CAMA,OAAAC,KACI5E,KAAK2E,UACP3E,KAAKgD,cAAc,EACrB,CAQA,WAAA6B,GACE,OAAO7E,KAAK2E,SACd,CAQA,UAAAG,CAAW9C,EAAMW,GACf,GAAIoC,MAAMC,QAAQhD,GAAO,CACvB,MAAMiD,EAAMjD,EAAKpB,OACXkD,EAAO,IAAIiB,MAAME,GACvB,IAAK,IAAIpE,EAAI,EAAGA,EAAIoE,IAAOpE,EACzBiD,EAAKjD,GAAKqD,EAAOlE,KAAMgC,EAAKnB,GAAI8B,GAElC,OAAOmB,CACT,CACA,OAAOI,EAAOlE,KAA4B,EAAQ2C,EACpD,CAQA,YAAAuC,CAAalD,EAAMW,GACjB,IAAIvD,EACJ,GAAI2F,MAAMC,QAAQhD,GAAO,CACvB,MAAMiD,EAAMjD,EAAKpB,OACjBxB,EAAM,IAAI2F,MAAME,GAChB,IAAK,IAAIpE,EAAI,EAAGA,EAAIoE,IAAOpE,EACzBzB,EAAIyB,GAAK,EAAWb,KAAMgC,EAAKnB,GAAI8B,EAEvC,MACEvD,EAAM,EAAWY,KAA4B,EAAQ2C,GAGvD,OADsB,EAAWwC,OAAS/F,EACnCA,CACT,CAQA,UAAAgG,CAAWpD,EAAMW,GACf,MAAMvD,EAA4B,EAAW+F,OAC7C,GAAI/F,GAmDD,SAAiBA,GACtB,GAAI2F,MAAMC,QAAQ5F,GAChB,IAAK,IAAIyB,EAAI,EAAG2C,EAAKpE,EAAIwB,OAAQC,EAAI2C,IAAM3C,EACzC,EAAczB,EAAIyB,SAGpB,EAA6D,EAEjE,CA1DMwE,CAAQjG,QACH,GAAI2F,MAAMC,QAAQhD,GACvB,IAAK,IAAInB,EAAI,EAAG2C,EAAKxB,EAAKpB,OAAQC,EAAI2C,IAAM3C,EAC1Cb,KAAK2D,oBAAoB3B,EAAKnB,GAAI8B,QAGpC3C,KAAK2D,oBAAoB3B,EAAMW,EAEnC,EAaF6B,EAAW5E,UAAU6E,GAYrBD,EAAW5E,UAAUwE,KASrBI,EAAW5E,UAAU8E,GAkBrB,UCvLO,SAAS,IACd,MAAM,IAAIY,MAAM,iCAClB,CAOA,IAAIC,EAAc,EAWX,SAASC,EAAO9F,GACrB,OAAOA,EAAI+F,SAAW/F,EAAI+F,OAASC,SAASH,GAC9C,CChBO,MAAMI,UAAoBvC,EAM/B,WAAArD,CAAYiC,EAAM5C,EAAKwG,GACrBvD,MAAML,GAONhC,KAAKZ,IAAMA,EAQXY,KAAK4F,SAAWA,CAClB,EA4OF,QAvLA,cAAyB,EAIvB,WAAA7F,CAAY8F,GACVxD,QAKArC,KAAKyE,GAKLzE,KAAKoE,KAKLpE,KAAK0E,GAMLc,EAAOxF,MAMPA,KAAK8F,QAAU,UAEA9G,IAAX6G,GACF7F,KAAK+F,cAAcF,EAEvB,CAQA,GAAApG,CAAIL,GACF,IAAImC,EAIJ,OAHIvB,KAAK8F,SAAW9F,KAAK8F,QAAQjG,eAAeT,KAC9CmC,EAAQvB,KAAK8F,QAAQ1G,IAEhBmC,CACT,CAOA,OAAAyE,GACE,OAAQhG,KAAK8F,SAAWxG,OAAOwE,KAAK9D,KAAK8F,UAAa,EACxD,CAOA,aAAAG,GACE,OAAQjG,KAAK8F,SAAWxG,OAAO4G,OAAO,CAAC,EAAGlG,KAAK8F,UAAa,CAAC,CAC/D,CAMA,qBAAAK,GACE,OAAOnG,KAAK8F,OACd,CAKA,aAAAM,GACE,QAASpG,KAAK8F,OAChB,CAMA,MAAAO,CAAOjH,EAAKwG,GACV,IAAIU,EACJA,EAAY,UAAUlH,IAClBY,KAAK6D,YAAYyC,IACnBtG,KAAKgD,cAAc,IAAI2C,EAAYW,EAAWlH,EAAKwG,IAErDU,EAAYC,EACRvG,KAAK6D,YAAYyC,IACnBtG,KAAKgD,cAAc,IAAI2C,EAAYW,EAAWlH,EAAKwG,GAEvD,CAMA,iBAAAY,CAAkBpH,EAAKuD,GACrB3C,KAAK0C,iBAAiB,UAAUtD,IAAOuD,EACzC,CAMA,oBAAA8D,CAAqBrH,EAAKuD,GACxB3C,KAAK2D,oBAAoB,UAAUvE,IAAOuD,EAC5C,CASA,GAAA+D,CAAItH,EAAKmC,EAAOoF,GACd,MAAMd,EAAS7F,KAAK8F,UAAY9F,KAAK8F,QAAU,CAAC,GAChD,GAAIa,EACFd,EAAOzG,GAAOmC,MACT,CACL,MAAMqE,EAAWC,EAAOzG,GACxByG,EAAOzG,GAAOmC,EACVqE,IAAarE,GACfvB,KAAKqG,OAAOjH,EAAKwG,EAErB,CACF,CASA,aAAAG,CAAcF,EAAQc,GACpB,IAAK,MAAMvH,KAAOyG,EAChB7F,KAAK0G,IAAItH,EAAKyG,EAAOzG,GAAMuH,EAE/B,CAOA,eAAAC,CAAgBC,GACTA,EAAOf,SAGZxG,OAAO4G,OAAOlG,KAAK8F,UAAY9F,KAAK8F,QAAU,CAAC,GAAIe,EAAOf,QAC5D,CAQA,KAAAgB,CAAM1H,EAAKuH,GACT,GAAI3G,KAAK8F,SAAW1G,KAAOY,KAAK8F,QAAS,CACvC,MAAMF,EAAW5F,KAAK8F,QAAQ1G,UACvBY,KAAK8F,QAAQ1G,GAChB,EAAQY,KAAK8F,WACf9F,KAAK8F,QAAU,MAEZa,GACH3G,KAAKqG,OAAOjH,EAAKwG,EAErB,CACF,GClQImB,EACI,SASH,MAAMC,UAAwB5D,EAMnC,WAAArD,CAAYiC,EAAMiF,EAASlD,GACzB1B,MAAML,GAONhC,KAAKiH,QAAUA,EAOfjH,KAAK+D,MAAQA,CACf,EA4RF,QA5PA,cAAyB,EAKvB,WAAAhE,CAAYmH,EAAOC,GAgCjB,GA/BA9E,QAKArC,KAAKyE,GAKLzE,KAAKoE,KAKLpE,KAAK0E,GAELyC,EAAUA,GAAW,CAAC,EAMtBnH,KAAKoH,UAAYD,EAAQE,OAMzBrH,KAAKsH,OAASJ,GAAgB,GAE1BlH,KAAKoH,QACP,IAAK,IAAIvG,EAAI,EAAG2C,EAAKxD,KAAKsH,OAAO1G,OAAQC,EAAI2C,IAAM3C,EACjDb,KAAKuH,cAAcvH,KAAKsH,OAAOzG,GAAIA,GAIvCb,KAAKwH,eACP,CAMA,KAAA3F,GACE,KAAO7B,KAAKyH,YAAc,GACxBzH,KAAK0H,KAET,CASA,MAAAC,CAAOnH,GACL,IAAK,IAAIK,EAAI,EAAG2C,EAAKhD,EAAII,OAAQC,EAAI2C,IAAM3C,EACzCb,KAAK+C,KAAKvC,EAAIK,IAEhB,OAAOb,IACT,CASA,OAAA4H,CAAQC,GACN,MAAMX,EAAQlH,KAAKsH,OACnB,IAAK,IAAIzG,EAAI,EAAG2C,EAAK0D,EAAMtG,OAAQC,EAAI2C,IAAM3C,EAC3CgH,EAAEX,EAAMrG,GAAIA,EAAGqG,EAEnB,CAUA,QAAAY,GACE,OAAO9H,KAAKsH,MACd,CAQA,IAAAS,CAAKhE,GACH,OAAO/D,KAAKsH,OAAOvD,EACrB,CAQA,SAAA0D,GACE,OAAOzH,KAAKP,IAAIsH,EAClB,CAQA,QAAAiB,CAASjE,EAAOkE,GACd,GAAIlE,EAAQ,GAAKA,EAAQ/D,KAAKyH,YAC5B,MAAM,IAAInC,MAAM,wBAA0BvB,GAExC/D,KAAKoH,SACPpH,KAAKuH,cAAcU,GAErBjI,KAAKsH,OAAOrD,OAAOF,EAAO,EAAGkE,GAC7BjI,KAAKwH,gBACLxH,KAAKgD,cACH,IAAIgE,EAAgBkB,EAAyBD,EAAMlE,GAEvD,CAQA,GAAA2D,GACE,OAAO1H,KAAKmI,SAASnI,KAAKyH,YAAc,EAC1C,CAQA,IAAA1E,CAAKkF,GACCjI,KAAKoH,SACPpH,KAAKuH,cAAcU,GAErB,MAAMtH,EAAIX,KAAKyH,YAEf,OADAzH,KAAKgI,SAASrH,EAAGsH,GACVjI,KAAKyH,WACd,CAQA,MAAAW,CAAOH,GACL,MAAMzH,EAAMR,KAAKsH,OACjB,IAAK,IAAIzG,EAAI,EAAG2C,EAAKhD,EAAII,OAAQC,EAAI2C,IAAM3C,EACzC,GAAIL,EAAIK,KAAOoH,EACb,OAAOjI,KAAKmI,SAAStH,EAI3B,CASA,QAAAsH,CAASpE,GACP,GAAIA,EAAQ,GAAKA,GAAS/D,KAAKyH,YAC7B,OAEF,MAAMY,EAAOrI,KAAKsH,OAAOvD,GAQzB,OAPA/D,KAAKsH,OAAOrD,OAAOF,EAAO,GAC1B/D,KAAKwH,gBACLxH,KAAKgD,cAC+B,IAC5BgE,EAAgBkB,EAA4BG,EAAMtE,IAGnDsE,CACT,CAQA,KAAAC,CAAMvE,EAAOkE,GAEX,GAAIlE,GADM/D,KAAKyH,YAGb,YADAzH,KAAKgI,SAASjE,EAAOkE,GAGvB,GAAIlE,EAAQ,EACV,MAAM,IAAIuB,MAAM,wBAA0BvB,GAExC/D,KAAKoH,SACPpH,KAAKuH,cAAcU,EAAMlE,GAE3B,MAAMsE,EAAOrI,KAAKsH,OAAOvD,GACzB/D,KAAKsH,OAAOvD,GAASkE,EACrBjI,KAAKgD,cAC+B,IAC5BgE,EAAgBkB,EAA4BG,EAAMtE,IAG1D/D,KAAKgD,cAC+B,IAC5BgE,EAAgBkB,EAAyBD,EAAMlE,GAGzD,CAKA,aAAAyD,GACExH,KAAK0G,IAAIK,EAAiB/G,KAAKsH,OAAO1G,OACxC,CAOA,aAAA2G,CAAcU,EAAMM,GAClB,IAAK,IAAI1H,EAAI,EAAG2C,EAAKxD,KAAKsH,OAAO1G,OAAQC,EAAI2C,IAAM3C,EACjD,GAAIb,KAAKsH,OAAOzG,KAAOoH,GAAQpH,IAAM0H,EACnC,MAAM,IAAIjD,MAAM,8CAGtB,GCjSF,EAzBA,cAAuBlC,EAMrB,WAAArD,CAAYiC,EAAMwG,EAAKC,GACrBpG,MAAML,GAONhC,KAAKwI,IAAMA,EAOXxI,KAAKyI,gBAA4BzJ,IAAfyJ,EAA2BA,EAAa,IAC5D,GCsFF,EA3GA,cAA8B,EAS5B,WAAA1I,CAAYiC,EAAMwG,EAAKE,EAAeC,EAAUF,EAAYG,GAC1DvG,MAAML,EAAMwG,EAAKC,GAQjBzI,KAAK0I,cAAgBA,EAOrB1I,KAAK6I,OAAS,KAOd7I,KAAK8I,YAAc,KASnB9I,KAAK2I,cAAwB3J,IAAb2J,GAAyBA,EAKzC3I,KAAK4I,eAAiBA,CACxB,CAOA,SAAIG,GAIF,OAHK/I,KAAK6I,SACR7I,KAAK6I,OAAS7I,KAAKwI,IAAIQ,cAAchJ,KAAK0I,gBAErC1I,KAAK6I,MACd,CACA,SAAIE,CAAMA,GACR/I,KAAK6I,OAASE,CAChB,CAQA,cAAIE,GAIF,OAHKjJ,KAAK8I,cACR9I,KAAK8I,YAAc9I,KAAKwI,IAAIU,uBAAuBlJ,KAAK+I,QAEnD/I,KAAK8I,WACd,CACA,cAAIG,CAAWA,GACbjJ,KAAK8I,YAAcG,CACrB,CAQA,cAAA9G,GACEE,MAAMF,iBACF,mBAAoBnC,KAAK0I,eACH1I,KAAkB,cAAEmC,gBAEhD,CAQA,eAAAC,GACEC,MAAMD,kBACF,oBAAqBpC,KAAK0I,eACJ1I,KAAkB,cAAEoC,iBAEhD,GC1GF,GAOE+G,YAAa,cAObC,MAAO,EAOPC,SdHU,WcUVC,YAAa,cAQbC,YAAa,cAEbC,YAAa,cACbC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,cAAe,iBCjDXC,EACiB,oBAAdC,gBAA4D,IAAxBA,UAAUC,UACjDD,UAAUC,UAAUC,cACpB,GAMOC,EAAUJ,EAAGjH,SAAS,WAqBtBsH,GAfSL,EAAGjH,SAAS,YAAciH,EAAGjH,SAAS,WAQzDiH,EAAGjH,SAAS,iBACX,wCAAwCuH,KAAKN,IAM3BA,EAAGjH,SAAS,YAAciH,EAAGjH,SAAS,SAM/C,EAAMiH,EAAGjH,SAAS,aASlBwH,EACiB,oBAArBC,iBAAmCA,iBAAmB,EAOlDC,EACkB,oBAAtBC,mBACoB,oBAApBC,iBACP/L,gBAAgB8L,kBAML,EACM,oBAAVE,OAAyBA,MAAM/K,UAAUgL,OAMrCC,EAAmD,mBAAtBC,kBAK7BC,EAA0B,WACrC,IAAIC,GAAU,EACd,IACE,MAAM7D,EAAU7H,OAAOC,eAAe,CAAC,EAAG,UAAW,CACnDE,IAAK,WACHuL,GAAU,CACZ,IAIFC,OAAOvI,iBAAiB,IAAK,KAAMyE,GAEnC8D,OAAOtH,oBAAoB,IAAK,KAAMwD,EACxC,CAAE,MAEF,CACA,OAAO6D,CACR,CAjBsC,GCtEvC,EAEe,cCwZf,EAtZA,cAAqC,EAKnC,WAAAjL,CAAYyI,EAAK0C,GACf7I,MAAMmG,GAONxI,KAAKmL,KAAO3C,EAMZxI,KAAKoL,gBAMLpL,KAAKqL,gBAAiB,EAMtBrL,KAAKsL,WAAY,EAMjBtL,KAAKuL,kBAAoB,GAMzBvL,KAAKwL,oBAAmCxM,IAAlBkM,EAA8B,EAAIA,EAQxDlL,KAAKyL,MAAQ,KAEb,MAAMxE,EAAUjH,KAAKmL,KAAKO,cAM1B1L,KAAK2L,gBAAkB,GAMvB3L,KAAK4L,gBAAkB,CAAC,EAKxB5L,KAAK6L,SAAW5E,EAMhBjH,KAAK8L,wBAA0B5H,EAC7B+C,EACA,EACAjH,KAAK+L,mBACL/L,MAOFA,KAAKgM,0BAMLhM,KAAKiM,oBAAsB/H,EACzB+C,EDjGS,cCmGTjH,KAAKkM,gBACLlM,MAMFA,KAAKmM,sBAAwBnM,KAAKoM,iBAAiB9H,KAAKtE,MAExDA,KAAK6L,SAASnJ,iBACZ,EACA1C,KAAKmM,wBACLpB,GAA0B,CAACC,SAAS,GAExC,CAOA,aAAAqB,CAAcC,GACZ,IAAIC,EAAW,IAAI,EACjB,EAAoBnD,MACpBpJ,KAAKmL,KACLmB,GAEFtM,KAAKgD,cAAcuJ,QACUvN,IAAzBgB,KAAKoL,iBAEPoB,aAAaxM,KAAKoL,iBAClBpL,KAAKoL,qBAAkBpM,EACvBuN,EAAW,IAAI,EACb,EAAoBlD,SACpBrJ,KAAKmL,KACLmB,GAEFtM,KAAKgD,cAAcuJ,IAGnBvM,KAAKoL,gBAAkBqB,YAAW,KAChCzM,KAAKoL,qBAAkBpM,EACvB,MAAMuN,EAAW,IAAI,EACnB,EAAoBpD,YACpBnJ,KAAKmL,KACLmB,GAEFtM,KAAKgD,cAAcuJ,EAAS,GAC3B,IAEP,CASA,qBAAAG,CAAsBJ,GACpB,MAAMrJ,EAAQqJ,EACRK,EAAK1J,EAAM2J,UAEjB,GACE3J,EAAMjB,MAAQ,EAAoByH,WAClCxG,EAAMjB,MAAQ,EAAoB8H,cAClC,QACO9J,KAAK4L,gBAAgBe,GAC5B,IAAK,MAAMC,KAAa5M,KAAK4L,gBAC3B,GAAI5L,KAAK4L,gBAAgBgB,GAAWnM,SAAWwC,EAAMxC,OAAQ,QAKpDT,KAAK4L,gBAAgBgB,GAC5B,KACF,CAEJ,MACE3J,EAAMjB,MAAQ,EAAoBwH,aAClCvG,EAAMjB,MAAQ,EAAoBuH,cAElCvJ,KAAK4L,gBAAgBe,GAAM1J,GAE7BjD,KAAK2L,gBAAkBrM,OAAOuG,OAAO7F,KAAK4L,gBAC5C,CAOA,gBAAAiB,CAAiBP,GACftM,KAAK0M,sBAAsBJ,GAC3B,MAAMC,EAAW,IAAI,EACnB,EAAoB9C,UACpBzJ,KAAKmL,KACLmB,OACAtN,OACAA,EACAgB,KAAK2L,iBAEP3L,KAAKgD,cAAcuJ,GASjBvM,KAAKqL,iBACJkB,EAASrK,mBACTlC,KAAKsL,WACNtL,KAAK8M,qBAAqBR,IAE1BtM,KAAKqM,cAAcrM,KAAKyL,OAGU,IAAhCzL,KAAK2L,gBAAgB/K,SACvBZ,KAAKuL,kBAAkB3D,QAAQ,GAC/B5H,KAAKuL,kBAAkB3K,OAAS,EAChCZ,KAAKsL,WAAY,EACjBtL,KAAKyL,MAAQ,KAEjB,CAQA,oBAAAqB,CAAqBR,GACnB,OAA+B,IAAxBA,EAAaS,MACtB,CAOA,kBAAAhB,CAAmBO,GACjBtM,KAAKqL,eAAiD,IAAhCrL,KAAK2L,gBAAgB/K,OAC3CZ,KAAK0M,sBAAsBJ,GAC3B,MAAMC,EAAW,IAAI,EACnB,EAAoB/C,YACpBxJ,KAAKmL,KACLmB,OACAtN,OACAA,EACAgB,KAAK2L,iBAUP,GARA3L,KAAKgD,cAAcuJ,GAEnBvM,KAAKyL,MAAQ,IAAIuB,aAAaV,EAAatK,KAAMsK,GACjDhN,OAAOC,eAAeS,KAAKyL,MAAO,SAAU,CAC1CwB,UAAU,EACV1L,MAAO+K,EAAa7L,SAGgB,IAAlCT,KAAKuL,kBAAkB3K,OAAc,CACvC,MAAMsM,EAAMlN,KAAKmL,KAAKgC,mBACtBnN,KAAKuL,kBAAkBxI,KACrBmB,EACEgJ,EACA,EAAoB3D,YACpBvJ,KAAKoN,mBACLpN,MAEFkE,EAAOgJ,EAAK,EAAoBzD,UAAWzJ,KAAK6M,iBAAkB7M,MAclEkE,EACElE,KAAK6L,SACL,EAAoB/B,cACpB9J,KAAK6M,iBACL7M,OAGAA,KAAK6L,SAASwB,aAAerN,KAAK6L,SAASwB,gBAAkBH,GAC/DlN,KAAKuL,kBAAkBxI,KACrBmB,EACElE,KAAK6L,SAASwB,cACd,EAAoB5D,UACpBzJ,KAAK6M,iBACL7M,MAIR,CACF,CAOA,kBAAAoN,CAAmBd,GAIjB,GAAItM,KAAKsN,UAAUhB,GAAe,CAChCtM,KAAK0M,sBAAsBJ,GAC3BtM,KAAKsL,WAAY,EACjB,MAAMiB,EAAW,IAAI,EACnB,EAAoBjD,YACpBtJ,KAAKmL,KACLmB,EACAtM,KAAKsL,eACLtM,EACAgB,KAAK2L,iBAEP3L,KAAKgD,cAAcuJ,EACrB,CACF,CAQA,eAAAL,CAAgBI,GACdtM,KAAKgM,0BAA4BM,EACjC,MAAM3D,KAAc3I,KAAKyL,QAASzL,KAAKsN,UAAUhB,IACjDtM,KAAKgD,cACH,IAAI,EACF,EAAoBuG,YACpBvJ,KAAKmL,KACLmB,EACA3D,GAGN,CAUA,gBAAAyD,CAAiBnJ,GAIf,MAAMyF,EAAgB1I,KAAKgM,0BAEvBtD,IAAiBA,EAAcxG,kBACJ,kBAArBe,EAAMsK,aAAiD,IAArBtK,EAAMsK,YAEhDtK,EAAMd,gBAEV,CAQA,SAAAmL,CAAUhB,GACR,OACEtM,KAAKsL,WACLkC,KAAKC,IAAInB,EAAaoB,QAAU1N,KAAKyL,MAAMiC,SACzC1N,KAAKwL,gBACPgC,KAAKC,IAAInB,EAAaqB,QAAU3N,KAAKyL,MAAMkC,SAAW3N,KAAKwL,cAE/D,CAMA,eAAArL,GACMH,KAAKiM,sBACP,EAAcjM,KAAKiM,qBACnBjM,KAAKiM,oBAAsB,MAE7BjM,KAAK6L,SAASlI,oBACZ,EACA3D,KAAKmM,uBAGHnM,KAAK8L,0BACP,EAAc9L,KAAK8L,yBACnB9L,KAAK8L,wBAA0B,MAGjC9L,KAAKuL,kBAAkB3D,QAAQ,GAC/B5H,KAAKuL,kBAAkB3K,OAAS,EAEhCZ,KAAK6L,SAAW,KAChBxJ,MAAMlC,iBACR,GCxZF,EAMc,aANd,GA2Ba,YA3Bb,GAkCW,UClCX,GACc,aADd,GAEQ,OAFR,GAGU,SAHV,GAIQ,OCHD,SAAS,GAAOyN,EAAWC,GAChC,IAAKD,EACH,MAAM,IAAItI,MAAMuI,EAEpB,CCHO,MAAMC,GAAOC,IA+PpB,GAjPA,MAKE,WAAAhO,CAAYiO,EAAkBC,GAK5BjO,KAAKkO,kBAAoBF,EAMzBhO,KAAKmO,aAAeF,EAMpBjO,KAAKoO,UAAY,GAMjBpO,KAAKqO,YAAc,GAMnBrO,KAAKsO,gBAAkB,CAAC,CAC1B,CAKA,KAAAzM,GACE7B,KAAKoO,UAAUxN,OAAS,EACxBZ,KAAKqO,YAAYzN,OAAS,EAC1BiB,EAAM7B,KAAKsO,gBACb,CAMA,OAAAC,GACE,MAAMC,EAAWxO,KAAKoO,UAChBK,EAAazO,KAAKqO,YAClBpH,EAAUuH,EAAS,GACF,GAAnBA,EAAS5N,QACX4N,EAAS5N,OAAS,EAClB6N,EAAW7N,OAAS,IAEpB4N,EAAS,GAAuBA,EAAS9G,MACzC+G,EAAW,GAA4BA,EAAW/G,MAClD1H,KAAK0O,QAAQ,IAEf,MAAMC,EAAa3O,KAAKmO,aAAalH,GAErC,cADOjH,KAAKsO,gBAAgBK,GACrB1H,CACT,CAOA,OAAA2H,CAAQ3H,GACN,KACIjH,KAAKmO,aAAalH,KAAYjH,KAAKsO,iBACrC,qEAEF,MAAMO,EAAW7O,KAAKkO,kBAAkBjH,GACxC,OAAI4H,GAAYf,KACd9N,KAAKoO,UAAUrL,KAAKkE,GACpBjH,KAAKqO,YAAYtL,KAAK8L,GACtB7O,KAAKsO,gBAAgBtO,KAAKmO,aAAalH,KAAY,EACnDjH,KAAK8O,UAAU,EAAG9O,KAAKoO,UAAUxN,OAAS,IACnC,EAGX,CAKA,QAAAmO,GACE,OAAO/O,KAAKoO,UAAUxN,MACxB,CAQA,kBAAAoO,CAAmBjL,GACjB,OAAe,EAARA,EAAY,CACrB,CAQA,mBAAAkL,CAAoBlL,GAClB,OAAe,EAARA,EAAY,CACrB,CAQA,eAAAmL,CAAgBnL,GACd,OAAQA,EAAQ,GAAM,CACxB,CAMA,QAAAoL,GACE,IAAItO,EACJ,IAAKA,GAAKb,KAAKoO,UAAUxN,QAAU,GAAK,EAAGC,GAAK,EAAGA,IACjDb,KAAK0O,QAAQ7N,EAEjB,CAKA,OAAAuO,GACE,OAAiC,IAA1BpP,KAAKoO,UAAUxN,MACxB,CAMA,WAAAyO,CAAYjQ,GACV,OAAOA,KAAOY,KAAKsO,eACrB,CAMA,QAAAgB,CAASrI,GACP,OAAOjH,KAAKqP,YAAYrP,KAAKmO,aAAalH,GAC5C,CAMA,OAAAyH,CAAQ3K,GACN,MAAMyK,EAAWxO,KAAKoO,UAChBK,EAAazO,KAAKqO,YAClBkB,EAAQf,EAAS5N,OACjBqG,EAAUuH,EAASzK,GACnB8K,EAAWJ,EAAW1K,GACtByL,EAAazL,EAEnB,KAAOA,EAAQwL,GAAS,GAAG,CACzB,MAAME,EAASzP,KAAKgP,mBAAmBjL,GACjC2L,EAAS1P,KAAKiP,oBAAoBlL,GAElC4L,EACJD,EAASH,GAASd,EAAWiB,GAAUjB,EAAWgB,GAC9CC,EACAD,EAENjB,EAASzK,GAASyK,EAASmB,GAC3BlB,EAAW1K,GAAS0K,EAAWkB,GAC/B5L,EAAQ4L,CACV,CAEAnB,EAASzK,GAASkD,EAClBwH,EAAW1K,GAAS8K,EACpB7O,KAAK8O,UAAUU,EAAYzL,EAC7B,CAOA,SAAA+K,CAAUU,EAAYzL,GACpB,MAAMyK,EAAWxO,KAAKoO,UAChBK,EAAazO,KAAKqO,YAClBpH,EAAUuH,EAASzK,GACnB8K,EAAWJ,EAAW1K,GAE5B,KAAOA,EAAQyL,GAAY,CACzB,MAAMI,EAAc5P,KAAKkP,gBAAgBnL,GACzC,KAAI0K,EAAWmB,GAAef,GAK5B,MAJAL,EAASzK,GAASyK,EAASoB,GAC3BnB,EAAW1K,GAAS0K,EAAWmB,GAC/B7L,EAAQ6L,CAIZ,CACApB,EAASzK,GAASkD,EAClBwH,EAAW1K,GAAS8K,CACtB,CAKA,YAAAgB,GACE,MAAM7B,EAAmBhO,KAAKkO,kBACxBM,EAAWxO,KAAKoO,UAChBK,EAAazO,KAAKqO,YACxB,IAAItK,EAAQ,EACZ,MAAMpD,EAAI6N,EAAS5N,OACnB,IAAIqG,EAASpG,EAAGgO,EAChB,IAAKhO,EAAI,EAAGA,EAAIF,IAAKE,EACnBoG,EAAUuH,EAAS3N,GACnBgO,EAAWb,EAAiB/G,GACxB4H,GAAYf,UACP9N,KAAKsO,gBAAgBtO,KAAKmO,aAAalH,KAE9CwH,EAAW1K,GAAS8K,EACpBL,EAASzK,KAAWkD,GAGxBuH,EAAS5N,OAASmD,EAClB0K,EAAW7N,OAASmD,EACpB/D,KAAKmP,UACP,GC7IF,GAtGA,cAAwB,GAKtB,WAAApP,CAAY+P,EAAsBC,GAChC1N,OACG4E,GAAY6I,EAAqBE,MAAM,KAAM/I,KAC7CA,GAAYA,EAAQ,GAAGgJ,WAI1BjQ,KAAKkQ,uBAAyBlQ,KAAKmQ,iBAAiB7L,KAAKtE,MAMzDA,KAAKoQ,oBAAsBL,EAM3B/P,KAAKqQ,cAAgB,EAMrBrQ,KAAKsQ,kBAAoB,CAAC,CAC5B,CAOA,OAAA1B,CAAQ3H,GACN,MAAMsJ,EAAQlO,MAAMuM,QAAQ3H,GAK5B,OAJIsJ,GACWtJ,EAAQ,GAChBvE,iBAAiB,EAAkB1C,KAAKkQ,wBAExCK,CACT,CAKA,eAAAC,GACE,OAAOxQ,KAAKqQ,aACd,CAMA,gBAAAF,CAAiBlN,GACf,MAAMwN,EAAmDxN,EAAY,OAC/DyN,EAAQD,EAAKE,WACnB,GCrEM,IDsEJD,GCjEG,IDkEHA,GCjEG,IDkEHA,EACA,CCpEG,IDqECA,GACFD,EAAK9M,oBAAoB,EAAkB3D,KAAKkQ,wBAElD,MAAMU,EAAUH,EAAKR,SACjBW,KAAW5Q,KAAKsQ,2BACXtQ,KAAKsQ,kBAAkBM,KAC5B5Q,KAAKqQ,eAETrQ,KAAKoQ,qBACP,CACF,CAMA,aAAAS,CAAcC,EAAiBC,GAC7B,IAAIC,EAAW,EACf,KACEhR,KAAKqQ,cAAgBS,GACrBE,EAAWD,GACX/Q,KAAK+O,WAAa,GAClB,CACA,MAAM0B,EAAOzQ,KAAKuO,UAAU,GACtBqC,EAAUH,EAAKR,SCpGnB,IDqGYQ,EAAKE,YACeC,KAAW5Q,KAAKsQ,oBAChDtQ,KAAKsQ,kBAAkBM,IAAW,IAChC5Q,KAAKqQ,gBACLW,EACFP,EAAKQ,OAET,CACF,GE9GF,IACEC,OAAQ,SACRC,WAAY,aACZC,SAAU,YCEL,SAAS,GAAM7P,EAAO8P,EAAKC,GAChC,OAAO9D,KAAK6D,IAAI7D,KAAK8D,IAAI/P,EAAO8P,GAAMC,EACxC,CAaO,SAASC,GAAuBC,EAAGC,EAAGC,EAAIC,EAAIC,EAAIC,GACvD,MAAMC,EAAKF,EAAKF,EACVK,EAAKF,EAAKF,EAChB,GAAW,IAAPG,GAAmB,IAAPC,EAAU,CACxB,MAAMC,IAAMR,EAAIE,GAAMI,GAAML,EAAIE,GAAMI,IAAOD,EAAKA,EAAKC,EAAKA,GACxDC,EAAI,GACNN,EAAKE,EACLD,EAAKE,GACIG,EAAI,IACbN,GAAMI,EAAKE,EACXL,GAAMI,EAAKC,EAEf,CACA,OAAO,GAAgBR,EAAGC,EAAGC,EAAIC,EACnC,CAUO,SAAS,GAAgBD,EAAIC,EAAIC,EAAIC,GAC1C,MAAMC,EAAKF,EAAKF,EACVK,EAAKF,EAAKF,EAChB,OAAOG,EAAKA,EAAKC,EAAKA,CACxB,CA+DO,SAAS,GAAUE,GACxB,OAAyB,IAAjBA,EAAwBzE,KAAK0E,EACvC,CAQO,SAAS,GAAUC,GACxB,OAAQA,EAAiB3E,KAAK0E,GAAM,GACtC,CASO,SAAS,GAAO7R,EAAGC,GACxB,MAAM8R,EAAI/R,EAAIC,EACd,OAAO8R,EAAI9R,EAAI,EAAI8R,EAAI9R,EAAI8R,CAC7B,CAUO,SAASC,GAAKhS,EAAGC,EAAGkR,GACzB,OAAOnR,EAAImR,GAAKlR,EAAID,EACtB,CAQO,SAAS,GAAQM,EAAG2R,GACzB,MAAMC,EAAS/E,KAAKgF,IAAI,GAAIF,GAC5B,OAAO9E,KAAKiF,MAAM9R,EAAI4R,GAAUA,CAClC,CASO,SAASE,GAAM9R,EAAG2R,GACvB,OAAO9E,KAAKiF,MAAM,GAAQ9R,EAAG2R,GAC/B,CAoBO,SAASI,GAAK/R,EAAG2R,GACtB,OAAO9E,KAAKkF,KAAK,GAAQ/R,EAAG2R,GAC9B,CASO,SAASK,GAAKhS,EAAG0Q,EAAKC,GAC3B,GAAI3Q,GAAK0Q,GAAO1Q,EAAI2Q,EAClB,OAAO3Q,EAET,MAAMiS,EAAQtB,EAAMD,EACpB,QAAW1Q,EAAI0Q,GAAOuB,EAASA,GAASA,EAASvB,CACnD,CCrMO,SAASwB,GAAaC,EAAQC,EAAYC,GAC/C,OAAO,SASKC,EAAQC,EAAYC,EAAMC,EAAUC,GAC5C,IAAKJ,EACH,OAEF,IAAKC,IAAeH,EAClB,OAAOE,EAET,MAAMK,EAAYP,EAAa,EAAII,EAAK,GAAKD,EACvCK,EAAaR,EAAa,EAAII,EAAK,GAAKD,EACxCM,EAASH,EAAcA,EAAY,GAAK,EACxCI,EAASJ,EAAcA,EAAY,GAAK,EAC9C,IAAIK,EAAOZ,EAAO,GAAKQ,EAAY,EAAIE,EACnCG,EAAOb,EAAO,GAAKQ,EAAY,EAAIE,EACnCI,EAAOd,EAAO,GAAKS,EAAa,EAAIE,EACpCI,EAAOf,EAAO,GAAKS,EAAa,EAAIE,EAIpCC,EAAOC,IACTD,GAAQC,EAAOD,GAAQ,EACvBC,EAAOD,GAELE,EAAOC,IACTD,GAAQC,EAAOD,GAAQ,EACvBC,EAAOD,GAGT,IAAIpC,EAAI,GAAMyB,EAAO,GAAIS,EAAMC,GAC3BlC,EAAI,GAAMwB,EAAO,GAAIW,EAAMC,GAG/B,GAAIT,GAAYJ,GAAUE,EAAY,CACpC,MAAMY,EAAQ,GAAKZ,EACnB1B,IACGsC,EAAQtG,KAAKuG,IAAI,EAAIvG,KAAK8D,IAAI,EAAGoC,EAAOT,EAAO,IAAMa,GACtDA,EAAQtG,KAAKuG,IAAI,EAAIvG,KAAK8D,IAAI,EAAG2B,EAAO,GAAKU,GAAQG,GACvDrC,IACGqC,EAAQtG,KAAKuG,IAAI,EAAIvG,KAAK8D,IAAI,EAAGsC,EAAOX,EAAO,IAAMa,GACtDA,EAAQtG,KAAKuG,IAAI,EAAIvG,KAAK8D,IAAI,EAAG2B,EAAO,GAAKY,GAAQC,EACzD,CAEA,MAAO,CAACtC,EAAGC,EAEf,CACF,CAMO,SAASuC,GAAKf,GACnB,OAAOA,CACT,CCvDO,SAASgB,GAAeC,GAC7B,MAAMpB,EA4KC,CAAC/E,IAAUA,KAAU,KAAW,KA3KvC,IAAK,IAAIlN,EAAI,EAAG2C,EAAK0Q,EAAYtT,OAAQC,EAAI2C,IAAM3C,EACjDsT,GAAiBrB,EAAQoB,EAAYrT,IAEvC,OAAOiS,CACT,CAiEO,SAASsB,GAAyBtB,EAAQtB,EAAGC,GAClD,IAAIK,EAAIC,EAeR,OAbED,EADEN,EAAIsB,EAAO,GACRA,EAAO,GAAKtB,EACRsB,EAAO,GAAKtB,EAChBA,EAAIsB,EAAO,GAEX,EAGLf,EADEN,EAAIqB,EAAO,GACRA,EAAO,GAAKrB,EACRqB,EAAO,GAAKrB,EAChBA,EAAIqB,EAAO,GAEX,EAEAhB,EAAKA,EAAKC,EAAKA,CACxB,CAUO,SAASsC,GAAmBvB,EAAQ7J,GACzC,OAAOqL,GAAWxB,EAAQ7J,EAAW,GAAIA,EAAW,GACtD,CAcO,SAASsL,GAAeC,EAASC,GACtC,OACED,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,EAE1B,CAWO,SAASF,GAAWxB,EAAQtB,EAAGC,GACpC,OAAOqB,EAAO,IAAMtB,GAAKA,GAAKsB,EAAO,IAAMA,EAAO,IAAMrB,GAAKA,GAAKqB,EAAO,EAC3E,CASO,SAAS4B,GAAuB5B,EAAQ7J,GAC7C,MAAMyK,EAAOZ,EAAO,GACdc,EAAOd,EAAO,GACda,EAAOb,EAAO,GACde,EAAOf,EAAO,GACdtB,EAAIvI,EAAW,GACfwI,EAAIxI,EAAW,GACrB,IAAI0L,ECpKK,EDkLT,OAbInD,EAAIkC,EACNiB,GCjKI,GDkKKnD,EAAImC,IACbgB,GCrKK,GDuKHlD,EAAImC,EACNe,GCvKK,EDwKIlD,EAAIoC,IACbc,GC3KK,GAFE,ID+KLA,IACFA,EC/KY,GDiLPA,CACT,CAoBO,SAASC,GAAelB,EAAME,EAAMD,EAAME,EAAMgB,GACrD,OAAIA,GACFA,EAAK,GAAKnB,EACVmB,EAAK,GAAKjB,EACViB,EAAK,GAAKlB,EACVkB,EAAK,GAAKhB,EACHgB,GAEF,CAACnB,EAAME,EAAMD,EAAME,EAC5B,CAOO,SAASiB,GAAoBD,GAClC,OAAOD,GAAe7G,IAAUA,KAAU,KAAW,IAAW8G,EAClE,CA2DO,SAAS,GAAOL,EAASC,GAC9B,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CA6CO,SAASN,GAAiBrB,EAAQ7J,GACnCA,EAAW,GAAK6J,EAAO,KACzBA,EAAO,GAAK7J,EAAW,IAErBA,EAAW,GAAK6J,EAAO,KACzBA,EAAO,GAAK7J,EAAW,IAErBA,EAAW,GAAK6J,EAAO,KACzBA,EAAO,GAAK7J,EAAW,IAErBA,EAAW,GAAK6J,EAAO,KACzBA,EAAO,GAAK7J,EAAW,GAE3B,CAsBO,SAAS8L,GACdjC,EACAkC,EACAC,EACAC,EACAC,GAEA,KAAOF,EAASC,EAAKD,GAAUE,EAC7BC,GAAStC,EAAQkC,EAAgBC,GAASD,EAAgBC,EAAS,IAErE,OAAOnC,CACT,CAmBO,SAASsC,GAAStC,EAAQtB,EAAGC,GAClCqB,EAAO,GAAKtF,KAAK6D,IAAIyB,EAAO,GAAItB,GAChCsB,EAAO,GAAKtF,KAAK6D,IAAIyB,EAAO,GAAIrB,GAChCqB,EAAO,GAAKtF,KAAK8D,IAAIwB,EAAO,GAAItB,GAChCsB,EAAO,GAAKtF,KAAK8D,IAAIwB,EAAO,GAAIrB,EAClC,CAoDO,SAAS4D,GAAcvC,GAC5B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASwC,GAAexC,GAC7B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAAS,GAAUA,GACxB,MAAO,EAAEA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,EACjE,CA6CO,SAAS,GAAkBG,EAAQC,EAAYqC,EAAUpC,EAAM0B,GACpE,MAAOW,EAAIC,EAAI/D,EAAIC,EAAIC,EAAIC,EAAI6D,EAAIC,GAsB9B,SAA4B1C,EAAQC,EAAYqC,EAAUpC,GAC/D,MAAMrB,EAAMoB,EAAaC,EAAK,GAAM,EAC9BpB,EAAMmB,EAAaC,EAAK,GAAM,EAC9ByC,EAAcpI,KAAKqI,IAAIN,GACvBO,EAActI,KAAKuI,IAAIR,GACvBS,EAAOlE,EAAK8D,EACZK,EAAOnE,EAAKgE,EACZI,EAAOnE,EAAK6D,EACZO,EAAOpE,EAAK+D,EACZtE,EAAIyB,EAAO,GACXxB,EAAIwB,EAAO,GACjB,MAAO,CACLzB,EAAIwE,EAAOG,EACX1E,EAAIwE,EAAOC,EACX1E,EAAIwE,EAAOG,EACX1E,EAAIwE,EAAOC,EACX1E,EAAIwE,EAAOG,EACX1E,EAAIwE,EAAOC,EACX1E,EAAIwE,EAAOG,EACX1E,EAAIwE,EAAOC,EACX1E,EAAIwE,EAAOG,EACX1E,EAAIwE,EAAOC,EAEf,CA7C2CE,CACvCnD,EACAC,EACAqC,EACApC,GAEF,OAAOyB,GACLpH,KAAK6D,IAAImE,EAAI9D,EAAIE,EAAI8D,GACrBlI,KAAK6D,IAAIoE,EAAI9D,EAAIE,EAAI8D,GACrBnI,KAAK8D,IAAIkE,EAAI9D,EAAIE,EAAI8D,GACrBlI,KAAK8D,IAAImE,EAAI9D,EAAIE,EAAI8D,GACrBd,EAEJ,CAwCO,SAASwB,GAAUvD,GACxB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CAoBO,SAASwD,GAAgB9B,EAASC,EAASI,GAChD,MAAM0B,EAAe1B,GAvZd,CAAC9G,IAAUA,KAAU,KAAW,KAgbvC,OAxBIyI,GAAWhC,EAASC,IAClBD,EAAQ,GAAKC,EAAQ,GACvB8B,EAAa,GAAK/B,EAAQ,GAE1B+B,EAAa,GAAK9B,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB8B,EAAa,GAAK/B,EAAQ,GAE1B+B,EAAa,GAAK9B,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB8B,EAAa,GAAK/B,EAAQ,GAE1B+B,EAAa,GAAK9B,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB8B,EAAa,GAAK/B,EAAQ,GAE1B+B,EAAa,GAAK9B,EAAQ,IAG5BK,GAAoByB,GAEfA,CACT,CA0BO,SAASE,GAAW3D,GACzB,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAAS4D,GAAY5D,GAC1B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAAS,GAASA,GACvB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CASO,SAAS0D,GAAWhC,EAASC,GAClC,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CAQO,SAAS,GAAQ3B,GACtB,OAAOA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,EACrD,CE/cO,SAAS,GAAO6D,EAAaC,GAClC,IAAI7V,GAAS,EACb,IAAK,IAAIF,EAAI8V,EAAY/V,OAAS,EAAGC,GAAK,IAAKA,EAC7C,GAAI8V,EAAY9V,IAAM+V,EAAY/V,GAAI,CACpCE,GAAS,EACT,KACF,CAEF,OAAOA,CACT,CAoBO,SAAS8V,GAAO5N,EAAY6N,GACjC,MAAMC,EAAWvJ,KAAKqI,IAAIiB,GACpBE,EAAWxJ,KAAKuI,IAAIe,GACpBtF,EAAIvI,EAAW,GAAK8N,EAAW9N,EAAW,GAAK+N,EAC/CvF,EAAIxI,EAAW,GAAK8N,EAAW9N,EAAW,GAAK+N,EAGrD,OAFA/N,EAAW,GAAKuI,EAChBvI,EAAW,GAAKwI,EACTxI,CACT,CCjQO,SAASgO,GAAQjF,GACtB,OAAO,EAXF,SAAgBA,GACrB,OAAOxE,KAAKgF,IAAIR,EAAG,EACrB,CASakF,CAAO,EAAIlF,EACxB,CAQO,SAASmF,GAASnF,GACvB,OAAO,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,CACjC,CAQO,SAASoF,GAAOpF,GACrB,OAAOA,CACT,CC/BA,MAAMqF,GAEE,EAQR,IAAIC,GATI,EAmCD,SAASC,MAAQC,GAClBF,GAAQD,IAGZI,QAAQF,QAAQC,EAClB,CCRO,MAAME,GAAkB,CAE7B,QAAW,SAAW,EAAIlK,KAAK0E,IAC/B,QAAY,EAAI1E,KAAK0E,GAAK,QAAW,IACrC,GAAM,MACN,EAAK,EACL,QAAS,KAAO,MCsOlB,GA3NA,MAIE,WAAAnS,CAAYoH,GAKVnH,KAAK2X,MAAQxQ,EAAQyQ,KASrB5X,KAAK6X,OAAoD1Q,EAAa,MAStEnH,KAAK8X,aAA6B9Y,IAAnBmI,EAAQ2L,OAAuB3L,EAAQ2L,OAAS,KAS/D9S,KAAK+X,kBACqB/Y,IAAxBmI,EAAQ6Q,YAA4B7Q,EAAQ6Q,YAAc,KAM5DhY,KAAKiY,sBACyBjZ,IAA5BmI,EAAQ+Q,gBAAgC/Q,EAAQ+Q,gBAAkB,MAMpElY,KAAKmY,aAA6BnZ,IAAnBmI,EAAQiR,QAAuBjR,EAAQiR,OAMtDpY,KAAKqY,aAAerY,KAAKmY,UAAWnY,KAAK8X,SAMzC9X,KAAKsY,wBAA0BnR,EAAQoR,mBAMvCvY,KAAKwY,iBAAmB,KAMxBxY,KAAKyY,eAAiBtR,EAAQuR,aAChC,CAKA,QAAAC,GACE,OAAO3Y,KAAKqY,SACd,CAOA,OAAAO,GACE,OAAO5Y,KAAK2X,KACd,CAOA,SAAAkB,GACE,OAAO7Y,KAAK8X,OACd,CAOA,QAAAgB,GACE,OAAO9Y,KAAK6X,MACd,CASA,gBAAAkB,GACE,OAAO/Y,KAAKyY,gBAAkBf,GAAgB1X,KAAK6X,OACrD,CAOA,cAAAmB,GACE,OAAOhZ,KAAK+X,YACd,CAaA,kBAAAkB,GACE,OAAOjZ,KAAKiY,gBACd,CAOA,QAAAiB,GACE,OAAOlZ,KAAKmY,OACd,CAOA,SAAAgB,CAAUf,GACRpY,KAAKmY,QAAUC,EACfpY,KAAKqY,aAAeD,IAAUpY,KAAK8X,QACrC,CAKA,kBAAAsB,GACE,OAAOpZ,KAAKwY,gBACd,CAKA,kBAAAa,CAAmBC,GACjBtZ,KAAKwY,iBAAmBc,CAC1B,CAOA,SAAAC,CAAUzG,GACR9S,KAAK8X,QAAUhF,EACf9S,KAAKqY,aAAerY,KAAKmY,UAAWrF,EACtC,CAQA,cAAA0G,CAAexB,GACbhY,KAAK+X,aAAeC,CACtB,CAQA,qBAAAyB,CAAsBC,GACpB1Z,KAAKsY,wBAA0BoB,CACjC,CAOA,sBAAAC,GACE,OAAO3Z,KAAKsY,uBACd,GC1QWsB,GAAS,QAMTC,GAAYrM,KAAK0E,GAAK0H,GAMtBE,GAAS,EAAED,IAAYA,GAAWA,GAAWA,IAM7CE,GAAe,EAAE,KAAM,GAAI,IAAK,IAOhCC,GAAaJ,GAASpM,KAAKuG,IAAIvG,KAAKyM,IAAIzM,KAAK0E,GAAK,IAM/D,MAAMgI,WAA2B,GAI/B,WAAAna,CAAY6X,GACVvV,MAAM,CACJuV,KAAMA,EACNuC,MAAO,IACPrH,OAAQgH,GACR1B,QAAQ,EACRJ,YAAa+B,GACbxB,mBAAoB,SAAUrF,EAAYkH,GACxC,OAAOlH,EAAa1F,KAAK6M,KAAKD,EAAM,GAAKR,GAC3C,GAEJ,EASK,MAAMU,GAAc,CACzB,IAAIJ,GAAmB,aACvB,IAAIA,GAAmB,eACvB,IAAIA,GAAmB,eACvB,IAAIA,GAAmB,eACvB,IAAIA,GAAmB,8CACvB,IAAIA,GAAmB,iDC7DlB,MAQM,GAAS,EAAE,KAAM,GAAI,IAAK,IAM1B,GAdS,QAcU1M,KAAK0E,GAAe,IAUpD,MAAMqI,WAA2B,GAK/B,WAAAxa,CAAY6X,EAAMM,GAChB7V,MAAM,CACJuV,KAAMA,EACNuC,MAAO,UACPrH,OAAQ,GACRoF,gBAAiBA,EACjBE,QAAQ,EACRM,cAAe,GACfV,YAAa,IAEjB,EASK,MAAM,GAAc,CACzB,IAAIuC,GAAmB,UACvB,IAAIA,GAAmB,YAAa,OACpC,IAAIA,GAAmB,iCACvB,IAAIA,GAAmB,4BACvB,IAAIA,GAAmB,gDACvB,IAAIA,GAAmB,+CAAgD,OACvE,IAAIA,GAAmB,6CAA8C,QC3DvE,IAAIC,GAAQ,CAAC,ECETC,GAAa,CAAC,EAiBX,SAAS,GAAI5T,EAAQ6T,EAAaC,GACvC,MAAMC,EAAa/T,EAAO+R,UACpBiC,EAAkBH,EAAY9B,UAC9BgC,KAAcH,KAClBA,GAAWG,GAAc,CAAC,GAE5BH,GAAWG,GAAYC,GAAmBF,CAC5C,CA4BO,SAAS,GAAIC,EAAYC,GAC9B,OAAID,KAAcH,IAAcI,KAAmBJ,GAAWG,GACrDH,GAAWG,GAAYC,GAEzB,IACT,CC3CA,MAAMC,GAAK,MAELC,GAAI,UACJC,GAAKD,GAAIA,GACTE,GAAKD,GAAKD,GACVG,GAAOH,IAAK,EAAIA,IAEhBI,GAAS3N,KAAK4N,KAAK,EAAIL,IACvBM,IAAM,EAAIF,KAAW,EAAIA,IACzBG,GAAMD,GAAKA,GACXE,GAAMD,GAAMD,GACZG,GAAMD,GAAMF,GACZI,GAAMD,GAAMH,GAEZK,GAAK,kBAELC,GAAM,GAAKX,GAAM,IAAO,GAAKC,GAAM,KACnCW,GAAM,GAAKX,GAAM,KAEjBY,GAAK,IAAUR,GAAM,GAAK,GAAME,GAAO,IAAM,IAAOE,GACpDK,GAAM,GAAK,GAAMR,GAAO,GAAK,GAAME,GACnCO,GAAM,IAAM,GAAMR,GAAO,IAAM,IAAOE,GACtCO,GAAM,KAAO,IAAOR,GAEpBS,GAAI,QAQV,SAASC,GAASC,EAASC,EAAUC,GACnC,MAAM7K,EAAI2K,EAAU,IAIdG,GAHID,EAAKE,MAAQH,EAAWA,EAAW,KAE/BtB,IACEmB,GAAIP,IAEdc,EACJF,EACAT,GAAKrO,KAAKuI,IAAI,EAAIuG,GAClBR,GAAKtO,KAAKuI,IAAI,EAAIuG,GAClBP,GAAKvO,KAAKuI,IAAI,EAAIuG,GAClBN,GAAKxO,KAAKuI,IAAI,EAAIuG,GAEdG,EAAOjP,KAAKuI,IAAIyG,GAChBE,EAAQD,EAAOA,EAEfE,EAAOnP,KAAKqI,IAAI2G,GAEhBI,EAAOH,EAAOE,EACdE,EAAQD,EAAOA,EACfE,EAAQD,EAAQA,EAEhBE,EAAQ,EAAIhC,GAAI2B,EAChBM,EAAYxP,KAAK4N,KAAK,EAAIL,GAAI2B,GAK9BO,EAAI/B,GAAOyB,GAAQ,EACnBO,EAAKD,EAAIA,EAET/d,EAAIsS,GANAyK,GAAIe,EAMKlC,IACbqC,EAAKje,EAAIA,EACTke,EAAKD,EAAKje,EACVme,EAAKD,EAAKle,EACVoe,EAAKD,EAAKne,EAGVqe,EACJf,EACCI,IAdQ,EAAI7B,IAAKgC,IAefI,EAAK,EAAKE,EAAK,IAAO,EAAI,EAAIR,EAAQ,GAAKI,EAAI,EAAIC,EAAK,EAAIhC,KALtDoC,EAAKpe,EAMR,KAAQ,GAAK,GAAK2d,EAAQ,IAAMI,EAAI,GAAKH,EAAQ,IAAM5B,GAAO,EAAIgC,GAE1E,IAAIM,GACDte,EACEke,EAAK,GAAM,EAAI,EAAIP,EAAQI,GAC3BK,EAAK,KAAQ,EAAI,EAAIL,EAAI,GAAKJ,EAAQ,EAAIK,EAAK,EAAIhC,GAAO,GAAK4B,IAClEH,EAQF,OANAa,EAAY7K,GACV6K,EAAY,GAAUC,GAAuBpB,EAAKqB,UACjDlQ,KAAK0E,GACN1E,KAAK0E,IAGA,CAAC,GAAUsL,GAAY,GAAUD,GAC1C,CAaA,SAASI,GAAWH,EAAWD,EAAUlB,GACvCmB,EAAY7K,GAAK6K,GAVG,IACA,KAWhBD,GAde,GAejBA,GAfiB,GAgBRA,EAfQ,KAgBjBA,EAhBiB,IAmBnB,MAAMK,EAAS,GAAUL,GACnBM,EAASrQ,KAAKuI,IAAI6H,GAClBE,EAAStQ,KAAKqI,IAAI+H,GAElBG,EAASF,EAASC,EAClBE,EAAUD,EAASA,EACnBE,EAAUD,EAAUA,EAEpBE,EAAS,GAAUV,GAEnBW,EAAgB,GADHV,GAAuBpB,EAAKqB,SAGzC/c,EAAIsb,GAAIzO,KAAK4N,KAAK,EAAIL,GAAI8C,GAAU,GACpCZ,EAAI/B,GAAO4C,GAAU,EAErBzd,EAAIyd,EAASnL,GAAKuL,EAASC,GAAgB3Q,KAAK0E,GAAI1E,KAAK0E,IACzDkM,EAAK/d,EAAIA,EACTge,EAAKD,EAAK/d,EACVie,EAAKD,EAAKhe,EACVke,EAAKD,EAAKje,EACVme,EAAKD,EAAKle,EAEVoe,EACJxC,IACCP,GAAKkC,EAzHC,oBA0HApQ,KAAKuI,IAAI,EAAI6H,GAClBjC,GAAKnO,KAAKuI,IAAI,EAAI6H,GAClBhC,GAAKpO,KAAKuI,IAAI,EAAI6H,IAEhBzB,EACJrB,GACEna,GACCN,EACEge,EAAK,GAAM,EAAIL,EAAUf,GACzBsB,EAAK,KAAQ,EAAI,GAAKP,EAAUC,EAAU,GAAKhB,EAAI,GAAK/B,KAC7D,IAEF,IAAIkB,EACFtB,IACC2D,EACC9d,EACEod,GACCK,EAAK,EACHE,EAAK,IAAO,EAAIN,EAAU,EAAIf,EAAI,EAAIA,GAAK,GAC3CuB,EAAK,KAAQ,GAAK,GAAKR,EAAUC,EAAU,IAAMhB,EAAI,IAAM/B,MAMpE,OAJKmB,EAAKE,QACRH,GAAY,KAGP,CAACD,EAASC,EACnB,CAMA,SAASqB,GAAuBpB,GAC9B,OAAoB,GAAZA,EAAO,GAAS,IAAM,CAChC,CAKA,MAAMqC,GAAc,CAClB,eACA,gCACA,0DAOK,SAASC,GAAa/G,GAC3B,IAAIgH,EAAS,EACb,IAAK,MAAMC,KAAMH,GAAa,CAC5B,MAAMI,EAAQlH,EAAKkH,MAAMD,GACzB,GAAIC,EAAO,CACTF,EAASG,SAASD,EAAM,IACxB,KACF,CACF,CACA,IAAKF,EACH,OAAO,KAGT,IAAIlB,EAAS,EACTnB,GAAQ,EAOZ,OANIqC,EAAS,OAASA,EAAS,MAC7BlB,EAASkB,EAAS,MACTA,EAAS,OAASA,EAAS,QACpCrC,GAAQ,EACRmB,EAASkB,EAAS,OAEflB,EAIE,CAACA,SAAQnB,SAHP,IAIX,CAOA,SAASyC,GAAsBC,EAAa5C,GAC1C,OAAO,SAAU6C,EAAOC,EAAQC,EAAWjK,GACzC,MAAMvU,EAASse,EAAMte,OACrBwe,EAAYA,EAAY,EAAIA,EAAY,EACxCjK,EAASA,GAAUiK,EACdD,IAEDA,EADEC,EAAY,EACLF,EAAMG,QAEN,IAAIta,MAAMnE,IAGvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAKsU,EAAQ,CACvC,MAAM3D,EAAI0N,EAAMre,GACV4Q,EAAIyN,EAAMre,EAAI,GACdye,EAAQL,EAAYzN,EAAGC,EAAG4K,GAChC8C,EAAOte,GAAKye,EAAM,GAClBH,EAAOte,EAAI,GAAKye,EAAM,EACxB,CACA,OAAOH,CACT,CACF,CCtOO,SAASI,GAAYC,EAAItC,EAAIuC,GAClCA,EAASA,GAZmB,UAa5B,MAAMC,EAAO,GAAUF,EAAG,IACpBG,EAAO,GAAUzC,EAAG,IACpB0C,GAAeD,EAAOD,GAAQ,EAC9BG,EAAc,GAAU3C,EAAG,GAAKsC,EAAG,IAAM,EACzCnf,EACJmN,KAAKuI,IAAI6J,GAAepS,KAAKuI,IAAI6J,GACjCpS,KAAKuI,IAAI8J,GACPrS,KAAKuI,IAAI8J,GACTrS,KAAKqI,IAAI6J,GACTlS,KAAKqI,IAAI8J,GACb,OAAO,EAAIF,EAASjS,KAAKsS,MAAMtS,KAAK4N,KAAK/a,GAAImN,KAAK4N,KAAK,EAAI/a,GAC7D,CCqDA,MAAM0f,GAAqB,CFsLpB,SAAwBC,GAC7B,MAAM3D,EAAOsC,GAAaqB,EAAWpH,WACrC,OAAKyD,EAIE,CACL4D,QAASjB,GAAsBrB,GAAYtB,GAC3C6D,QAASlB,GAAsB9C,GAAUG,IALlC,IAOX,GE3LM8D,GAAsB,CFqKrB,SAAwBvI,GAE7B,OADa+G,GAAa/G,GAInB,IAAI,GAAW,CAACA,OAAMuC,MAAO,MAF3B,IAGX,GErJA,IAAIiG,IAAwB,EAgBrB,SAASC,GAAenB,EAAOC,GACpC,QAAengB,IAAXmgB,EACF,IAAK,IAAIte,EAAI,EAAG2C,EAAK0b,EAAMte,OAAQC,EAAI2C,IAAM3C,EAC3Cse,EAAOte,GAAKqe,EAAMre,QAIpBse,EAASD,EAAMG,QAEjB,OAAOF,CACT,CAwBO,SAASmB,GAAcN,IJ9IvB,SAAapI,EAAMoI,GACxBxF,GAAM5C,GAAQoI,CAChB,CI6IE,CAAQA,EAAWpH,UAAWoH,GAC9B,GAAiBA,EAAYA,EAAYK,GAC3C,CAkBO,SAAS,GAAIE,GAClB,GAAgC,iBAAnBA,EACX,OAAOA,EAET,MAAMP,EJlLJxF,GAFgB5C,EIoLS2I,IJjLzB/F,GAAM5C,EAAK4I,QAAQ,yCAA0C,aAC7D,KAJG,IAAa5I,EIqLlB,GAAIoI,EACF,OAAOA,EAET,IAAK,MAAMS,KAAkBN,GAAqB,CAChD,MAAMH,EAAaS,EAAeF,GAClC,GAAIP,EACF,OAAOA,CAEX,CACA,OAAO,IACT,CAsBO,SAASzH,GAAmByH,EAAY9M,EAAYkH,EAAOD,GAEhE,IAAIuG,EACJ,MAAMpf,GAFN0e,EAAa,GAAIA,IAESrG,yBAC1B,GAAIrY,GAEF,GADAof,EAAkBpf,EAAO4R,EAAYkH,GACjCD,GAASA,IAAU6F,EAAWlH,WAAY,CAC5C,MAAMJ,EAAgBsH,EAAWjH,mBAC7BL,IACFgI,EACGA,EAAkBhI,EAAiBhB,GAAgByC,GAE1D,MACK,CACL,MAAMwG,EAAYX,EAAWlH,WAC7B,GAAkB,WAAb6H,IAA2BxG,GAAmB,WAATA,EACxCuG,EAAkBxN,MACb,CAIL,MAAM0N,EAAaC,GACjBb,EACA,GAAI,cAEN,GAAKY,GAA4B,YAAdD,EAGZ,CACL,IAAIG,EAAW,CACb1G,EAAM,GAAKlH,EAAa,EACxBkH,EAAM,GACNA,EAAM,GAAKlH,EAAa,EACxBkH,EAAM,GACNA,EAAM,GACNA,EAAM,GAAKlH,EAAa,EACxBkH,EAAM,GACNA,EAAM,GAAKlH,EAAa,GAE1B4N,EAAWF,EAAWE,EAAUA,EAAU,GAG1CJ,GAFcnB,GAAYuB,EAASzB,MAAM,EAAG,GAAIyB,EAASzB,MAAM,EAAG,IACnDE,GAAYuB,EAASzB,MAAM,EAAG,GAAIyB,EAASzB,MAAM,EAAG,KAC9B,CACvC,MAhBEqB,EAAkBxN,EAAa8M,EAAWjH,mBAiB5C,MAAML,EAAgByB,EAClBzC,GAAgByC,GAChB6F,EAAWjH,wBACO/Z,IAAlB0Z,IACFgI,GAAmBhI,EAEvB,CACF,CACA,OAAOgI,CACT,CASO,SAASK,GAAyBC,IAhHlC,SAAwBA,GAC7BA,EAAYpZ,QAAQ0Y,GACtB,CA+GEW,CAAeD,GACfA,EAAYpZ,SAAQ,SAAUf,GAC5Bma,EAAYpZ,SAAQ,SAAU8S,GACxB7T,IAAW6T,GACb,GAAiB7T,EAAQ6T,EAAa2F,GAE1C,GACF,GACF,CA0CO,SAASa,GAAiBlB,EAAYmB,GAC3C,OAAKnB,EAGqB,iBAAfA,EACF,GAAIA,GAEoB,EALxB,GAAImB,EAMf,CA0HO,SAASC,GAAWC,EAAaC,GACtC,GAAID,IAAgBC,EAClB,OAAO,EAET,MAAMC,EAAaF,EAAYvI,aAAewI,EAAYxI,WAC1D,OAAIuI,EAAYzI,YAAc0I,EAAY1I,WAGpBiI,GAA4BQ,EAAaC,KACtCjB,KAHhBkB,CAIX,CAWO,SAASV,GAA4Bha,EAAQ6T,GAClD,MAAME,EAAa/T,EAAO+R,UACpBiC,EAAkBH,EAAY9B,UACpC,IAAI4I,EAAgB,GAAiB5G,EAAYC,GACjD,GAAI2G,EACF,OAAOA,EAMT,IAAIC,EAAmB,KAKnBC,EAAwB,KAG5B,IAAK,MAAMC,KAAkB5B,GACtB0B,IACHA,EAAmBE,EAAe9a,IAE/B6a,IACHA,EAAwBC,EAAejH,IAI3C,IAAK+G,IAAqBC,EACxB,OAAO,KAGT,MAAME,EAAmB,YACzB,GAAKF,EAQE,GAAKD,EASVD,EAAgBK,GACdJ,EAAiBvB,QACjBwB,EAAsBzB,aAXI,CAC5B,MAAM6B,EAAa,GAAiBlH,EAAYgH,GAC5CE,IACFN,EAAgBK,GACdC,EACAJ,EAAsBzB,SAG5B,KAhB4B,CAC1B,MAAM8B,EAAgB,GAAiBH,EAAkB/G,GACrDkH,IACFP,EAAgBK,GACdJ,EAAiBvB,QACjB6B,GAGN,CAqBA,OANIP,IACFlB,GAAczZ,GACdyZ,GAAc5F,GACd,GAAiB7T,EAAQ6T,EAAa8G,IAGjCA,CACT,CAOA,SAASK,GAAsBG,EAAIC,GACjC,OAAO,SAAU/C,EAAOC,EAAQ+C,EAAY/M,GAE1C,OADAgK,EAAS6C,EAAG9C,EAAOC,EAAQ+C,EAAY/M,GAChC8M,EAAG9C,EAAQA,EAAQ+C,EAAY/M,EACxC,CACF,CAYO,SAASgN,GAAatb,EAAQ6T,GAGnC,OAAOmG,GAFkB,GAAIha,GACC,GAAI6T,GAEpC,CAkBO,SAAS0H,GAAUnZ,EAAYpC,EAAQ6T,GAC5C,MAAM8G,EAAgBW,GAAatb,EAAQ6T,GAC3C,IAAK8G,EAAe,CAClB,MAAM5G,EAAa,GAAI/T,GAAQ+R,UACzBiC,EAAkB,GAAIH,GAAa9B,UACzC,MAAM,IAAItT,MACR,kCAAkCsV,SAAkBC,IAExD,CACA,OAAO2G,EAAcvY,OAAYjK,EAAWiK,EAAWrI,OACzD,CA0CA,IAAIyhB,GAAiB,KA0Bd,SAASC,KACd,OAAOD,EACT,CAmBO,SAASE,GAAiBtZ,EAAYuZ,GAC3C,OACSvZ,CAGX,CASO,SAASwZ,GAAmBxZ,EAAYyZ,GAC7C,OAEItC,KACC,GAAOnX,EAAY,CAAC,EAAG,KACxBA,EAAW,KAAO,KAClBA,EAAW,IAAM,KACjBA,EAAW,KAAO,IAClBA,EAAW,IAAM,KAEjBmX,IAAwB,EACxB7I,GACE,2FAGGtO,CAGX,CAuBO,SAAS0Z,GAAe7P,EAAQ4P,GACrC,OACS5P,CAGX,CAiFO,IA7gBL8P,GACAC,GACAC,GCxMK,SAAS9S,GAAMoS,EAAWnZ,GAC/B,MAAMuI,EAAIvI,EAAW,GACfwI,EAAIxI,EAAW,GAGrB,OAFAA,EAAW,GAAKmZ,EAAU,GAAK5Q,EAAI4Q,EAAU,GAAK3Q,EAAI2Q,EAAU,GAChEnZ,EAAW,GAAKmZ,EAAU,GAAK5Q,EAAI4Q,EAAU,GAAK3Q,EAAI2Q,EAAU,GACzDnZ,CACT,CA4DO,SAAS8Z,GAAQX,EAAWY,EAAKC,EAAKC,EAAIC,EAAIrM,EAAOsM,EAAKC,GAC/D,MAAMtN,EAAMvI,KAAKuI,IAAIe,GACfjB,EAAMrI,KAAKqI,IAAIiB,GAOrB,OANAsL,EAAU,GAAKc,EAAKrN,EACpBuM,EAAU,GAAKe,EAAKpN,EACpBqM,EAAU,IAAMc,EAAKnN,EACrBqM,EAAU,GAAKe,EAAKtN,EACpBuM,EAAU,GAAKgB,EAAMF,EAAKrN,EAAMwN,EAAMH,EAAKnN,EAAMiN,EACjDZ,EAAU,GAAKgB,EAAMD,EAAKpN,EAAMsN,EAAMF,EAAKtN,EAAMoN,EAC1Cb,CACT,CAoCO,SAASkB,GAAY7iB,EAAQoG,GAClC,MAAM0c,GAyBoBC,EAzBF3c,GA0Bb,GAAK2c,EAAI,GAAKA,EAAI,GAAKA,EAAI,GADjC,IAAqBA,EAxB1B,GAAe,IAARD,EAAW,4CAElB,MAAMljB,EAAIwG,EAAO,GACXvG,EAAIuG,EAAO,GACXoW,EAAIpW,EAAO,GACX3H,EAAI2H,EAAO,GACX4c,EAAI5c,EAAO,GACXgB,EAAIhB,EAAO,GASjB,OAPApG,EAAO,GAAKvB,EAAIqkB,EAChB9iB,EAAO,IAAMH,EAAIijB,EACjB9iB,EAAO,IAAMwc,EAAIsG,EACjB9iB,EAAO,GAAKJ,EAAIkjB,EAChB9iB,EAAO,IAAMwc,EAAIpV,EAAI3I,EAAIukB,GAAKF,EAC9B9iB,EAAO,KAAOJ,EAAIwH,EAAIvH,EAAImjB,GAAKF,EAExB9iB,CACT,CDmlBEsgB,GAAyB,IACzBA,GAAyB,IAjhBzB6B,GAshBE,GArhBFC,GN/OK,SAAsB3D,EAAOC,EAAQC,EAAWjK,GACrD,MAAMvU,EAASse,EAAMte,OACrBwe,EAAYA,EAAY,EAAIA,EAAY,EACxCjK,EAASA,GAAUiK,OACJpgB,IAAXmgB,IAGAA,EAFEC,EAAY,EAELF,EAAMG,QAEN,IAAIta,MAAMnE,IAGvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAKsU,EAAQ,CACvCgK,EAAOte,GAAMgZ,GAAYqF,EAAMre,GAAM,IACrC,IAAI4Q,EAAImI,GAASpM,KAAKuG,IAAIvG,KAAKyM,IAAKzM,KAAK0E,KAAOgN,EAAMre,EAAI,GAAK,IAAO,MAClE4Q,EAAIuI,GACNvI,EAAIuI,GACKvI,GAAKuI,KACdvI,GAAKuI,IAEPmF,EAAOte,EAAI,GAAK4Q,CAClB,CACA,OAAO0N,CACT,EMyNE2D,GN9MK,SAAoB5D,EAAOC,EAAQC,EAAWjK,GACnD,MAAMvU,EAASse,EAAMte,OACrBwe,EAAYA,EAAY,EAAIA,EAAY,EACxCjK,EAASA,GAAUiK,OACJpgB,IAAXmgB,IAGAA,EAFEC,EAAY,EAELF,EAAMG,QAEN,IAAIta,MAAMnE,IAGvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAKsU,EAC/BgK,EAAOte,GAAM,IAAMqe,EAAMre,GAAMgZ,GAC/BsF,EAAOte,EAAI,GACR,IAAM2M,KAAKkW,KAAKlW,KAAKmW,IAAIzE,EAAMre,EAAI,GAAK+Y,KAAYpM,KAAK0E,GAAK,GAEnE,OAAOiN,CACT,EM+sBI,GAjhBWvX,SAAQ,SAAUyZ,GAC7BuB,GAAahb,SAAQ,SAAU0Z,GAC7B,GAAiBD,EAAaC,EAAauB,IAC3C,GAAiBvB,EAAaD,EAAayB,GAC7C,GACF,IC/SW,IAAI/d,MAAM,GAiPvB,MAAM6e,GAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,GC1OhD,MAAMC,GDAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GCGnBC,GAAW,CAACC,IAAKA,KAoTvB,GAtSA,cAAuB,EACrB,WAAAhkB,GACEsC,QAMArC,KAAK8X,QfwIA,CAAC/J,IAAUA,KAAU,KAAW,KelIrC/N,KAAKgkB,iBAAmB,EAMxBhkB,KAAKikB,yCAA2C,EAMhDjkB,KAAKkkB,2BAA6B,EAUlClkB,KAAKmkB,4BvClDF,SAAoBC,GAEzB,IAAIC,EAGAC,EAEAC,EAMJ,OAAO,WACL,MAAMC,EAAWzf,MAAMnF,UAAUyf,MAAMvf,KAAK2kB,WAM5C,OALKH,GAAYtkB,OAASukB,GAAa,EAAYC,EAAUF,KAC3DC,EAAWvkB,KACXskB,EAAWE,EACXH,EAAaD,EAAGpU,MAAMhQ,KAAMykB,YAEvBJ,CACT,CACF,CuC4BuCK,EACjC,CAACC,EAAUC,EAAkBxC,KAC3B,IAAKA,EACH,OAAOpiB,KAAK6kB,sBAAsBD,GAEpC,MAAME,EAAQ9kB,KAAK8kB,QAEnB,OADAA,EAAMC,eAAe3C,GACd0C,EAAMD,sBAAsBD,EAAiB,GAG1D,CASA,mBAAAI,CAAoBJ,EAAkBxC,GACpC,OAAOpiB,KAAKmkB,4BACVnkB,KAAK6E,cACL+f,EACAxC,EAEJ,CAOA,KAAA0C,GACE,OAAO,GACT,CAUA,cAAAG,CAAezT,EAAGC,EAAGyT,EAAcC,GACjC,OAAO,GACT,CAOA,UAAA7Q,CAAW9C,EAAGC,GACZ,OAAiE,IAA1DzR,KAAKilB,eAAezT,EAAGC,EAAGqS,GAAUsB,OAAOC,UACpD,CAUA,eAAAC,CAAgBlL,EAAO8K,GAGrB,OAFAA,EAAeA,GAA8B,CAACnB,IAAKA,KACnD/jB,KAAKilB,eAAe7K,EAAM,GAAIA,EAAM,GAAI8K,EAAcnX,KAC/CmX,CACT,CASA,oBAAAK,CAAqBtc,GACnB,OAAOjJ,KAAKsU,WAAWrL,EAAW,GAAIA,EAAW,GACnD,CAQA,aAAAuc,CAAc1S,GACZ,OAAO,GACT,CAQA,SAAA+F,CAAU/F,GACR,GAAI9S,KAAKgkB,iBAAmBhkB,KAAK6E,cAAe,CAC9C,MAAMiO,EAAS9S,KAAKwlB,cAAcxlB,KAAK8X,UACnC2N,MAAM3S,EAAO,KAAO2S,MAAM3S,EAAO,MACnCgC,GAAoBhC,GAEtB9S,KAAKgkB,gBAAkBhkB,KAAK6E,aAC9B,CACA,OfogBG,SAAwBiO,EAAQ+B,GACrC,OAAIA,GACFA,EAAK,GAAK/B,EAAO,GACjB+B,EAAK,GAAK/B,EAAO,GACjB+B,EAAK,GAAK/B,EAAO,GACjB+B,EAAK,GAAK/B,EAAO,GACV+B,GAEF/B,CACT,Ce7gBW4S,CAAe1lB,KAAK8X,QAAShF,EACtC,CAUA,MAAA+D,CAAOC,EAAO6O,GACZ,GACF,CAYA,KAAAC,CAAM1C,EAAIC,EAAIwC,GACZ,GACF,CAWA,QAAAE,CAASC,GACP,OAAO9lB,KAAK6kB,sBAAsBiB,EAAYA,EAChD,CAUA,qBAAAjB,CAAsBD,GACpB,OAAO,GACT,CAOA,OAAAmB,GACE,OAAO,GACT,CAWA,cAAAhB,CAAepK,GACb,GACF,CAQA,gBAAAqL,CAAiBlT,GACf,OAAO,GACT,CAUA,SAAAmT,CAAUC,EAAQC,GAChB,GACF,CAiBA,SAAA/D,CAAUvb,EAAQ6T,GAEhB,MAAM0L,EAAa,GAAcvf,GAC3B8T,EACqB,eAAzByL,EAAWtN,WACP,SAAUuN,EAAeC,EAAgBnR,GACvC,MAAMoR,EAAcH,EAAWvN,YACzB2N,EAAkBJ,EAAWpN,iBAC7B4M,EAAQvP,GAAUmQ,GAAmBnQ,GAAUkQ,GACrDxD,GACEc,GACA2C,EAAgB,GAChBA,EAAgB,GAChBZ,GACCA,EACD,EACA,EACA,GAEF,MAAMa,ECxTX,SACLzR,EACAC,EACAC,EACAC,EACAiN,EACAvN,EACA6R,GAEA7R,EAAOA,GAAc,GACrB6R,EAAoBA,GAAwC,EAC5D,IAAI7lB,EAAI,EACR,IAAK,IAAI8lB,ED8SG,EC9SSA,EAAIzR,EAAKyR,GAAKxR,EAAQ,CACzC,MAAM3D,EAAIwD,EAAgB2R,GACpBlV,EAAIuD,EAAgB2R,EAAI,GAC9B9R,EAAKhU,KAAOuhB,EAAU,GAAK5Q,EAAI4Q,EAAU,GAAK3Q,EAAI2Q,EAAU,GAC5DvN,EAAKhU,KAAOuhB,EAAU,GAAK5Q,EAAI4Q,EAAU,GAAK3Q,EAAI2Q,EAAU,GAE5D,IAAK,IAAIwE,EAAI,EAAGA,EAAIF,EAAmBE,IACrC/R,EAAKhU,KAAOmU,EAAgB2R,EAAIC,EAEpC,CAKA,OAHI/R,GAAQA,EAAKjU,QAAUC,IACzBgU,EAAKjU,OAASC,GAETgU,CACT,CD6RgC,CAClBwR,EACA,EACAA,EAAczlB,OACduU,EACA0O,GACAyC,GAEIO,EAAgB1E,GAAaiE,EAAY1L,GAC/C,OAAImM,EACKA,EAAcJ,EAAaA,EAAatR,GAE1CsR,CACT,EACAtE,GAAaiE,EAAY1L,GAE/B,OADA1a,KAAK+kB,eAAepK,GACb3a,IACT,GEnBK,SAAS8mB,GAAmBC,GACjC,IAAI5R,EAQJ,MAPc,MAAV4R,EACF5R,EAAS,EACU,OAAV4R,GAA6B,OAAVA,EAC5B5R,EAAS,EACU,QAAV4R,IACT5R,EAAS,GAEkB,CAC/B,CAwBA,SAtVA,cAA6B,GAC3B,WAAApV,GACEsC,QAMArC,KAAK+mB,OAAS,KAMd/mB,KAAKmV,OAAS,EAMdnV,KAAKgV,eACP,CAQA,aAAAwQ,CAAc1S,GACZ,OjBoNFkC,EiBnNIhV,KAAKgV,gBjBqNTE,EiBnNIlV,KAAKgV,gBAAgBpU,OjBoNzBuU,EiBnNInV,KAAKmV,OjBuNFJ,GADQD,GiBrNXhC,GjBsNiCkC,EiBzNjC,EjByN0DE,EAAKC,GAR9D,IACLH,EAEAE,EACAC,CiBhNA,CAMA,cAAA6R,GACE,OAAO,GACT,CAOA,kBAAAC,GACE,OAAOjnB,KAAKgV,gBAAgBqK,MAAM,EAAGrf,KAAKmV,OAC5C,CAKA,kBAAA+R,GACE,OAAOlnB,KAAKgV,eACd,CAOA,iBAAAmS,GACE,OAAOnnB,KAAKgV,gBAAgBqK,MAC1Brf,KAAKgV,gBAAgBpU,OAASZ,KAAKmV,OAEvC,CAOA,SAAAiS,GACE,OAAOpnB,KAAK+mB,MACd,CAQA,qBAAAlC,CAAsBD,GAOpB,GANI5kB,KAAKkkB,6BAA+BlkB,KAAK6E,gBAC3C7E,KAAKikB,yCAA2C,EAChDjkB,KAAKkkB,2BAA6BlkB,KAAK6E,eAKvC+f,EAAmB,GACgC,IAAlD5kB,KAAKikB,0CACJW,GAAoB5kB,KAAKikB,yCAE3B,OAAOjkB,KAGT,MAAMqnB,EACJrnB,KAAKsnB,8BAA8B1C,GAErC,OADkCyC,EAAmBH,qBACvBtmB,OAASZ,KAAKgV,gBAAgBpU,OACnDymB,GAQTrnB,KAAKikB,yCAA2CW,EACzC5kB,KACT,CAOA,6BAAAsnB,CAA8B1C,GAC5B,OAAO5kB,IACT,CAKA,SAAAunB,GACE,OAAOvnB,KAAKmV,MACd,CAMA,kBAAAqS,CAAmBT,EAAQ/R,GACzBhV,KAAKmV,OAAS2R,GAAmBC,GACjC/mB,KAAK+mB,OAASA,EACd/mB,KAAKgV,gBAAkBA,CACzB,CAOA,cAAAyS,CAAevT,EAAa6S,GAC1B,GACF,CAQA,SAAAW,CAAUX,EAAQ7S,EAAayT,GAC7B,IAAIxS,EACJ,GAAI4R,EACF5R,EAAS2R,GAAmBC,OACvB,CACL,IAAK,IAAIlmB,EAAI,EAAGA,EAAI8mB,IAAW9mB,EAAG,CAChC,GAA2B,IAAvBqT,EAAYtT,OAGd,OAFAZ,KAAK+mB,OAAS,UACd/mB,KAAKmV,OAAS,GAGhBjB,EAA6CA,EAAY,EAC3D,CACAiB,EAASjB,EAAYtT,OACrBmmB,EAqHC,SAA4B5R,GACjC,IAAI4R,EAQJ,OAPc,GAAV5R,EACF4R,EAAS,KACU,GAAV5R,EACT4R,EAAS,MACU,GAAV5R,IACT4R,EAAS,QAEkD,CAC/D,CA/Hea,CAAmBzS,EAC9B,CACAnV,KAAK+mB,OAASA,EACd/mB,KAAKmV,OAASA,CAChB,CAYA,cAAA4P,CAAepK,GACT3a,KAAKgV,kBACP2F,EACE3a,KAAKgV,gBACLhV,KAAKgV,gBACLhV,KAAK+mB,OAAOc,WAAW,OAAS,EAAI,EACpC7nB,KAAKmV,QAEPnV,KAAK4E,UAET,CAUA,MAAAiS,CAAOC,EAAO6O,GACZ,MAAM3Q,EAAkBhV,KAAKknB,qBAC7B,GAAIlS,EAAiB,CACnB,MAAMG,EAASnV,KAAKunB,aDjLnB,SACLvS,EACAC,EACAC,EACAC,EACA2B,EACA6O,EACA9Q,GAEAA,EAAOA,GAAc,GACrB,MAAMgB,EAAMrI,KAAKqI,IAAIiB,GACff,EAAMvI,KAAKuI,IAAIe,GACfgR,EAAUnC,EAAO,GACjBoC,EAAUpC,EAAO,GACvB,IAAI9kB,EAAI,EACR,IAAK,IAAI8lB,ECqKH,EDrKeA,EAAIzR,EAAKyR,GAAKxR,EAAQ,CACzC,MAAM+Q,EAASlR,EAAgB2R,GAAKmB,EAC9B3B,EAASnR,EAAgB2R,EAAI,GAAKoB,EACxClT,EAAKhU,KAAOinB,EAAU5B,EAASrQ,EAAMsQ,EAASpQ,EAC9ClB,EAAKhU,KAAOknB,EAAU7B,EAASnQ,EAAMoQ,EAAStQ,EAC9C,IAAK,IAAI+Q,EAAID,EAAI,EAAGC,EAAID,EAAIxR,IAAUyR,EACpC/R,EAAKhU,KAAOmU,EAAgB4R,EAEhC,CACI/R,GAAQA,EAAKjU,QAAUC,IACzBgU,EAAKjU,OAASC,EAGlB,CCsJM,CACEmU,EACA,EACAA,EAAgBpU,OAChBuU,EACA2B,EACA6O,EACA3Q,GAEFhV,KAAK4E,SACP,CACF,CAYA,KAAAghB,CAAM1C,EAAIC,EAAIwC,QACD3mB,IAAPmkB,IACFA,EAAKD,GAEFyC,IACHA,EAAS,GAAU3lB,KAAK6Y,cAE1B,MAAM7D,EAAkBhV,KAAKknB,qBAC7B,GAAIlS,EAAiB,CACnB,MAAMG,EAASnV,KAAKunB,aDxKnB,SACLvS,EACAC,EACAC,EACAC,EACA+N,EACAC,EACAwC,EACA9Q,GAEAA,EAAOA,GAAc,GACrB,MAAMiT,EAAUnC,EAAO,GACjBoC,EAAUpC,EAAO,GACvB,IAAI9kB,EAAI,EACR,IAAK,IAAI8lB,EC6JH,ED7JeA,EAAIzR,EAAKyR,GAAKxR,EAAQ,CACzC,MAAM+Q,EAASlR,EAAgB2R,GAAKmB,EAC9B3B,EAASnR,EAAgB2R,EAAI,GAAKoB,EACxClT,EAAKhU,KAAOinB,EAAU5E,EAAKgD,EAC3BrR,EAAKhU,KAAOknB,EAAU5E,EAAKgD,EAC3B,IAAK,IAAIS,EAAID,EAAI,EAAGC,EAAID,EAAIxR,IAAUyR,EACpC/R,EAAKhU,KAAOmU,EAAgB4R,EAEhC,CACI/R,GAAQA,EAAKjU,QAAUC,IACzBgU,EAAKjU,OAASC,EAGlB,CC8IM,CACEmU,EACA,EACAA,EAAgBpU,OAChBuU,EACA+N,EACAC,EACAwC,EACA3Q,GAEFhV,KAAK4E,SACP,CACF,CAUA,SAAAqhB,CAAUC,EAAQC,GAChB,MAAMnR,EAAkBhV,KAAKknB,qBAC7B,GAAIlS,EAAiB,CACnB,MAAMG,EAASnV,KAAKunB,aD3JnB,SACLvS,EACAC,EACAC,EACAC,EACA+Q,EACAC,EACAtR,GAEAA,EAAOA,GAAc,GACrB,IAAIhU,EAAI,EACR,IAAK,IAAI8lB,ECmJH,EDnJeA,EAAIzR,EAAKyR,GAAKxR,EAAQ,CACzCN,EAAKhU,KAAOmU,EAAgB2R,GAAKT,EACjCrR,EAAKhU,KAAOmU,EAAgB2R,EAAI,GAAKR,EACrC,IAAK,IAAIS,EAAID,EAAI,EAAGC,EAAID,EAAIxR,IAAUyR,EACpC/R,EAAKhU,KAAOmU,EAAgB4R,EAEhC,CACI/R,GAAQA,EAAKjU,QAAUC,IACzBgU,EAAKjU,OAASC,EAGlB,CCsIM,CACEmU,EACA,EACAA,EAAgBpU,OAChBuU,EACA+Q,EACAC,EACAnR,GAEFhV,KAAK4E,SACP,CACF,GClSK,SAASojB,GAAWhT,EAAiBC,EAAQC,EAAKC,GACvD,IAAI8S,EAAY,EAChB,MAAMzS,EAAKR,EAAgBE,EAAMC,GAC3BM,EAAKT,EAAgBE,EAAMC,EAAS,GAC1C,IAAI6N,EAAM,EACNC,EAAM,EACV,KAAOhO,EAASC,EAAKD,GAAUE,EAAQ,CACrC,MAAMiO,EAAMpO,EAAgBC,GAAUO,EAChC6N,EAAMrO,EAAgBC,EAAS,GAAKQ,EAC1CwS,GAAahF,EAAMG,EAAMJ,EAAMK,EAC/BL,EAAMI,EACNH,EAAMI,CACR,CACA,OAAO4E,EAAY,CACrB,CCRA,SAASC,GACPlT,EACAmT,EACAC,EACAjT,EACA3D,EACAC,EACAyT,GAEA,MAAMxT,EAAKsD,EAAgBmT,GACrBxW,EAAKqD,EAAgBmT,EAAU,GAC/BrW,EAAKkD,EAAgBoT,GAAW1W,EAChCK,EAAKiD,EAAgBoT,EAAU,GAAKzW,EAC1C,IAAIsD,EACJ,GAAW,IAAPnD,GAAmB,IAAPC,EACdkD,EAASkT,MACJ,CACL,MAAMnW,IAAMR,EAAIE,GAAMI,GAAML,EAAIE,GAAMI,IAAOD,EAAKA,EAAKC,EAAKA,GAC5D,GAAIC,EAAI,EACNiD,EAASmT,MACJ,IAAIpW,EAAI,EAAG,CAChB,IAAK,IAAInR,EAAI,EAAGA,EAAIsU,IAAUtU,EAC5BqkB,EAAarkB,GAAKwR,GAChB2C,EAAgBmT,EAAUtnB,GAC1BmU,EAAgBoT,EAAUvnB,GAC1BmR,GAIJ,YADAkT,EAAatkB,OAASuU,EAExB,CACEF,EAASkT,CACX,CACF,CACA,IAAK,IAAItnB,EAAI,EAAGA,EAAIsU,IAAUtU,EAC5BqkB,EAAarkB,GAAKmU,EAAgBC,EAASpU,GAE7CqkB,EAAatkB,OAASuU,CACxB,CAYO,SAASkT,GAAgBrT,EAAiBC,EAAQC,EAAKC,EAAQ7D,GACpE,IAAII,EAAKsD,EAAgBC,GACrBtD,EAAKqD,EAAgBC,EAAS,GAClC,IAAKA,GAAUE,EAAQF,EAASC,EAAKD,GAAUE,EAAQ,CACrD,MAAMvD,EAAKoD,EAAgBC,GACrBpD,EAAKmD,EAAgBC,EAAS,GAC9BqT,EAAe,GAAU5W,EAAIC,EAAIC,EAAIC,GACvCyW,EAAehX,IACjBA,EAAMgX,GAER5W,EAAKE,EACLD,EAAKE,CACP,CACA,OAAOP,CACT,CA8DO,SAASiX,GACdvT,EACAC,EACAC,EACAC,EACAqT,EACAC,EACAjX,EACAC,EACAyT,EACAC,EACArB,GAEA,GAAI7O,GAAUC,EACZ,OAAOiQ,EAET,IAAItkB,EAAG6nB,EACP,GAAiB,IAAbF,EAAgB,CAQlB,GANAE,EAAkB,GAChBlX,EACAC,EACAuD,EAAgBC,GAChBD,EAAgBC,EAAS,IAEvByT,EAAkBvD,EAAoB,CACxC,IAAKtkB,EAAI,EAAGA,EAAIsU,IAAUtU,EACxBqkB,EAAarkB,GAAKmU,EAAgBC,EAASpU,GAG7C,OADAqkB,EAAatkB,OAASuU,EACfuT,CACT,CACA,OAAOvD,CACT,CACArB,EAAWA,GAAsB,CAACC,IAAKA,KACvC,IAAIhgB,EAAQkR,EAASE,EACrB,KAAOpR,EAAQmR,GAWb,GAVAgT,GACElT,EACAjR,EAAQoR,EACRpR,EACAoR,EACA3D,EACAC,EACAqS,GAEF4E,EAAkB,GAAUlX,EAAGC,EAAGqS,EAAS,GAAIA,EAAS,IACpD4E,EAAkBvD,EAAoB,CAExC,IADAA,EAAqBuD,EAChB7nB,EAAI,EAAGA,EAAIsU,IAAUtU,EACxBqkB,EAAarkB,GAAKijB,EAASjjB,GAE7BqkB,EAAatkB,OAASuU,EACtBpR,GAASoR,CACX,MAWEpR,GACEoR,EACA3H,KAAK8D,KACD9D,KAAK4N,KAAKsN,GAAmBlb,KAAK4N,KAAK+J,IACvCqD,EACA,EACF,GAIR,GAAIC,IAEFP,GACElT,EACAE,EAAMC,EACNF,EACAE,EACA3D,EACAC,EACAqS,GAEF4E,EAAkB,GAAUlX,EAAGC,EAAGqS,EAAS,GAAIA,EAAS,IACpD4E,EAAkBvD,GAAoB,CAExC,IADAA,EAAqBuD,EAChB7nB,EAAI,EAAGA,EAAIsU,IAAUtU,EACxBqkB,EAAarkB,GAAKijB,EAASjjB,GAE7BqkB,EAAatkB,OAASuU,CACxB,CAEF,OAAOgQ,CACT,CCtNO,SAASwD,GACd3T,EACAC,EACAf,EACAiB,GAEA,IAAK,IAAItU,EAAI,EAAG2C,EAAK0Q,EAAYtT,OAAQC,EAAI2C,IAAM3C,EAAG,CACpD,MAAMoI,EAAaiL,EAAYrT,GAC/B,IAAK,IAAI8lB,EAAI,EAAGA,EAAIxR,IAAUwR,EAC5B3R,EAAgBC,KAAYhM,EAAW0d,EAE3C,CACA,OAAO1R,CACT,CC1BO,SAAS2T,GACd5T,EACAC,EACAC,EACAC,EACAjB,GAEAA,OAA8BlV,IAAhBkV,EAA4BA,EAAc,GACxD,IAAIrT,EAAI,EACR,IAAK,IAAI8lB,EAAI1R,EAAQ0R,EAAIzR,EAAKyR,GAAKxR,EACjCjB,EAAYrT,KAAOmU,EAAgBqK,MAAMsH,EAAGA,EAAIxR,GAGlD,OADAjB,EAAYtT,OAASC,EACdqT,CACT,CC4QO,SAAS2U,GAAKtnB,EAAOukB,GAC1B,OAAOA,EAAYtY,KAAKiF,MAAMlR,EAAQukB,EACxC,CAqBO,SAASgD,GACd9T,EACAC,EACAC,EACAC,EACA2Q,EACAiD,EACAC,GAGA,GAAI/T,GAAUC,EACZ,OAAO8T,EAGT,IAQIpX,EAAIC,EARJH,EAAKmX,GAAK7T,EAAgBC,GAAS6Q,GACnCnU,EAAKkX,GAAK7T,EAAgBC,EAAS,GAAI6Q,GAC3C7Q,GAAUE,EAEV4T,EAA0BC,KAAsBtX,EAChDqX,EAA0BC,KAAsBrX,EAIhD,GAIE,GAHAC,EAAKiX,GAAK7T,EAAgBC,GAAS6Q,GACnCjU,EAAKgX,GAAK7T,EAAgBC,EAAS,GAAI6Q,IACvC7Q,GAAUE,IACID,EAOZ,OAFA6T,EAA0BC,KAAsBpX,EAChDmX,EAA0BC,KAAsBnX,EACzCmX,QAEFpX,GAAMF,GAAMG,GAAMF,GAC3B,KAAOsD,EAASC,GAAK,CAEnB,MAAMQ,EAAKmT,GAAK7T,EAAgBC,GAAS6Q,GACnCnQ,EAAKkT,GAAK7T,EAAgBC,EAAS,GAAI6Q,GAG7C,GAFA7Q,GAAUE,EAENO,GAAM9D,GAAM+D,GAAM9D,EACpB,SAGF,MAAMmR,EAAMpR,EAAKF,EACXuR,EAAMpR,EAAKF,EAEXyR,EAAM1N,EAAKhE,EACX2R,EAAM1N,EAAKhE,EAKfqR,EAAMK,GAAOJ,EAAMG,IACjBJ,EAAM,GAAKI,EAAMJ,GAAQA,GAAOI,GAAQJ,EAAM,GAAKI,EAAMJ,KACzDC,EAAM,GAAKI,EAAMJ,GAAQA,GAAOI,GAAQJ,EAAM,GAAKI,EAAMJ,IAG3DrR,EAAK8D,EACL7D,EAAK8D,IAMPoT,EAA0BC,KAAsBpX,EAChDmX,EAA0BC,KAAsBnX,EAChDH,EAAKE,EACLD,EAAKE,EACLD,EAAK8D,EACL7D,EAAK8D,EACP,CAIA,OAFAoT,EAA0BC,KAAsBpX,EAChDmX,EAA0BC,KAAsBnX,EACzCmX,CACT,CC1XA,MAAMC,WAAmB,GAMvB,WAAAlpB,CAAYmU,EAAa6S,GACvB1kB,QAMArC,KAAKkpB,WAAa,EAMlBlpB,KAAKmpB,mBAAqB,OAEXnqB,IAAX+nB,GAAyBhiB,MAAMC,QAAQkP,EAAY,IAMrDlU,KAAKynB,eACyD,EAG5DV,GATF/mB,KAAKwnB,mBACHT,EAC6B,EAUnC,CAQA,KAAAjC,GACE,OAAO,IAAImE,GAAWjpB,KAAKgV,gBAAgBqK,QAASrf,KAAK+mB,OAC3D,CAUA,cAAA9B,CAAezT,EAAGC,EAAGyT,EAAcC,GACjC,OAAIA,EAAqB/Q,GAAyBpU,KAAK6Y,YAAarH,EAAGC,GAC9D0T,GAELnlB,KAAKmpB,mBAAqBnpB,KAAK6E,gBACjC7E,KAAKkpB,UAAY1b,KAAK4N,KACpBiN,GACEroB,KAAKgV,gBACL,EACAhV,KAAKgV,gBAAgBpU,OACrBZ,KAAKmV,OACL,IAGJnV,KAAKmpB,kBAAoBnpB,KAAK6E,eAEzB0jB,GACLvoB,KAAKgV,gBACL,EACAhV,KAAKgV,gBAAgBpU,OACrBZ,KAAKmV,OACLnV,KAAKkpB,WACL,EACA1X,EACAC,EACAyT,EACAC,GAEJ,CAOA,OAAAiE,GACE,OAAOpB,GACLhoB,KAAKgV,gBACL,EACAhV,KAAKgV,gBAAgBpU,OACrBZ,KAAKmV,OAET,CAQA,cAAA6R,GACE,OAAO4B,GACL5oB,KAAKgV,gBACL,EACAhV,KAAKgV,gBAAgBpU,OACrBZ,KAAKmV,OAET,CAQA,6BAAAmS,CAA8B1C,GAE5B,MAAMmE,EAA4B,GAUlC,OATAA,EAA0BnoB,ODlDvB,SACLoU,EACAC,EACAC,EACAC,EACAyP,EACAmE,EACAC,GAEA,MAAMroB,GAAKuU,EAAMD,GAAUE,EAC3B,GAAIxU,EAAI,EAAG,CACT,KAAOsU,EAASC,EAAKD,GAAUE,EAC7B4T,EAA0BC,KAAsBhU,EAAgBC,GAChE8T,EAA0BC,KACxBhU,EAAgBC,EAAS,GAE7B,OAAO+T,CACT,CAEA,MAAMK,EAAU,IAAItkB,MAAMpE,GAC1B0oB,EAAQ,GAAK,EACbA,EAAQ1oB,EAAI,GAAK,EAEjB,MAAM2oB,EAAQ,CAACrU,EAAQC,EAAMC,GAC7B,IAAIpR,EAAQ,EACZ,KAAOulB,EAAM1oB,OAAS,GAAG,CACvB,MAAM2oB,EAAOD,EAAM5hB,MACb8hB,EAAQF,EAAM5hB,MACpB,IAAI+hB,EAAqB,EACzB,MAAM/X,EAAKsD,EAAgBwU,GACrB7X,EAAKqD,EAAgBwU,EAAQ,GAC7B5X,EAAKoD,EAAgBuU,GACrB1X,EAAKmD,EAAgBuU,EAAO,GAClC,IAAK,IAAI1oB,EAAI2oB,EAAQrU,EAAQtU,EAAI0oB,EAAM1oB,GAAKsU,EAAQ,CAClD,MAEMuT,EAAkBnX,GAFdyD,EAAgBnU,GAChBmU,EAAgBnU,EAAI,GACuB6Q,EAAIC,EAAIC,EAAIC,GAC7D6W,EAAkBe,IACpB1lB,EAAQlD,EACR4oB,EAAqBf,EAEzB,CACIe,EAAqB7E,IACvByE,GAAStlB,EAAQkR,GAAUE,GAAU,EACjCqU,EAAQrU,EAASpR,GACnBulB,EAAMvmB,KAAKymB,EAAOzlB,GAEhBA,EAAQoR,EAASoU,GACnBD,EAAMvmB,KAAKgB,EAAOwlB,GAGxB,CACA,IAAK,IAAI1oB,EAAI,EAAGA,EAAIF,IAAKE,EACnBwoB,EAAQxoB,KACVkoB,EAA0BC,KACxBhU,EAAgBC,EAASpU,EAAIsU,GAC/B4T,EAA0BC,KACxBhU,EAAgBC,EAASpU,EAAIsU,EAAS,IAG5C,OAAO6T,CACT,CCXuCU,CACjC1pB,KAAKgV,gBACL,EACAhV,KAAKgV,gBAAgBpU,OACrBZ,KAAKmV,OACLyP,EACAmE,EACA,GAEK,IAAIE,GAAWF,EAA2B,KACnD,CAQA,OAAAhD,GACE,MAAO,YACT,CASA,gBAAAC,CAAiBlT,GACf,OAAO,CACT,CASA,cAAA2U,CAAevT,EAAa6S,GAC1B/mB,KAAK0nB,UAAUX,EAAQ7S,EAAa,GAC/BlU,KAAKgV,kBACRhV,KAAKgV,gBAAkB,IAEzBhV,KAAKgV,gBAAgBpU,OAAS+nB,GAC5B3oB,KAAKgV,gBACL,EACAd,EACAlU,KAAKmV,QAEPnV,KAAK4E,SACP,EAGF,YCrLA,MAAM+kB,WAAc,GAKlB,WAAA5pB,CAAYmU,EAAa6S,GACvB1kB,QACArC,KAAKynB,eAAevT,EAAa6S,EACnC,CAQA,KAAAjC,GACE,MAAM1K,EAAQ,IAAIuP,GAAM3pB,KAAKgV,gBAAgBqK,QAASrf,KAAK+mB,QAE3D,OADA3M,EAAMxT,gBAAgB5G,MACfoa,CACT,CAUA,cAAA6K,CAAezT,EAAGC,EAAGyT,EAAcC,GACjC,MAAMnQ,EAAkBhV,KAAKgV,gBACvB0T,EAAkB,GACtBlX,EACAC,EACAuD,EAAgB,GAChBA,EAAgB,IAElB,GAAI0T,EAAkBvD,EAAoB,CACxC,MAAMhQ,EAASnV,KAAKmV,OACpB,IAAK,IAAItU,EAAI,EAAGA,EAAIsU,IAAUtU,EAC5BqkB,EAAarkB,GAAKmU,EAAgBnU,GAGpC,OADAqkB,EAAatkB,OAASuU,EACfuT,CACT,CACA,OAAOvD,CACT,CAQA,cAAA6B,GACE,OAAOhnB,KAAKgV,gBAAgBqK,OAC9B,CAQA,aAAAmG,CAAc1S,GACZ,OxByJG,SAAsC7J,EAAY4L,GACvD,MAAMrD,EAAIvI,EAAW,GACfwI,EAAIxI,EAAW,GACrB,OAAO2L,GAAepD,EAAGC,EAAGD,EAAGC,EAAGoD,EACpC,CwB7JW+U,CAA6B5pB,KAAKgV,gBAAiBlC,EAC5D,CAQA,OAAAiT,GACE,MAAO,OACT,CASA,gBAAAC,CAAiBlT,GACf,OAAOwB,GAAWxB,EAAQ9S,KAAKgV,gBAAgB,GAAIhV,KAAKgV,gBAAgB,GAC1E,CAQA,cAAAyS,CAAevT,EAAa6S,GAC1B/mB,KAAK0nB,UAAUX,EAAQ7S,EAAa,GAC/BlU,KAAKgV,kBACRhV,KAAKgV,gBAAkB,IAEzBhV,KAAKgV,gBAAgBpU,OJxGlB,SAA2BoU,EAAiBC,EAAQhM,GACzD,IAAK,IAAIpI,EAAI,EAAG2C,EAAKyF,EAAWrI,OAAQC,EAAI2C,IAAM3C,EAChDmU,EAAgBC,KAAYhM,EAAWpI,GAEzC,OAAOoU,CACT,CImGkC4U,CAC5B7pB,KAAKgV,gBACL,EACAd,EACAlU,KAAKmV,QAEPnV,KAAK4E,SACP,EAGF,YChHO,SAASklB,GACd9U,EACAC,EACAC,EACAC,EACArC,GAEA,MAAMiX,EzB8YD,SAAuBjX,EAAQkX,GACpC,IAAIC,EAEJ,OADAA,EAAMD,EAAS3U,GAAcvC,IACzBmX,IAGJA,EAAMD,EAAS1U,GAAexC,IAC1BmX,IAGJA,EAAMD,EAAStT,GAAY5D,IACvBmX,IAGJA,EAAMD,EAASvT,GAAW3D,IACtBmX,IAGG,IACT,CyBjakB,CACdnX,GAKA,SAAU7J,GACR,OAAQihB,GACNlV,EACAC,EACAC,EACAC,EACAlM,EAAW,GACXA,EAAW,GAEf,IAEF,OAAQ8gB,CACV,CAWO,SAASG,GACdlV,EACAC,EACAC,EACAC,EACA3D,EACAC,GASA,IAAI0Y,EAAK,EACLzY,EAAKsD,EAAgBE,EAAMC,GAC3BxD,EAAKqD,EAAgBE,EAAMC,EAAS,GACxC,KAAOF,EAASC,EAAKD,GAAUE,EAAQ,CACrC,MAAMvD,EAAKoD,EAAgBC,GACrBpD,EAAKmD,EAAgBC,EAAS,GAChCtD,GAAMF,EACJI,EAAKJ,IAAMG,EAAKF,IAAOD,EAAIE,IAAOH,EAAIE,IAAOG,EAAKF,GAAM,GAC1DwY,IAEOtY,GAAMJ,IAAMG,EAAKF,IAAOD,EAAIE,IAAOH,EAAIE,IAAOG,EAAKF,GAAM,GAClEwY,IAEFzY,EAAKE,EACLD,EAAKE,CACP,CACA,OAAc,IAAPsY,CACT,CAWO,SAASC,GACdpV,EACAC,EACAoV,EACAlV,EACA3D,EACAC,GAEA,GAAoB,IAAhB4Y,EAAKzpB,OACP,OAAO,EAET,IAAKspB,GAAqBlV,EAAiBC,EAAQoV,EAAK,GAAIlV,EAAQ3D,EAAGC,GACrE,OAAO,EAET,IAAK,IAAI5Q,EAAI,EAAG2C,EAAK6mB,EAAKzpB,OAAQC,EAAI2C,IAAM3C,EAC1C,GACEqpB,GAAqBlV,EAAiBqV,EAAKxpB,EAAI,GAAIwpB,EAAKxpB,GAAIsU,EAAQ3D,EAAGC,GAEvE,OAAO,EAGX,OAAO,CACT,CC7FO,SAAS6Y,GACdtV,EACAC,EACAC,EACAC,EACArC,EACAyX,GAKA,OAHAA,EACEA,GACAxV,G1BqKK,CAAChH,IAAUA,KAAU,KAAW,K0BrKAiH,EAAiBC,EAAQC,EAAKC,KAChEqB,GAAW1D,EAAQyX,KAIrBA,EAAkB,IAAMzX,EAAO,IAAMyX,EAAkB,IAAMzX,EAAO,IACpEyX,EAAkB,IAAMzX,EAAO,IAAMyX,EAAkB,IAAMzX,EAAO,ICpBlE,SAAiBkC,EAAiBC,EAAQC,EAAKC,GACpD,IAAIqV,EAEJ,IADAvV,GAAUE,EACHF,EAASC,EAAKD,GAAUE,EAK7B,GD2BUsV,EC9BRzV,EAAgBqK,MAAMpK,EAASE,EAAQF,GD8BvByV,EC7BhB1V,EAAgBqK,MAAMpK,EAAQA,EAASE,GAFzCqV,E3BitBG,SAA2B1X,EAAQ6X,EAAOzV,GAC/C,IAAIsB,GAAa,EACjB,MAAMoU,EAAWlW,GAAuB5B,EAAQ6X,GAC1CE,EAASnW,GAAuB5B,EAAQoC,GAC9C,GChuBc,IDiuBZ0V,GCjuBY,IDkuBZC,EAEArU,GAAa,MACR,CACL,MAAM9C,EAAOZ,EAAO,GACdc,EAAOd,EAAO,GACda,EAAOb,EAAO,GACde,EAAOf,EAAO,GACdgY,EAASH,EAAM,GACfI,EAASJ,EAAM,GACfK,EAAO9V,EAAI,GACX+V,EAAO/V,EAAI,GACXgW,GAASD,EAAOF,IAAWC,EAAOF,GACxC,IAAItZ,EAAGC,EC9uBF,ED+uBEoZ,KC/uBF,ED+uBoCD,KAEvCpZ,EAAIwZ,GAAQC,EAAOpX,GAAQqX,EAC3B1U,EAAahF,GAAKkC,GAAQlC,GAAKmC,GAG9B6C,KCpvBE,EDqvBAqU,ICrvBA,EDsvBDD,IAGFnZ,EAAIwZ,GAAQD,EAAOrX,GAAQuX,EAC3B1U,EAAa/E,GAAKmC,GAAQnC,GAAKoC,GAG9B2C,KC5vBE,ED6vBAqU,IC7vBA,ED8vBDD,IAGFpZ,EAAIwZ,GAAQC,EAAOrX,GAAQsX,EAC3B1U,EAAahF,GAAKkC,GAAQlC,GAAKmC,GAG9B6C,KCpwBC,GDqwBCqU,ICrwBD,GDswBAD,IAGFnZ,EAAIwZ,GAAQD,EAAOtX,GAAQwX,EAC3B1U,EAAa/E,GAAKmC,GAAQnC,GAAKoC,EAEnC,CACA,OAAO2C,CACT,C0BvuBa2U,CAAkBrY,EAAQ2X,EAAQC,GC5BvCF,EACF,OAAOA,ED0BT,IAAUC,EAAQC,ECvBpB,OAAO,CACT,CDWS9iB,CACLoN,EACAC,EACAC,EACAC,GAWJ,CE9CO,SAASjB,GAAYc,EAAiBC,EAAQC,EAAKC,GACxD,KAAOF,EAASC,EAAMC,GAAQ,CAC5B,IAAK,IAAItU,EAAI,EAAGA,EAAIsU,IAAUtU,EAAG,CAC/B,MAAMuqB,EAAMpW,EAAgBC,EAASpU,GACrCmU,EAAgBC,EAASpU,GAAKmU,EAAgBE,EAAMC,EAAStU,GAC7DmU,EAAgBE,EAAMC,EAAStU,GAAKuqB,CACtC,CACAnW,GAAUE,EACVD,GAAOC,CACT,CACF,CCLO,SAASkW,GAAsBrW,EAAiBC,EAAQC,EAAKC,GAGlE,IAAImW,EAAO,EACP5Z,EAAKsD,EAAgBE,EAAMC,GAC3BxD,EAAKqD,EAAgBE,EAAMC,EAAS,GACxC,KAAOF,EAASC,EAAKD,GAAUE,EAAQ,CACrC,MAAMvD,EAAKoD,EAAgBC,GACrBpD,EAAKmD,EAAgBC,EAAS,GACpCqW,IAAS1Z,EAAKF,IAAOG,EAAKF,GAC1BD,EAAKE,EACLD,EAAKE,CACP,CACA,OAAgB,IAATyZ,OAAatsB,EAAYssB,EAAO,CACzC,CA0FO,SAASC,GACdvW,EACAC,EACAoV,EACAlV,EACAqW,GAEAA,OAAkBxsB,IAAVwsB,GAAsBA,EAC9B,IAAK,IAAI3qB,EAAI,EAAG2C,EAAK6mB,EAAKzpB,OAAQC,EAAI2C,IAAM3C,EAAG,CAC7C,MAAMqU,EAAMmV,EAAKxpB,GACX4qB,EAAcJ,GAClBrW,EACAC,EACAC,EACAC,IAGM,IAANtU,EACK2qB,GAASC,IAAkBD,IAAUC,EACrCD,IAAUC,IAAkBD,GAASC,IAE1C,GAAmBzW,EAAiBC,EAAQC,EAAKC,GAEnDF,EAASC,CACX,CACA,OAAOD,CACT,CCvHA,MAAMyW,WAAgB,GAYpB,WAAA3rB,CAAYmU,EAAa6S,EAAQsD,GAC/BhoB,QAMArC,KAAK2rB,MAAQ,GAMb3rB,KAAK4rB,4BAA8B,EAMnC5rB,KAAK6rB,mBAAqB,KAM1B7rB,KAAKkpB,WAAa,EAMlBlpB,KAAKmpB,mBAAqB,EAM1BnpB,KAAK8rB,mBAAqB,EAM1B9rB,KAAK+rB,yBAA2B,UAEjB/sB,IAAX+nB,GAAwBsD,GAC1BrqB,KAAKwnB,mBACHT,EAC6B,GAE/B/mB,KAAK2rB,MAAQtB,GAEbrqB,KAAKynB,eACgE,EAGnEV,EAGN,CAOA,gBAAAiF,CAAiBhE,GACVhoB,KAAKgV,gBvD0DP,SAAgBxU,EAAKyrB,GAC1B,MAAMC,EAAYnnB,MAAMC,QAAQinB,GAAQA,EAAO,CAACA,GAC1CrrB,EAASsrB,EAAUtrB,OACzB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IAC1BL,EAAIA,EAAII,QAAUsrB,EAAUrrB,EAEhC,CuD7DM,CAAOb,KAAKgV,gBAAiBgT,EAAWd,sBAFxClnB,KAAKgV,gBAAkBgT,EAAWd,qBAAqB7H,QAIzDrf,KAAK2rB,MAAM5oB,KAAK/C,KAAKgV,gBAAgBpU,QACrCZ,KAAK4E,SACP,CAQA,KAAAkgB,GACE,MAAMqH,EAAU,IAAIT,GAClB1rB,KAAKgV,gBAAgBqK,QACrBrf,KAAK+mB,OACL/mB,KAAK2rB,MAAMtM,SAGb,OADA8M,EAAQvlB,gBAAgB5G,MACjBmsB,CACT,CAUA,cAAAlH,CAAezT,EAAGC,EAAGyT,EAAcC,GACjC,OAAIA,EAAqB/Q,GAAyBpU,KAAK6Y,YAAarH,EAAGC,GAC9D0T,GAELnlB,KAAKmpB,mBAAqBnpB,KAAK6E,gBACjC7E,KAAKkpB,UAAY1b,KAAK4N,KXpDrB,SACLpG,EACAC,EACAoV,EACAlV,EACA7D,GAEA,IAAK,IAAIzQ,EAAI,EAAG2C,EAAK6mB,EAAKzpB,OAAQC,EAAI2C,IAAM3C,EAAG,CAC7C,MAAMqU,EAAMmV,EAAKxpB,GACjByQ,EAAM+W,GAAgBrT,EAAiBC,EAAQC,EAAKC,EAAQ7D,GAC5D2D,EAASC,CACX,CACA,OAAO5D,CACT,CWwCQ8a,CACEpsB,KAAKgV,gBACL,EACAhV,KAAK2rB,MACL3rB,KAAKmV,OACL,IAGJnV,KAAKmpB,kBAAoBnpB,KAAK6E,eXuG7B,SACLmQ,EACAC,EACAoV,EACAlV,EACAqT,EACAC,EACAjX,EACAC,EACAyT,EACAC,EACArB,GAEAA,EAAWA,GAAsB,CAACC,IAAKA,KACvC,IAAK,IAAIljB,EAAI,EAAG2C,EAAK6mB,EAAKzpB,OAAQC,EAAI2C,IAAM3C,EAAG,CAC7C,MAAMqU,EAAMmV,EAAKxpB,GACjBskB,EAAqBoD,GACnBvT,EACAC,EACAC,EACAC,EACAqT,EACAC,EACAjX,EACAC,EACAyT,EACAC,EACArB,GAEF7O,EAASC,CACX,CACA,OAAOiQ,CACT,CWrIWkH,CACLrsB,KAAKgV,gBACL,EACAhV,KAAK2rB,MACL3rB,KAAKmV,OACLnV,KAAKkpB,WACL,EACA1X,EACAC,EACAyT,EACAC,GAEJ,CAQA,UAAA7Q,CAAW9C,EAAGC,GACZ,OAAO2Y,GACLpqB,KAAKssB,6BACL,EACAtsB,KAAK2rB,MACL3rB,KAAKmV,OACL3D,EACAC,EAEJ,CAOA,OAAA2X,GACE,OZ7JG,SAAqBpU,EAAiBC,EAAQoV,EAAMlV,GACzD,IAAIoX,EAAO,EACX,IAAK,IAAI1rB,EAAI,EAAG2C,EAAK6mB,EAAKzpB,OAAQC,EAAI2C,IAAM3C,EAAG,CAC7C,MAAMqU,EAAMmV,EAAKxpB,GACjB0rB,GAAQvE,GAAWhT,EAAiBC,EAAQC,EAAKC,GACjDF,EAASC,CACX,CACA,OAAOqX,CACT,CYqJWC,CACLxsB,KAAKssB,6BACL,EACAtsB,KAAK2rB,MACL3rB,KAAKmV,OAET,CAgBA,cAAA6R,CAAewE,GACb,IAAIxW,EAQJ,YAPchW,IAAVwsB,GACFxW,EAAkBhV,KAAKssB,6BAA6BjN,QACpDkM,GAAkBvW,EAAiB,EAAGhV,KAAK2rB,MAAO3rB,KAAKmV,OAAQqW,IAE/DxW,EAAkBhV,KAAKgV,gBTvLtB,SACLA,EACAC,EACAoV,EACAlV,EACAsX,GAEAA,OAAgCztB,IAAjBytB,EAA6BA,EAAe,GAC3D,IAAI5rB,EAAI,EACR,IAAK,IAAI8lB,EAAI,EAAG+F,EAAKrC,EAAKzpB,OAAQ+lB,EAAI+F,IAAM/F,EAAG,CAC7C,MAAMzR,EAAMmV,EAAK1D,GACjB8F,EAAa5rB,KAAO+nB,GAClB5T,EACAC,EACAC,EACAC,EACAsX,EAAa5rB,IAEfoU,EAASC,CACX,CAEA,OADAuX,EAAa7rB,OAASC,EACf4rB,CACT,CSoKWE,CAAwB3X,EAAiB,EAAGhV,KAAK2rB,MAAO3rB,KAAKmV,OACtE,CAKA,OAAAyX,GACE,OAAO5sB,KAAK2rB,KACd,CAKA,oBAAAkB,GACE,GAAI7sB,KAAK4rB,4BAA8B5rB,KAAK6E,cAAe,CACzD,MAAMioB,EAAa,GAAU9sB,KAAK6Y,aAClC7Y,KAAK6rB,mBC3NJ,SACL7W,EACAC,EACAoV,EACAlV,EACA4X,EACAC,EACAnY,GAEA,IAAIhU,EAAG2C,EAAIgO,EAAGE,EAAIE,EAAID,EAAIE,EAC1B,MAAMJ,EAAIsb,EAAYC,EAAoB,GAEpCC,EAAgB,GAEtB,IAAK,IAAI7a,EAAI,EAAG8a,EAAK7C,EAAKzpB,OAAQwR,EAAI8a,IAAM9a,EAAG,CAC7C,MAAM8C,EAAMmV,EAAKjY,GAGjB,IAFAV,EAAKsD,EAAgBE,EAAMC,GAC3BxD,EAAKqD,EAAgBE,EAAMC,EAAS,GAC/BtU,EAAIoU,EAAQpU,EAAIqU,EAAKrU,GAAKsU,EAC7BvD,EAAKoD,EAAgBnU,GACrBgR,EAAKmD,EAAgBnU,EAAI,IACpB4Q,GAAKE,GAAME,GAAMJ,GAAOE,GAAMF,GAAKA,GAAKI,KAC3CL,GAAMC,EAAIE,IAAOE,EAAKF,IAAQC,EAAKF,GAAMA,EACzCub,EAAclqB,KAAKyO,IAErBE,EAAKE,EACLD,EAAKE,CAET,CAGA,IAAIsb,EAASpJ,IACTqJ,GAAmB,IAGvB,IAFAH,EAAcI,KAAKjtB,GACnBsR,EAAKub,EAAc,GACdpsB,EAAI,EAAG2C,EAAKypB,EAAcrsB,OAAQC,EAAI2C,IAAM3C,EAAG,CAClD+Q,EAAKqb,EAAcpsB,GACnB,MAAMysB,EAAgB9f,KAAKC,IAAImE,EAAKF,GAChC4b,EAAgBF,IAClB5b,GAAKE,EAAKE,GAAM,EACZwY,GAAsBpV,EAAiBC,EAAQoV,EAAMlV,EAAQ3D,EAAGC,KAClE0b,EAAS3b,EACT4b,EAAmBE,IAGvB5b,EAAKE,CACP,CAMA,OALI6T,MAAM0H,KAGRA,EAASJ,EAAYC,IAEnBnY,GACFA,EAAK9R,KAAKoqB,EAAQ1b,EAAG2b,GACdvY,GAEF,CAACsY,EAAQ1b,EAAG2b,EACrB,CDkKgCG,CACxBvtB,KAAKssB,6BACL,EACAtsB,KAAK2rB,MACL3rB,KAAKmV,OACL2X,EACA,GAEF9sB,KAAK4rB,2BAA6B5rB,KAAK6E,aACzC,CACA,OACE7E,KACF,kBACF,CAQA,gBAAAwtB,GACE,OAAO,IAAI,GAAMxtB,KAAK6sB,uBAAwB,MAChD,CASA,kBAAAY,GACE,OAAOztB,KAAK2rB,MAAM/qB,MACpB,CAYA,aAAA8sB,CAAc3pB,GACZ,OAAIA,EAAQ,GAAK/D,KAAK2rB,MAAM/qB,QAAUmD,EAC7B,KAEF,IAAI,GACT/D,KAAKgV,gBAAgBqK,MACT,IAAVtb,EAAc,EAAI/D,KAAK2rB,MAAM5nB,EAAQ,GACrC/D,KAAK2rB,MAAM5nB,IAEb/D,KAAK+mB,OAET,CAOA,cAAA4G,GACE,MAAM5G,EAAS/mB,KAAK+mB,OACd/R,EAAkBhV,KAAKgV,gBACvBqV,EAAOrqB,KAAK2rB,MACZa,EAAc,GACpB,IAAIvX,EAAS,EACb,IAAK,IAAIpU,EAAI,EAAG2C,EAAK6mB,EAAKzpB,OAAQC,EAAI2C,IAAM3C,EAAG,CAC7C,MAAMqU,EAAMmV,EAAKxpB,GACXmnB,EAAa,IAAI,GACrBhT,EAAgBqK,MAAMpK,EAAQC,GAC9B6R,GAEFyF,EAAYzpB,KAAKilB,GACjB/S,EAASC,CACX,CACA,OAAOsX,CACT,CAKA,0BAAAF,GACE,GAAItsB,KAAK8rB,mBAAqB9rB,KAAK6E,cAAe,CAChD,MAAMmQ,EAAkBhV,KAAKgV,iBDzR5B,SACLA,EACAC,EACAoV,EACAlV,EACAqW,GAEAA,OAAkBxsB,IAAVwsB,GAAsBA,EAC9B,IAAK,IAAI3qB,EAAI,EAAG2C,EAAK6mB,EAAKzpB,OAAQC,EAAI2C,IAAM3C,EAAG,CAC7C,MAAMqU,EAAMmV,EAAKxpB,GACX4qB,EAAcJ,GAClBrW,EACAC,EACAC,EACAC,GAEF,GAAU,IAANtU,GACF,GAAK2qB,GAASC,IAAkBD,IAAUC,EACxC,OAAO,OAGT,GAAKD,IAAUC,IAAkBD,GAASC,EACxC,OAAO,EAGXxW,EAASC,CACX,CACA,OAAO,CACT,CC8PU0Y,CAAuB5Y,EAAiB,EAAGhV,KAAK2rB,MAAO3rB,KAAKmV,SAG9DnV,KAAK+rB,yBAA2B/W,EAAgBqK,QAChDrf,KAAK+rB,yBAAyBnrB,OAAS2qB,GACrCvrB,KAAK+rB,yBACL,EACA/rB,KAAK2rB,MACL3rB,KAAKmV,SAPPnV,KAAK+rB,yBAA2B/W,EAUlChV,KAAK8rB,kBAAoB9rB,KAAK6E,aAChC,CACA,OAAqC7E,KAA6B,wBACpE,CAQA,6BAAAsnB,CAA8B1C,GAE5B,MAAMmE,EAA4B,GAE5B8E,EAAiB,GAWvB,OAVA9E,EAA0BnoB,ORyDvB,SACLoU,EACAC,EACAoV,EACAlV,EACA2Q,EACAiD,EACAC,EACA6E,GAEA,IAAK,IAAIhtB,EAAI,EAAG2C,EAAK6mB,EAAKzpB,OAAQC,EAAI2C,IAAM3C,EAAG,CAC7C,MAAMqU,EAAMmV,EAAKxpB,GACjBmoB,EAAmBF,GACjB9T,EACAC,EACAC,EACAC,EACA2Q,EACAiD,EACAC,GAEF6E,EAAe9qB,KAAKimB,GACpB/T,EAASC,CACX,CACA,OAAO8T,CACT,CQlFuC8E,CACjC9tB,KAAKgV,gBACL,EACAhV,KAAK2rB,MACL3rB,KAAKmV,OACL3H,KAAK4N,KAAKwJ,GACVmE,EACA,EACA8E,GAEK,IAAInC,GAAQ3C,EAA2B,KAAM8E,EACtD,CAQA,OAAA9H,GACE,MAAO,SACT,CASA,gBAAAC,CAAiBlT,GACf,OJ/NG,SACLkC,EACAC,EACAoV,EACAlV,EACArC,GAEA,IA5EK,SACLkC,EACAC,EACAC,EACAC,EACArC,GAEA,SAAIwX,GAAqBtV,EAAiBC,EAAQC,EAAKC,EAAQrC,IAI7DoX,GACElV,EACAC,EACAC,EACAC,EACArC,EAAO,GACPA,EAAO,KAMToX,GACElV,EACAC,EACAC,EACAC,EACArC,EAAO,GACPA,EAAO,KAMToX,GACElV,EACAC,EACAC,EACAC,EACArC,EAAO,GACPA,EAAO,KAMToX,GACElV,EACAC,EACAC,EACAC,EACArC,EAAO,GACPA,EAAO,IAMb,CAiBOib,CAAqB/Y,EAAiBC,EAAQoV,EAAK,GAAIlV,EAAQrC,GAClE,OAAO,EAET,GAAoB,IAAhBuX,EAAKzpB,OACP,OAAO,EAET,IAAK,IAAIC,EAAI,EAAG2C,EAAK6mB,EAAKzpB,OAAQC,EAAI2C,IAAM3C,EAC1C,GACEipB,GACE9U,EACAqV,EAAKxpB,EAAI,GACTwpB,EAAKxpB,GACLsU,EACArC,KAICwX,GACCtV,EACAqV,EAAKxpB,EAAI,GACTwpB,EAAKxpB,GACLsU,EACArC,GAGF,OAAO,EAIb,OAAO,CACT,CI0LWkb,CACLhuB,KAAKssB,6BACL,EACAtsB,KAAK2rB,MACL3rB,KAAKmV,OACLrC,EAEJ,CASA,cAAA2U,CAAevT,EAAa6S,GAC1B/mB,KAAK0nB,UAAUX,EAAQ7S,EAAa,GAC/BlU,KAAKgV,kBACRhV,KAAKgV,gBAAkB,IAEzB,MAAMqV,EVrWH,SACLrV,EACAC,EACAwX,EACAtX,EACAkV,GAEAA,EAAOA,GAAc,GACrB,IAAIxpB,EAAI,EACR,IAAK,IAAI8lB,EAAI,EAAG+F,EAAKD,EAAa7rB,OAAQ+lB,EAAI+F,IAAM/F,EAAG,CACrD,MAAMzR,EAAMyT,GACV3T,EACAC,EACAwX,EAAa9F,GACbxR,GAEFkV,EAAKxpB,KAAOqU,EACZD,EAASC,CACX,CAEA,OADAmV,EAAKzpB,OAASC,EACPwpB,CACT,CUgViB4D,CACXjuB,KAAKgV,gBACL,EACAd,EACAlU,KAAKmV,OACLnV,KAAK2rB,OAEP3rB,KAAKgV,gBAAgBpU,OAAyB,IAAhBypB,EAAKzpB,OAAe,EAAIypB,EAAKA,EAAKzpB,OAAS,GACzEZ,KAAK4E,SACP,EAGF,YAkCO,SAASspB,GAAWpb,GACzB,GAAI,GAAQA,GACV,MAAM,IAAIxN,MAAM,2CAElB,MAAMoO,EAAOZ,EAAO,GACdc,EAAOd,EAAO,GACda,EAAOb,EAAO,GACde,EAAOf,EAAO,GACdkC,EAAkB,CACtBtB,EACAE,EACAF,EACAG,EACAF,EACAE,EACAF,EACAC,EACAF,EACAE,GAEF,OAAO,IAAI8X,GAAQ1W,EAAiB,KAAM,CAACA,EAAgBpU,QAC7D,CEpcA,SAASutB,GACPjb,EACAkb,EACAC,EACAC,GAEA,MAAMC,EAAc,GAASH,GAAaC,EAAa,GACjDG,EAAcnY,GAAU+X,GAAaC,EAAa,GAExD,OAAIC,EACK9gB,KAAK6D,IAAI6B,EAAY1F,KAAK8D,IAAIid,EAAaC,IAE7ChhB,KAAK6D,IAAI6B,EAAY1F,KAAK6D,IAAIkd,EAAaC,GACpD,CAcA,SAASC,GAA2Bvb,EAAYwb,EAAeC,GAC7D,IAAIC,EAASphB,KAAK6D,IAAI6B,EAAYwb,GAalC,OAVAE,GACEphB,KAAKuG,IAAI,EAHG,GAGSvG,KAAK8D,IAAI,EAAG4B,EAAawb,EAAgB,IAHlD,GAIZ,EACEC,IACFC,EAASphB,KAAK8D,IAAIsd,EAAQD,GAC1BC,GACEphB,KAAKuG,IAAI,EARC,GAQWvG,KAAK8D,IAAI,EAAGqd,EAAgBzb,EAAa,IARpD,GAUV,GAEG,GAAM0b,EAAQD,EAAgB,EAAmB,EAAhBD,EAC1C,CA0IO,SAASG,GACdH,EACAC,EACA3b,EACAob,EACAE,GAIA,OAFAtb,OAAoBhU,IAAXgU,GAAuBA,EAEzB,SAQKE,EAAYxS,EAAWyS,EAAMC,GACrC,QAAmBpU,IAAfkU,EAA0B,CAC5B,MAAM4b,EAAeV,EACjBD,GACEO,EACAN,EACAjb,EACAmb,GAEFI,EAEJ,OAAK1b,GAAWI,EAGTqb,GACLvb,EACA4b,EACAH,GALO,GAAMzb,EAAYyb,EAAeG,EAO5C,CAGJ,CACF,CCnOO,SAASC,GAAQxZ,GACtB,QAAiBvW,IAAbuW,EACF,OAAO,CAGX,CAMO,SAAS,GAAKA,GACnB,QAAiBvW,IAAbuW,EACF,OAAOA,CAGX,CCo2DA,SAASyZ,GAAkBhF,EAAUiF,GACnCxiB,YAAW,WACTud,EAASiF,EACX,GAAG,EACL,CAkMO,SAASC,GAAgBC,GAC9B,QAAIA,EAAUC,cAAgBD,EAAUE,eACjC,GAAiBF,EAAUC,aAAcD,EAAUE,gBAItDF,EAAUG,mBAAqBH,EAAUI,kBAGzCJ,EAAUK,iBAAmBL,EAAUM,cAI7C,CAUA,SAASC,GAAkBzmB,EAAYkK,EAAMwc,EAAUzc,EAAYqC,GAEjE,MAAMwB,EAAWvJ,KAAKqI,KAAKN,GAC3B,IAAIyB,EAAWxJ,KAAKuI,KAAKR,GACrBqa,EAAO3mB,EAAW,GAAK8N,EAAW9N,EAAW,GAAK+N,EAClD6Y,EAAO5mB,EAAW,GAAK8N,EAAW9N,EAAW,GAAK+N,EAStD,OARA4Y,IAASzc,EAAK,GAAK,EAAIwc,EAAS,IAAMzc,EACtC2c,IAASF,EAAS,GAAKxc,EAAK,GAAK,GAAKD,EAGtC8D,GAAYA,EAIL,CAHS4Y,EAAO7Y,EAAW8Y,EAAO7Y,EACzB6Y,EAAO9Y,EAAW6Y,EAAO5Y,EAG3C,CAEA,SAvzDA,cAAmB,EAIjB,WAAAjX,CAAYoH,GACV9E,QAKArC,KAAKyE,GAKLzE,KAAKoE,KAKLpE,KAAK0E,GAELyC,EAAU7H,OAAO4G,OAAO,CAAC,EAAGiB,GAM5BnH,KAAK8vB,OAAS,CAAC,EAAG,GAMlB9vB,KAAK+vB,YAAc,GAMnB/vB,KAAKgwB,oBAOLhwB,KAAKiwB,YAAc/O,GAAiB/Z,EAAQ6Y,WAAY,aAMxDhgB,KAAKkwB,cAAgB,CAAC,IAAK,KAM3BlwB,KAAKmwB,cAAgB,KAMrBnwB,KAAKowB,kBAMLpwB,KAAKqwB,gBAMLrwB,KAAKswB,YAAc,KAMnBtwB,KAAKuwB,gBAMLvwB,KAAKwwB,cAMLxwB,KAAKywB,mBAAgBzxB,EAEjBmI,EAAQ6Y,YrBtRT,SAAkC+O,GAEvC3O,UADyBphB,IAAZ+vB,GAA+BA,EAE9C,CqBoRM2B,GAEEvpB,EAAQ8L,SACV9L,EAAQ8L,OAASwP,GAAmBtb,EAAQ8L,OAAQjT,KAAKiwB,cAEvD9oB,EAAQ2L,SACV3L,EAAQ2L,OAAS6P,GAAexb,EAAQ2L,OAAQ9S,KAAKiwB,cAGvDjwB,KAAK2wB,cAAcxpB,EACrB,CAMA,aAAAwpB,CAAcxpB,GACZ,MAAMypB,EAAatxB,OAAO4G,OAAO,CAAC,EAAGiB,GACrC,IAAK,MAAM/H,KAAOyxB,UACTD,EAAWxxB,GAEpBY,KAAK+F,cAAc6qB,GAAY,GAE/B,MAAME,EAm/CH,SAAoC3pB,GACzC,IAAI4pB,EACArC,EACAC,EAOJ,IAAIqC,OACkBhyB,IAApBmI,EAAQ6pB,QAAwB7pB,EAAQ6pB,QA5sDnB,EA8sDnBC,OACkBjyB,IAApBmI,EAAQ8pB,QAAwB9pB,EAAQ8pB,QAPnB,GASvB,MAAMC,OACmBlyB,IAAvBmI,EAAQ+pB,WAA2B/pB,EAAQ+pB,WATnB,EAWpBC,OACmBnyB,IAAvBmI,EAAQgqB,YAA2BhqB,EAAQgqB,WAEvCne,OACmChU,IAAvCmI,EAAQiqB,4BACJjqB,EAAQiqB,2BAGR9C,OACuBtvB,IAA3BmI,EAAQmnB,gBAA+BnnB,EAAQmnB,eAE3CtO,EAAakB,GAAiB/Z,EAAQ6Y,WAAY,aAClDqR,EAAarR,EAAWnH,YAC9B,IAAIyY,EAAsBnqB,EAAQmqB,oBAC9Bxe,EAAS3L,EAAQ2L,OAMrB,GALKqe,GAAere,IAAUkN,EAAW9G,aACvCoY,GAAsB,EACtBxe,EAASue,QAGiBryB,IAAxBmI,EAAQoqB,YAA2B,CACrC,MAAMA,EAAcpqB,EAAQoqB,YAC5B7C,EAAgB6C,EAAYP,GAC5BrC,OAC2B3vB,IAAzBuyB,EAAYN,GACRM,EAAYN,GACZM,EAAYA,EAAY3wB,OAAS,GAGrCmwB,EADE5pB,EAAQqqB,oBF54DT,SACLD,EACAve,EACAob,EACAE,GAGA,OADAtb,OAAoBhU,IAAXgU,GAAuBA,EACzB,SAQKE,EAAYxS,EAAWyS,EAAMC,GACrC,QAAmBpU,IAAfkU,EAA0B,CAC5B,MAAMwb,EAAgB6C,EAAY,GAC5B5C,EAAgB4C,EAAYA,EAAY3wB,OAAS,GACjDkuB,EAAeV,EACjBD,GACEO,EACAN,EACAjb,EACAmb,GAEFI,EAGJ,GAAItb,EACF,OAAKJ,EAGEyb,GACLvb,EACA4b,EACAH,GALO,GAAMzb,EAAYyb,EAAeG,GAS5C,MAAM2C,EAASjkB,KAAK6D,IAAIyd,EAAc5b,GAChCwe,EAAIlkB,KAAKmkB,MAAMpxB,EAAkBgxB,EAAaE,EAAQ/wB,IAC5D,OAAI6wB,EAAYG,GAAK5C,GAAgB4C,EAAIH,EAAY3wB,OAAS,EACrD2wB,EAAYG,EAAI,GAElBH,EAAYG,EACrB,CAGJ,CACF,CE21D6BE,CACrBL,EACAve,GACCse,GAAuBxe,EACxBwb,GAGqBO,GACrBH,EACAC,EACA3b,GACCse,GAAuBxe,EACxBwb,EAGN,KAAO,CAEL,MAKMuD,GALQR,EAGV7jB,KAAK8D,IAAI,GAAS+f,GAAahb,GAAUgb,IADxC,IAAM3Z,GAAgBoa,QAAW9R,EAAWjH,oBCz9DpB,ID69DAvL,KAAKgF,IA/DV,EAzsDH,GA0wDfuf,EACJF,EACArkB,KAAKgF,IAnEiB,EAmEMwf,IAG9BtD,EAAgBvnB,EAAQunB,mBACF1vB,IAAlB0vB,EACFsC,EAAU,EAEVtC,EAAgBmD,EAAuBrkB,KAAKgF,IAAI0e,EAAYF,GAI9DrC,EAAgBxnB,EAAQwnB,mBACF3vB,IAAlB2vB,IAGEA,OAFoB3vB,IAApBmI,EAAQ8pB,aACoBjyB,IAA1BmI,EAAQunB,cACMA,EAAgBlhB,KAAKgF,IAAI0e,EAAYD,GAErCY,EAAuBrkB,KAAKgF,IAAI0e,EAAYD,GAG9Cc,GAKpBd,EACED,EACAxjB,KAAKmkB,MACHnkB,KAAKuG,IAAI2a,EAAgBC,GAAiBnhB,KAAKuG,IAAImd,IAEvDvC,EAAgBD,EAAgBlhB,KAAKgF,IAAI0e,EAAYD,EAAUD,GAG7DD,EADE5pB,EAAQqqB,oBF34DT,SACLS,EACAvD,EACAC,EACA3b,EACAob,EACAE,GAKA,OAHAtb,OAAoBhU,IAAXgU,GAAuBA,EAChC2b,OAAkC3vB,IAAlB2vB,EAA8BA,EAAgB,EAEvD,SAQKzb,EAAYxS,EAAWyS,EAAMC,GACrC,QAAmBpU,IAAfkU,EAA0B,CAC5B,MAAM4b,EAAeV,EACjBD,GACEO,EACAN,EACAjb,EACAmb,GAEFI,EAGJ,GAAItb,EACF,OAAKJ,EAGEyb,GACLvb,EACA4b,EACAH,GALO,GAAMzb,EAAYyb,EAAeG,GAS5C,MAAMhJ,EAAY,KACZoM,EAAe1kB,KAAKkF,KACxBlF,KAAKuG,IAAI2a,EAAgBI,GAAgBthB,KAAKuG,IAAIke,GAASnM,GAEvD7Q,GAAUvU,GAAa,GAAMolB,GAAa,GAC1C2L,EAASjkB,KAAK6D,IAAIyd,EAAc5b,GAChCif,EAAkB3kB,KAAKmkB,MAC3BnkB,KAAKuG,IAAI2a,EAAgB+C,GAAUjkB,KAAKuG,IAAIke,GAAShd,GAEjDmd,EAAY5kB,KAAK8D,IAAI4gB,EAAcC,GAEzC,OAAO,GADezD,EAAgBlhB,KAAKgF,IAAIyf,EAAOG,GAC1BzD,EAAeG,EAC7C,CAGJ,CACF,CEk1D6BuD,CACrBnB,EACAxC,EACAC,EACA3b,GACCse,GAAuBxe,EACxBwb,GAGqBO,GACrBH,EACAC,EACA3b,GACCse,GAAuBxe,EACxBwb,EAGN,CACA,MAAO,CACLgE,WAAYvB,EACZrC,cAAeA,EACfC,cAAeA,EACfqC,QAASA,EACTE,WAAYA,EAEhB,CAxnDqCqB,CAA2BprB,GAM5DnH,KAAKwyB,eAAiB1B,EAAyBpC,cAM/C1uB,KAAKyyB,eAAiB3B,EAAyBnC,cAM/C3uB,KAAK0yB,YAAc5B,EAAyBI,WAM5ClxB,KAAK2yB,aAAexrB,EAAQoqB,YAM5BvxB,KAAK4yB,SAAWzrB,EAAQ0rB,QAMxB7yB,KAAK8yB,SAAWhC,EAAyBE,QAEzC,MAAM+B,EAo7CH,SAAgC5rB,GACrC,QAAuBnI,IAAnBmI,EAAQ2L,OAAsB,CAChC,MAAME,OAC+BhU,IAAnCmI,EAAQ6rB,wBACJ7rB,EAAQ6rB,uBAEd,OAAOngB,GAAa1L,EAAQ2L,OAAQ3L,EAAQmqB,oBAAqBte,EACnE,CAEA,MAAMgN,EAAakB,GAAiB/Z,EAAQ6Y,WAAY,aACxD,IAA2B,IAAvB7Y,EAAQgqB,YAAuBnR,EAAW9G,WAAY,CACxD,MAAMpG,EAASkN,EAAWnH,YAAYwG,QAGtC,OAFAvM,EAAO,IAAK,IACZA,EAAO,GAAK/E,IACL8E,GAAaC,GAAQ,GAAO,EACrC,CAEA,OAAO,EACT,CAt8C6BmgB,CAAuB9rB,GAC1C4pB,EAAuBD,EAAyBwB,WAChDY,EAslDH,SAAkC/rB,GAGvC,QAD6BnI,IAA3BmI,EAAQgsB,gBAA+BhsB,EAAQgsB,eAC7B,CAClB,MAAMC,EAAoBjsB,EAAQisB,kBAClC,YAA0Bp0B,IAAtBo0B,IAAyD,IAAtBA,EDv/DpC,WACL,MAAMphB,EAA8B,GAAU,GAC9C,OAAO,SAMKuD,EAAUnC,GAClB,OAAIA,QAAyBpU,IAAbuW,EACPA,EAGL/H,KAAKC,IAAI8H,IAAavD,EACjB,EAEFuD,CAEX,CACF,CCq+Da8d,IAEiB,IAAtBD,EACK,GAEwB,iBAAtBA,EDvhER,SAAuBzyB,GAC5B,MAAM2yB,EAAS,EAAI9lB,KAAK0E,GAAMvR,EAC9B,OAAO,SAMK4U,EAAUnC,GAClB,OAAIA,EACKmC,OAGQvW,IAAbuW,EACFA,EAAW/H,KAAKmkB,MAAMpc,EAAW+d,EAAQ,IAAOA,OADlD,CAMJ,CACF,CCogEaC,CAAcH,GAEhB,EACT,CACA,OAAOrE,EACT,CAvmD+ByE,CAAyBrsB,GAMpDnH,KAAKyzB,aAAe,CAClBxgB,OAAQ8f,EACR7f,WAAY6d,EACZxb,SAAU2d,GAGZlzB,KAAK0zB,iBAAiC10B,IAArBmI,EAAQoO,SAAyBpO,EAAQoO,SAAW,GACrEvV,KAAK2zB,uBACgB30B,IAAnBmI,EAAQ8L,OAAuB9L,EAAQ8L,OAAS,WAEvBjU,IAAvBmI,EAAQ+L,WACVlT,KAAK4zB,cAAczsB,EAAQ+L,iBACDlU,IAAjBmI,EAAQ0sB,MACjB7zB,KAAK8zB,QAAQ3sB,EAAQ0sB,KAEzB,CAWA,WAAIhB,GACF,OAAO7yB,KAAK4yB,QACd,CACA,WAAIC,CAAQA,GACV,IAAIkB,EAAa/zB,KAAK4yB,SACtB5yB,KAAK4yB,SAAWC,EAChB,MAAM5f,EAASjT,KAAKg0B,oBACpB,GAAI/gB,EAAQ,CACV,MAAMghB,EAAapB,GAAW,CAAC,EAAG,EAAG,EAAG,GACxCkB,EAAaA,GAAc,CAAC,EAAG,EAAG,EAAG,GACrC,MAAM7gB,EAAalT,KAAKk0B,gBAClBC,EACHjhB,EAAa,GACb+gB,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IACxDG,EACHlhB,EAAa,GACb+gB,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IAC9Dj0B,KAAK2zB,kBAAkB,CAAC1gB,EAAO,GAAKkhB,EAASlhB,EAAO,GAAKmhB,GAC3D,CACF,CAUA,kBAAAC,CAAmBC,GACjB,MAAMntB,EAAUnH,KAAKiG,gBAerB,YAZ2BjH,IAAvBmI,EAAQ+L,WACV/L,EAAQ+L,WAAalT,KAAKk0B,gBAE1B/sB,EAAQ0sB,KAAO7zB,KAAKu0B,UAItBptB,EAAQ8L,OAASjT,KAAKg0B,oBAGtB7sB,EAAQoO,SAAWvV,KAAKw0B,cAEjBl1B,OAAO4G,OAAO,CAAC,EAAGiB,EAASmtB,EACpC,CAmCA,OAAAG,CAAQC,GACF10B,KAAK20B,UAAY30B,KAAK40B,gBACxB50B,KAAK60B,mBAAmB,GAE1B,MAAMrd,EAAO,IAAIzS,MAAM0f,UAAU7jB,QACjC,IAAK,IAAIC,EAAI,EAAGA,EAAI2W,EAAK5W,SAAUC,EAAG,CACpC,IAAIsG,EAAUsd,UAAU5jB,GACpBsG,EAAQ8L,SACV9L,EAAU7H,OAAO4G,OAAO,CAAC,EAAGiB,GAC5BA,EAAQ8L,OAASwP,GACftb,EAAQ8L,OACRjT,KAAK80B,kBAGL3tB,EAAQwe,SACVxe,EAAU7H,OAAO4G,OAAO,CAAC,EAAGiB,GAC5BA,EAAQwe,OAASlD,GACftb,EAAQwe,OACR3lB,KAAK80B,kBAGTtd,EAAK3W,GAAKsG,CACZ,CACAnH,KAAK+0B,gBAAgB/kB,MAAMhQ,KAAMwX,EACnC,CAKA,eAAAud,CAAgBL,GACd,IACI1K,EADAgL,EAAiBvQ,UAAU7jB,OAG7Bo0B,EAAiB,GACwB,mBAAlCvQ,UAAUuQ,EAAiB,KAElChL,EAAWvF,UAAUuQ,EAAiB,KACpCA,GAGJ,IAAIn0B,EAAI,EACR,KAAOA,EAAIm0B,IAAmBh1B,KAAK20B,UAAW9zB,EAAG,CAE/C,MAAM6P,EAAQ+T,UAAU5jB,GACpB6P,EAAMuC,QACRjT,KAAK2zB,kBAAkBjjB,EAAMuC,aAEZjU,IAAf0R,EAAMmjB,KACR7zB,KAAK8zB,QAAQpjB,EAAMmjB,MACVnjB,EAAMwC,YACflT,KAAK4zB,cAAcljB,EAAMwC,iBAEJlU,IAAnB0R,EAAM6E,UACRvV,KAAK0zB,YAAYhjB,EAAM6E,SAE3B,CACA,GAAI1U,IAAMm0B,EAIR,YAHIhL,GACFgF,GAAkBhF,GAAU,IAKhC,IAAIW,EAAQsK,KAAKC,MACbjiB,EAASjT,KAAKmwB,cAAc9Q,QAC5BnM,EAAalT,KAAKowB,kBAClB7a,EAAWvV,KAAKqwB,gBACpB,MAAM8E,EAAS,GACf,KAAOt0B,EAAIm0B,IAAkBn0B,EAAG,CAC9B,MAAMsG,EAA2Csd,UAAU5jB,GAErDsuB,EAAY,CAChBxE,MAAOA,EACPyK,UAAU,EACVzP,OAAQxe,EAAQwe,OAChB0P,cAA+Br2B,IAArBmI,EAAQkuB,SAAyBluB,EAAQkuB,SAAW,IAC9DC,OAAQnuB,EAAQmuB,QAAUne,GAC1B6S,SAAUA,GAmBZ,GAhBI7iB,EAAQ8L,SACVkc,EAAUC,aAAenc,EACzBkc,EAAUE,aAAeloB,EAAQ8L,OAAOoM,QACxCpM,EAASkc,EAAUE,mBAGArwB,IAAjBmI,EAAQ0sB,MACV1E,EAAUG,iBAAmBpc,EAC7Bic,EAAUI,iBAAmBvvB,KAAKu1B,qBAAqBpuB,EAAQ0sB,MAC/D3gB,EAAaic,EAAUI,kBACdpoB,EAAQ+L,aACjBic,EAAUG,iBAAmBpc,EAC7Bic,EAAUI,iBAAmBpoB,EAAQ+L,WACrCA,EAAaic,EAAUI,uBAGAvwB,IAArBmI,EAAQoO,SAAwB,CAClC4Z,EAAUK,eAAiBja,EAC3B,MAAMigB,EACJ,GAAOruB,EAAQoO,SAAWA,EAAW/H,KAAK0E,GAAI,EAAI1E,KAAK0E,IAAM1E,KAAK0E,GACpEid,EAAUM,eAAiBla,EAAWigB,EACtCjgB,EAAW4Z,EAAUM,cACvB,CAGIP,GAAgBC,GAClBA,EAAUiG,UAAW,EAGrBzK,GAASwE,EAAUkG,SAErBF,EAAOpyB,KAAKosB,EACd,CACAnvB,KAAK+vB,YAAYhtB,KAAKoyB,GACtBn1B,KAAKy1B,QEprBI,EForBwB,GACjCz1B,KAAK01B,mBACP,CAOA,YAAAd,GACE,OAAO50B,KAAK8vB,OE9rBH,GF8rBgC,CAC3C,CAOA,cAAA6F,GACE,OAAO31B,KAAK8vB,OEtsBD,GFssBgC,CAC7C,CAMA,gBAAA8F,GAEE,IAAIjQ,EADJ3lB,KAAKy1B,QE/sBI,GF+sByBz1B,KAAK8vB,OE/sB9B,IFitBT,IAAK,IAAIjvB,EAAI,EAAG2C,EAAKxD,KAAK+vB,YAAYnvB,OAAQC,EAAI2C,IAAM3C,EAAG,CACzD,MAAMs0B,EAASn1B,KAAK+vB,YAAYlvB,GAIhC,GAHIs0B,EAAO,GAAGnL,UACZgF,GAAkBmG,EAAO,GAAGnL,UAAU,IAEnCrE,EACH,IAAK,IAAIgB,EAAI,EAAG+F,EAAKyI,EAAOv0B,OAAQ+lB,EAAI+F,IAAM/F,EAAG,CAC/C,MAAMwI,EAAYgG,EAAOxO,GACzB,IAAKwI,EAAUiG,SAAU,CACvBzP,EAASwJ,EAAUxJ,OACnB,KACF,CACF,CAEJ,CACA3lB,KAAK+vB,YAAYnvB,OAAS,EAC1BZ,KAAKywB,cAAgB9K,EACrB3lB,KAAKswB,YAAc,KACnBtwB,KAAKuwB,gBAAkBxM,IACvB/jB,KAAKwwB,cAAgBzM,GACvB,CAKA,iBAAA2R,GAKE,QAJiC12B,IAA7BgB,KAAKgwB,sBACP6F,qBAAqB71B,KAAKgwB,qBAC1BhwB,KAAKgwB,yBAAsBhxB,IAExBgB,KAAK40B,eACR,OAEF,MAAMM,EAAMD,KAAKC,MACjB,IAAIY,GAAO,EACX,IAAK,IAAIj1B,EAAIb,KAAK+vB,YAAYnvB,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACrD,MAAMs0B,EAASn1B,KAAK+vB,YAAYlvB,GAChC,IAAIk1B,GAAiB,EACrB,IAAK,IAAIpP,EAAI,EAAG+F,EAAKyI,EAAOv0B,OAAQ+lB,EAAI+F,IAAM/F,EAAG,CAC/C,MAAMwI,EAAYgG,EAAOxO,GACzB,GAAIwI,EAAUiG,SACZ,SAEF,MAAMY,EAAUd,EAAM/F,EAAUxE,MAChC,IAAIsL,EACF9G,EAAUkG,SAAW,EAAIW,EAAU7G,EAAUkG,SAAW,EACtDY,GAAY,GACd9G,EAAUiG,UAAW,EACrBa,EAAW,GAEXF,GAAiB,EAEnB,MAAMG,EAAW/G,EAAUmG,OAAOW,GAClC,GAAI9G,EAAUC,aAAc,CAC1B,MAAM5Z,EAAK2Z,EAAUC,aAAa,GAC5B3Z,EAAK0Z,EAAUC,aAAa,GAC5B1d,EAAKyd,EAAUE,aAAa,GAC5B1d,EAAKwd,EAAUE,aAAa,GAClCrvB,KAAKswB,YAAcnB,EAAUE,aAC7B,MAAM7d,EAAIgE,EAAK0gB,GAAYxkB,EAAK8D,GAC1B/D,EAAIgE,EAAKygB,GAAYvkB,EAAK8D,GAChCzV,KAAKmwB,cAAgB,CAAC3e,EAAGC,EAC3B,CACA,GAAI0d,EAAUG,kBAAoBH,EAAUI,iBAAkB,CAC5D,MAAMrc,EACS,IAAbgjB,EACI/G,EAAUI,iBACVJ,EAAUG,iBACV4G,GACG/G,EAAUI,iBAAmBJ,EAAUG,kBAChD,GAAIH,EAAUxJ,OAAQ,CACpB,MAAMxS,EAAOnT,KAAKm2B,iBAAiBn2B,KAAKw0B,eAClC4B,EAAwBp2B,KAAKyzB,aAAavgB,WAC9CA,EACA,EACAC,GACA,GAEFnT,KAAKmwB,cAAgBnwB,KAAKq2B,oBACxBD,EACAjH,EAAUxJ,OAEd,CACA3lB,KAAKuwB,gBAAkBpB,EAAUI,iBACjCvvB,KAAKowB,kBAAoBld,EACzBlT,KAAKs2B,mBAAkB,EACzB,CACA,QAC+Bt3B,IAA7BmwB,EAAUK,qBACmBxwB,IAA7BmwB,EAAUM,eACV,CACA,MAAMla,EACS,IAAb2gB,EACI,GAAO/G,EAAUM,eAAiBjiB,KAAK0E,GAAI,EAAI1E,KAAK0E,IACpD1E,KAAK0E,GACLid,EAAUK,eACV0G,GACG/G,EAAUM,eAAiBN,EAAUK,gBAC9C,GAAIL,EAAUxJ,OAAQ,CACpB,MAAM4Q,EAAsBv2B,KAAKyzB,aAAale,SAC5CA,GACA,GAEFvV,KAAKmwB,cAAgBnwB,KAAKw2B,sBACxBD,EACApH,EAAUxJ,OAEd,CACA3lB,KAAKwwB,cAAgBrB,EAAUM,eAC/BzvB,KAAKqwB,gBAAkB9a,CACzB,CAGA,GAFAvV,KAAKs2B,mBAAkB,GACvBR,GAAO,GACF3G,EAAUiG,SACb,KAEJ,CACA,GAAIW,EAAgB,CAClB/1B,KAAK+vB,YAAYlvB,GAAK,KACtBb,KAAKy1B,QEx0BA,GFw0B6B,GAClCz1B,KAAKswB,YAAc,KACnBtwB,KAAKuwB,gBAAkBxM,IACvB/jB,KAAKwwB,cAAgBzM,IACrB,MAAMiG,EAAWmL,EAAO,GAAGnL,SACvBA,GACFgF,GAAkBhF,GAAU,EAEhC,CACF,CAEAhqB,KAAK+vB,YAAc/vB,KAAK+vB,YAAY0G,OAAOC,SACvCZ,QAAqC92B,IAA7BgB,KAAKgwB,sBACfhwB,KAAKgwB,oBAAsB2G,sBACzB32B,KAAK01B,kBAAkBpxB,KAAKtE,OAGlC,CAOA,qBAAAw2B,CAAsBjhB,EAAUoQ,GAC9B,IAAI1S,EACJ,MAAM2jB,EAAgB52B,KAAKg0B,oBhCl0BxB,IAAa/qB,EAAYusB,EgCw0B5B,YALsBx2B,IAAlB43B,IACF3jB,EAAS,CAAC2jB,EAAc,GAAKjR,EAAO,GAAIiR,EAAc,GAAKjR,EAAO,IAClE9O,GAAiB5D,EAAQsC,EAAWvV,KAAKw0B,ehCr0BfgB,EgCs0BJ7P,GhCt0BR1c,EgCs0BAgK,GhCr0BP,KAAOuiB,EAAM,GACxBvsB,EAAW,KAAOusB,EAAM,IgCs0BfviB,CACT,CAOA,mBAAAojB,CAAoBnjB,EAAYyS,GAC9B,IAAI1S,EACJ,MAAM2jB,EAAgB52B,KAAKg0B,oBACrB6C,EAAoB72B,KAAKk0B,gBAU/B,YATsBl1B,IAAlB43B,QAAqD53B,IAAtB63B,IAOjC5jB,EAAS,CALP0S,EAAO,GACNzS,GAAcyS,EAAO,GAAKiR,EAAc,IAAOC,EAEhDlR,EAAO,GACNzS,GAAcyS,EAAO,GAAKiR,EAAc,IAAOC,IAG7C5jB,CACT,CAQA,gBAAAkjB,CAAiB5gB,GACf,MAAMpC,EAAOnT,KAAKkwB,cAClB,GAAI3a,EAAU,CACZ,MAAMuhB,EAAI3jB,EAAK,GACT4jB,EAAI5jB,EAAK,GACf,MAAO,CACL3F,KAAKC,IAAIqpB,EAAItpB,KAAKqI,IAAIN,IAAa/H,KAAKC,IAAIspB,EAAIvpB,KAAKuI,IAAIR,IACzD/H,KAAKC,IAAIqpB,EAAItpB,KAAKuI,IAAIR,IAAa/H,KAAKC,IAAIspB,EAAIvpB,KAAKqI,IAAIN,IAE7D,CACA,OAAOpC,CACT,CASA,eAAA6jB,CAAgB7jB,GACdnT,KAAKkwB,cAAgBnrB,MAAMC,QAAQmO,GAAQA,EAAKkM,QAAU,CAAC,IAAK,KAC3Drf,KAAK40B,gBACR50B,KAAK60B,mBAAmB,EAE5B,CAQA,SAAAoC,GACE,MAAMhkB,EAASjT,KAAKg0B,oBACpB,OAAK/gB,EAGEsP,GAAiBtP,EAAQjT,KAAK80B,iBAF5B7hB,CAGX,CAMA,iBAAA+gB,GACE,OACEh0B,KAAKP,IAAIoxB,GAAa3f,OAE1B,CAKA,cAAAgmB,GACE,OAAOl3B,KAAKyzB,YACd,CAKA,sBAAA0D,GACE,OAAOn3B,KAAKP,IAAI,sBAClB,CAMA,QAAA23B,CAASC,GACP,YAAcr4B,IAAVq4B,GACFA,EAAM,GAAKr3B,KAAK8vB,OAAO,GACvBuH,EAAM,GAAKr3B,KAAK8vB,OAAO,GAChBuH,GAEFr3B,KAAK8vB,OAAOzQ,OACrB,CAYA,eAAAiY,CAAgBnkB,GAEd,OrB7PyBL,EqB4PV9S,KAAKu3B,wBAAwBpkB,GAChBnT,KAAK80B,gBrB3P1BhiB,EAFJ,IAAsBA,CqB8P3B,CAOA,uBAAAykB,CAAwBpkB,GACtBA,EAAOA,GAAQnT,KAAKw3B,+BACpB,MAAMvkB,EACJjT,KAAKg0B,oBAEP,GAAO/gB,EAAQ,kCACf,MAAMC,EAAqClT,KAAKk0B,gBAChD,QAAsBl1B,IAAfkU,EAA0B,sCACjC,MAAMqC,EAAmCvV,KAAKw0B,cAG9C,OAFA,QAAoBx1B,IAAbuW,EAAwB,oCAExB,GAAkBtC,EAAQC,EAAYqC,EAAUpC,EACzD,CAOA,gBAAAskB,GACE,OAAOz3B,KAAKwyB,cACd,CAOA,gBAAAkF,GACE,OAAO13B,KAAKyyB,cACd,CAOA,UAAAkF,GACE,OACE33B,KAAK43B,qBAAqB53B,KAAKyyB,eAEnC,CAOA,UAAAoF,CAAWhE,GACT7zB,KAAK2wB,cAAc3wB,KAAKq0B,mBAAmB,CAACpD,QAAS4C,IACvD,CAOA,UAAAiE,GACE,OACE93B,KAAK43B,qBAAqB53B,KAAKwyB,eAEnC,CAOA,UAAAuF,CAAWlE,GACT7zB,KAAK2wB,cAAc3wB,KAAKq0B,mBAAmB,CAACrD,QAAS6C,IACvD,CAOA,sBAAAmE,CAAuBC,GACrBj4B,KAAK2wB,cAAc3wB,KAAKq0B,mBAAmB,CAAC7C,oBAAqByG,IACnE,CAOA,aAAAnD,GACE,OAAO90B,KAAKiwB,WACd,CAQA,aAAAiE,GACE,OAAwCl0B,KAAKP,IAAIoxB,GAAa1f,WAChE,CAQA,cAAA+mB,GACE,OAAOl4B,KAAK2yB,YACd,CAUA,sBAAAwF,CAAuBrlB,EAAQK,GAC7B,OAAOnT,KAAKo4B,+BACVzV,GAAe7P,EAAQ9S,KAAK80B,iBAC5B3hB,EAEJ,CASA,8BAAAilB,CAA+BtlB,EAAQK,GACrCA,EAAOA,GAAQnT,KAAKw3B,+BACpB,MAAMjJ,EAAc,GAASzb,GAAUK,EAAK,GACtCqb,EAAcnY,GAAUvD,GAAUK,EAAK,GAC7C,OAAO3F,KAAK8D,IAAIid,EAAaC,EAC/B,CAQA,6BAAA6J,CAA8BpG,GAC5BA,EAAQA,GAAS,EACjB,MAAMvD,EAAgB1uB,KAAKs4B,yBAAyBt4B,KAAKwyB,gBACnD7D,EAAgB3uB,KAAKyyB,eACrBnhB,EAAM9D,KAAKuG,IAAI2a,EAAgBC,GAAiBnhB,KAAKuG,IAAIke,GAC/D,OAAO,SAKK1wB,GAER,OADmBmtB,EAAgBlhB,KAAKgF,IAAIyf,EAAO1wB,EAAQ+P,EAG/D,CACF,CAQA,WAAAkjB,GACE,OAA8Bx0B,KAAKP,IAAIoxB,GAAazf,SACtD,CAQA,6BAAAmnB,CAA8BtG,GAC5B,MAAMuG,EAAWhrB,KAAKuG,IAAIke,GAAS,GAC7BvD,EAAgB1uB,KAAKs4B,yBAAyBt4B,KAAKwyB,gBACnD7D,EAAgB3uB,KAAKyyB,eACrBnhB,EAAM9D,KAAKuG,IAAI2a,EAAgBC,GAAiB6J,EACtD,OAAO,SAKKtlB,GAER,OADc1F,KAAKuG,IAAI2a,EAAgBxb,GAAcslB,EAAWlnB,CAGpE,CACF,CAQA,4BAAAkmB,CAA6BjiB,GAC3B,IAAIpC,EAAOnT,KAAKm2B,iBAAiB5gB,GACjC,MAAMsd,EAAU7yB,KAAK4yB,SAOrB,OANIC,IACF1f,EAAO,CACLA,EAAK,GAAK0f,EAAQ,GAAKA,EAAQ,GAC/B1f,EAAK,GAAK0f,EAAQ,GAAKA,EAAQ,KAG5B1f,CACT,CAKA,QAAAxC,GACE,MAAMqP,EAAahgB,KAAK80B,gBAClB5hB,EAAalT,KAAKk0B,gBAClB3e,EAAWvV,KAAKw0B,cACtB,IAAIvhB,EACFjT,KAAKg0B,oBAEP,MAAMnB,EAAU7yB,KAAK4yB,SACrB,GAAIC,EAAS,CACX,MAAM4F,EAAcz4B,KAAKw3B,+BACzBvkB,EAASyc,GACPzc,EACAjT,KAAKm2B,mBACL,CAACsC,EAAY,GAAK,EAAI5F,EAAQ,GAAI4F,EAAY,GAAK,EAAI5F,EAAQ,IAC/D3f,EACAqC,EAEJ,CACA,MAAO,CACLtC,OAAQA,EAAOoM,MAAM,GACrBW,gBAA2BhhB,IAAfghB,EAA2BA,EAAa,KACpD9M,WAAYA,EACZwlB,WAAY14B,KAAKswB,YACjBqI,eAAgB34B,KAAKuwB,gBACrBqI,aAAc54B,KAAKwwB,cACnBjb,SAAUA,EACVse,KAAM7zB,KAAKu0B,UAEf,CAKA,qBAAAsE,GACE,MAAO,CACLC,UAAW94B,KAAK2Q,WAChBmC,OAAQ9S,KAAKs3B,kBAEjB,CASA,OAAA/C,GACE,IAAIV,EACJ,MAAM3gB,EAAalT,KAAKk0B,gBAIxB,YAHmBl1B,IAAfkU,IACF2gB,EAAO7zB,KAAK43B,qBAAqB1kB,IAE5B2gB,CACT,CAQA,oBAAA+D,CAAqB1kB,GACnB,IACI5B,EAAK4f,EADLjc,EAASjV,KAAK8yB,UAAY,EAE9B,GAAI9yB,KAAK2yB,aAAc,CACrB,MAAMoG,EAAUx4B,EAAkBP,KAAK2yB,aAAczf,EAAY,GACjE+B,EAAS8jB,EACTznB,EAAMtR,KAAK2yB,aAAaoG,GAEtB7H,EADE6H,GAAW/4B,KAAK2yB,aAAa/xB,OAAS,EAC3B,EAEA0Q,EAAMtR,KAAK2yB,aAAaoG,EAAU,EAEnD,MACEznB,EAAMtR,KAAKwyB,eACXtB,EAAalxB,KAAK0yB,YAEpB,OAAOzd,EAASzH,KAAKuG,IAAIzC,EAAM4B,GAAc1F,KAAKuG,IAAImd,EACxD,CAQA,oBAAAqE,CAAqB1B,GACnB,GAAI7zB,KAAK2yB,cAAc/xB,OAAQ,CAC7B,GAAiC,IAA7BZ,KAAK2yB,aAAa/xB,OACpB,OAAOZ,KAAK2yB,aAAa,GAE3B,MAAMqG,EAAY,GAChBxrB,KAAKmkB,MAAMkC,GACX,EACA7zB,KAAK2yB,aAAa/xB,OAAS,GAEvBswB,EACJlxB,KAAK2yB,aAAaqG,GAAah5B,KAAK2yB,aAAaqG,EAAY,GAC/D,OACEh5B,KAAK2yB,aAAaqG,GAClBxrB,KAAKgF,IAAI0e,EAAY,GAAM2C,EAAOmF,EAAW,EAAG,GAEpD,CACA,OACEh5B,KAAKwyB,eAAiBhlB,KAAKgF,IAAIxS,KAAK0yB,YAAamB,EAAO7zB,KAAK8yB,SAEjE,CAYA,GAAAmG,CAAIC,EAAkB/xB,GAEpB,IAAIgyB,EAOJ,GANA,GACEp0B,MAAMC,QAAQk0B,IAEV,mBADuB,EAAwC,sBAEnE,qDAEEn0B,MAAMC,QAAQk0B,GAChB,IACG,GAAQA,GACT,kDAGFC,EAAW,GADIxW,GAAeuW,EAAkBl5B,KAAK80B,uBAEhD,GAAmC,WAA/BoE,EAAiBnT,UAAwB,CAClD,MAAMjT,EAAS6P,GACbuW,EAAiBrgB,YACjB7Y,KAAK80B,iBAEPqE,EAAW,GAAkBrmB,GAC7BqmB,EAAStiB,OAAO7W,KAAKw0B,cAAe,GAAU1hB,GAChD,KAAO,CACL,MAAMuP,EAAiBC,KAErB6W,EADE9W,EAEA6W,EACGpU,QACA1C,UAAUC,EAAgBriB,KAAK80B,iBAGzBoE,CAEf,CAEAl5B,KAAKo5B,YAAYD,EAAUhyB,EAC7B,CAOA,wBAAAkyB,CAAyBF,GACvB,MAAM5jB,EAAWvV,KAAKw0B,cAChBzd,EAAWvJ,KAAKqI,IAAIN,GACpByB,EAAWxJ,KAAKuI,KAAKR,GACrB+jB,EAASH,EAASjS,qBAClB/R,EAASgkB,EAAS5R,YACxB,IAAIgS,EAAU,IACVC,EAAU,IACVC,GAAU,IACVC,GAAU,IACd,IAAK,IAAI74B,EAAI,EAAG2C,EAAK81B,EAAO14B,OAAQC,EAAI2C,EAAI3C,GAAKsU,EAAQ,CACvD,MAAMya,EAAO0J,EAAOz4B,GAAKkW,EAAWuiB,EAAOz4B,EAAI,GAAKmW,EAC9C6Y,EAAOyJ,EAAOz4B,GAAKmW,EAAWsiB,EAAOz4B,EAAI,GAAKkW,EACpDwiB,EAAU/rB,KAAK6D,IAAIkoB,EAAS3J,GAC5B4J,EAAUhsB,KAAK6D,IAAImoB,EAAS3J,GAC5B4J,EAAUjsB,KAAK8D,IAAImoB,EAAS7J,GAC5B8J,EAAUlsB,KAAK8D,IAAIooB,EAAS7J,EAC9B,CACA,MAAO,CAAC0J,EAASC,EAASC,EAASC,EACrC,CAMA,WAAAN,CAAYD,EAAUhyB,GAEpB,IAAIgM,GADJhM,EAAUA,GAAW,CAAC,GACHgM,KACdA,IACHA,EAAOnT,KAAKw3B,gCAEd,MAAM3E,OACgB7zB,IAApBmI,EAAQ0rB,QAAwB1rB,EAAQ0rB,QAAU,CAAC,EAAG,EAAG,EAAG,GACxDkG,OAA8B/5B,IAApBmI,EAAQ4xB,SAAwB5xB,EAAQ4xB,QACxD,IAAIpK,EAEFA,OAD4B3vB,IAA1BmI,EAAQwnB,cACMxnB,EAAQwnB,mBACK3vB,IAApBmI,EAAQ8pB,QACDjxB,KAAKu1B,qBAAqBpuB,EAAQ8pB,SAElC,EAGlB,MAAM0I,EAAgB35B,KAAKq5B,yBAAyBF,GAGpD,IAAIjmB,EAAalT,KAAKo4B,+BAA+BuB,EAAe,CAClExmB,EAAK,GAAK0f,EAAQ,GAAKA,EAAQ,GAC/B1f,EAAK,GAAK0f,EAAQ,GAAKA,EAAQ,KAEjC3f,EAAauS,MAAMvS,GACfyb,EACAnhB,KAAK8D,IAAI4B,EAAYyb,GACzBzb,EAAalT,KAAKs4B,yBAAyBplB,EAAY6lB,EAAU,EAAI,GAGrE,MAAMxjB,EAAWvV,KAAKw0B,cAChBxd,EAAWxJ,KAAKuI,IAAIR,GACpBwB,EAAWvJ,KAAKqI,IAAIN,GACpBqkB,EAAY,GAAUD,GAC5BC,EAAU,KAAQ/G,EAAQ,GAAKA,EAAQ,IAAM,EAAK3f,EAClD0mB,EAAU,KAAQ/G,EAAQ,GAAKA,EAAQ,IAAM,EAAK3f,EAClD,MAAM2mB,EAAUD,EAAU,GAAK7iB,EAAW6iB,EAAU,GAAK5iB,EACnD8iB,EAAUF,EAAU,GAAK7iB,EAAW6iB,EAAU,GAAK5iB,EACnD/D,EAASjT,KAAK+5B,qBAAqB,CAACF,EAASC,GAAU5mB,GACvD8W,EAAW7iB,EAAQ6iB,SAAW7iB,EAAQ6iB,SAAW5oB,OAE9BpC,IAArBmI,EAAQkuB,SACVr1B,KAAK+0B,gBACH,CACE7hB,WAAYA,EACZD,OAAQA,EACRoiB,SAAUluB,EAAQkuB,SAClBC,OAAQnuB,EAAQmuB,QAElBtL,IAGFhqB,KAAKowB,kBAAoBld,EACzBlT,KAAKmwB,cAAgBld,EACrBjT,KAAKs2B,mBAAkB,GAAO,GAC9BtH,GAAkBhF,GAAU,GAEhC,CASA,QAAAgQ,CAAS/wB,EAAYkK,EAAMwc,GACzB3vB,KAAKi6B,iBACHxX,GAAmBxZ,EAAYjJ,KAAK80B,iBACpC3hB,EACAwc,EAEJ,CAOA,gBAAAsK,CAAiBhxB,EAAYkK,EAAMwc,GACjC3vB,KAAK2zB,kBACHjE,GACEzmB,EACAkK,EACAwc,EACA3vB,KAAKk0B,gBACLl0B,KAAKw0B,eAGX,CAUA,oBAAA0F,CAAqBjnB,EAAQC,EAAYqC,EAAUpC,GACjD,IAAIE,EACJ,MAAMwf,EAAU7yB,KAAK4yB,SACrB,GAAIC,GAAW5f,EAAQ,CACrB,MAAMwlB,EAAcz4B,KAAKw3B,8BAA8BjiB,GACjD4kB,EAAgBzK,GACpBzc,EACAE,EACA,CAACslB,EAAY,GAAK,EAAI5F,EAAQ,GAAI4F,EAAY,GAAK,EAAI5F,EAAQ,IAC/D3f,EACAqC,GAEFlC,EAAc,CACZJ,EAAO,GAAKknB,EAAc,GAC1BlnB,EAAO,GAAKknB,EAAc,GAE9B,CACA,OAAO9mB,CACT,CAKA,KAAAshB,GACE,QAAS30B,KAAKg0B,0BAAgDh1B,IAAzBgB,KAAKk0B,eAC5C,CAOA,YAAAkG,CAAaC,GACX,MAAMpnB,EAASsP,GAAiBviB,KAAKmwB,cAAenwB,KAAK80B,iBACzD90B,KAAKs6B,UAAU,CACbrnB,EAAO,GAAKonB,EAAiB,GAC7BpnB,EAAO,GAAKonB,EAAiB,IAEjC,CAMA,oBAAAE,CAAqBF,GACnB,MAAMpnB,EAASjT,KAAKmwB,cACpBnwB,KAAK2zB,kBAAkB,CACrB1gB,EAAO,GAAKonB,EAAiB,GAC7BpnB,EAAO,GAAKonB,EAAiB,IAEjC,CASA,gBAAAG,CAAiB1mB,EAAO6R,GACtBA,EAASA,GAAUlD,GAAmBkD,EAAQ3lB,KAAK80B,iBACnD90B,KAAKy6B,yBAAyB3mB,EAAO6R,EACvC,CAQA,wBAAA8U,CAAyB3mB,EAAO6R,GAC9B,MAAMvS,EAAWpT,KAAK40B,gBAAkB50B,KAAK21B,iBACvCxiB,EAAOnT,KAAKm2B,iBAAiBn2B,KAAKw0B,eAClCkG,EAAgB16B,KAAKyzB,aAAavgB,WACtClT,KAAKowB,kBAAoBtc,EACzB,EACAX,EACAC,GAGEuS,IACF3lB,KAAKmwB,cAAgBnwB,KAAKq2B,oBAAoBqE,EAAe/U,IAG/D3lB,KAAKowB,mBAAqBtc,EAC1B9T,KAAKs2B,mBACP,CASA,UAAAqE,CAAWnF,EAAO7P,GAChB3lB,KAAKw6B,iBAAiBhtB,KAAKgF,IAAIxS,KAAK0yB,aAAc8C,GAAQ7P,EAC5D,CASA,cAAAiV,CAAepF,EAAO7P,GAChBA,IACFA,EAASlD,GAAmBkD,EAAQ3lB,KAAK80B,kBAE3C90B,KAAK66B,uBAAuBrF,EAAO7P,EACrC,CAMA,sBAAAkV,CAAuBrF,EAAO7P,GAC5B,MAAMvS,EAAWpT,KAAK40B,gBAAkB50B,KAAK21B,iBACvCmF,EAAc96B,KAAKyzB,aAAale,SACpCvV,KAAKqwB,gBAAkBmF,EACvBpiB,GAEEuS,IACF3lB,KAAKmwB,cAAgBnwB,KAAKw2B,sBAAsBsE,EAAanV,IAE/D3lB,KAAKqwB,iBAAmBmF,EACxBx1B,KAAKs2B,mBACP,CAQA,SAAAgE,CAAUrnB,GACRjT,KAAK2zB,kBACH1gB,EAASwP,GAAmBxP,EAAQjT,KAAK80B,iBAAmB7hB,EAEhE,CAMA,iBAAA0gB,CAAkB1gB,GAChBjT,KAAKmwB,cAAgBld,EACrBjT,KAAKs2B,mBACP,CAOA,OAAAb,CAAQsF,EAAMvF,GAGZ,OAFAx1B,KAAK8vB,OAAOiL,IAASvF,EACrBx1B,KAAK4E,UACE5E,KAAK8vB,OAAOiL,EACrB,CAQA,aAAAnH,CAAc1gB,GACZlT,KAAKowB,kBAAoBld,EACzBlT,KAAKs2B,mBACP,CAQA,WAAA5C,CAAYne,GACVvV,KAAKqwB,gBAAkB9a,EACvBvV,KAAKs2B,mBACP,CAOA,OAAAxC,CAAQD,GACN7zB,KAAK4zB,cAAc5zB,KAAKu1B,qBAAqB1B,GAC/C,CAUA,iBAAAyC,CAAkB0E,EAAkBC,GAClC,MAAM7nB,EACJpT,KAAK40B,gBAAkB50B,KAAK21B,kBAAoBsF,EAG5CH,EAAc96B,KAAKyzB,aAAale,SACpCvV,KAAKqwB,gBACLjd,GAEID,EAAOnT,KAAKm2B,iBAAiB2E,GAC7BJ,EAAgB16B,KAAKyzB,aAAavgB,WACtClT,KAAKowB,kBACL,EACAjd,EACAC,GAEI8nB,EAAYl7B,KAAKyzB,aAAaxgB,OAClCjT,KAAKmwB,cACLuK,EACAvnB,EACAC,EACApT,KAAKk6B,qBACHl6B,KAAKmwB,cACLuK,EACAI,EACA3nB,IAIAnT,KAAKP,IAAIoxB,GAAazf,YAAc0pB,GACtC96B,KAAK0G,IAAImqB,GAAazf,SAAU0pB,GAE9B96B,KAAKP,IAAIoxB,GAAa1f,cAAgBupB,IACxC16B,KAAK0G,IAAImqB,GAAa1f,WAAYupB,GAClC16B,KAAK0G,IAAI,OAAQ1G,KAAKu0B,WAAW,IAGhC2G,GACAl7B,KAAKP,IAAIoxB,GAAa3f,SACtB,GAAOlR,KAAKP,IAAIoxB,GAAa3f,QAASgqB,IAEvCl7B,KAAK0G,IAAImqB,GAAa3f,OAAQgqB,GAG5Bl7B,KAAK40B,iBAAmBoG,GAC1Bh7B,KAAK41B,mBAEP51B,KAAKywB,mBAAgBzxB,CACvB,CAWA,kBAAA61B,CAAmBQ,EAAU8F,EAAqBxV,GAChD0P,OAAwBr2B,IAAbq2B,EAAyBA,EAAW,IAC/C,MAAM30B,EAAYy6B,GAAuB,EAEnCL,EAAc96B,KAAKyzB,aAAale,SAASvV,KAAKqwB,iBAC9Cld,EAAOnT,KAAKm2B,iBAAiB2E,GAC7BJ,EAAgB16B,KAAKyzB,aAAavgB,WACtClT,KAAKowB,kBACL1vB,EACAyS,GAEI+nB,EAAYl7B,KAAKyzB,aAAaxgB,OAClCjT,KAAKmwB,cACLuK,EACAvnB,GACA,EACAnT,KAAKk6B,qBACHl6B,KAAKmwB,cACLuK,EACAI,EACA3nB,IAIJ,GAAiB,IAAbkiB,IAAmBr1B,KAAKywB,cAK1B,OAJAzwB,KAAKowB,kBAAoBsK,EACzB16B,KAAKqwB,gBAAkByK,EACvB96B,KAAKmwB,cAAgB+K,OACrBl7B,KAAKs2B,oBAIP3Q,EAASA,IAAwB,IAAb0P,EAAiBr1B,KAAKywB,mBAAgBzxB,GAC1DgB,KAAKywB,mBAAgBzxB,EAGnBgB,KAAKk0B,kBAAoBwG,GACzB16B,KAAKw0B,gBAAkBsG,GACtB96B,KAAKg0B,qBACL,GAAOh0B,KAAKg0B,oBAAqBkH,KAE9Bl7B,KAAK40B,gBACP50B,KAAK41B,mBAGP51B,KAAK+0B,gBAAgB,CACnBxf,SAAUulB,EACV7nB,OAAQioB,EACRhoB,WAAYwnB,EACZrF,SAAUA,EACVC,OAAQre,GACR0O,OAAQA,IAGd,CAQA,gBAAAyV,GACEp7B,KAAK60B,mBAAmB,GAExB70B,KAAKy1B,QEpyDM,EFoyDwB,EACrC,CAUA,cAAA4F,CAAehG,EAAU8F,EAAqBxV,GAC5CA,EAASA,GAAUlD,GAAmBkD,EAAQ3lB,KAAK80B,iBACnD90B,KAAKs7B,uBAAuBjG,EAAU8F,EAAqBxV,EAC7D,CASA,sBAAA2V,CAAuBjG,EAAU8F,EAAqBxV,GAC/C3lB,KAAK21B,mBAGV31B,KAAKy1B,QE/zDM,GF+zDyB,GACpCz1B,KAAK60B,mBAAmBQ,EAAU8F,EAAqBxV,GACzD,CASA,oBAAAoU,CAAqB1K,EAAcE,GACjC,MAAMpc,EAAOnT,KAAKm2B,iBAAiBn2B,KAAKw0B,eACxC,OAAOx0B,KAAKyzB,aAAaxgB,OACvBoc,EACAE,GAAoBvvB,KAAKk0B,gBACzB/gB,EAEJ,CAWA,kBAAAooB,CAAmBC,EAAY96B,GAC7B,MAAM+6B,EAAYz7B,KAAKu1B,qBAAqBiG,GAC5C,OAAOx7B,KAAK43B,qBACV53B,KAAKs4B,yBAAyBmD,EAAW/6B,GAE7C,CAWA,wBAAA43B,CAAyB/I,EAAkB7uB,GACzCA,EAAYA,GAAa,EACzB,MAAMyS,EAAOnT,KAAKm2B,iBAAiBn2B,KAAKw0B,eAExC,OAAOx0B,KAAKyzB,aAAavgB,WAAWqc,EAAkB7uB,EAAWyS,EACnE,GGr2DWuoB,GAAe,YAgBfC,GAAqB,kBAgBrBC,GAAgB,aAShBC,GAAkB,eAMb,IAAIC,OACpB,CACE,qDACA,4CACA,8DACA,gDACA,8EACA,gEACA,mCACAC,KAAK,IACP,KC/DK,SAASC,GAAsBC,EAAOC,EAAQC,EAAYC,GAE/D,IAAIC,EAeJ,OAbEA,EADEF,GAAcA,EAAWv7B,OACgBu7B,EAAWG,QAC7C9xB,EACA,IAAIE,gBAAgBuxB,GAAS,IAAKC,GAAU,KAE5CK,SAASC,cAAc,UAE9BP,IACFI,EAAOJ,MAAQA,GAEbC,IACFG,EAAOH,OAASA,GAIhBG,EAAOI,WAAW,KAAML,EAE5B,CAGA,IAAIM,GAKG,SAASC,KAId,OAHKD,KACHA,GAAsBV,GAAsB,EAAG,IAE1CU,EACT,CAOO,SAASE,GAAcC,GAC5B,MAAMR,EAASQ,EAAQR,OACvBA,EAAOJ,MAAQ,EACfI,EAAOH,OAAS,EAChBW,EAAQC,UAAU,EAAG,EAAG,EAAG,EAC7B,CAoCO,SAASC,GAAYC,EAASC,GACnC,MAAMC,EAASD,EAAQE,WACnBD,GACFA,EAAOE,aAAaJ,EAASC,EAEjC,CC2DA,SApHA,cAAsB,EAIpB,WAAAl9B,CAAYoH,GACV9E,QAEA,MAAM4E,EAAUE,EAAQF,SACpBA,GAAYE,EAAQ1G,QAAWwG,EAAQo2B,MAAMC,gBAC/Cr2B,EAAQo2B,MAAMC,cAAgB,QAOhCt9B,KAAKiH,QAAUA,GAAoB,KAMnCjH,KAAKu9B,QAAU,KAMfv9B,KAAKmL,KAAO,KAMZnL,KAAKw9B,aAAe,GAEhBr2B,EAAQs2B,SACVz9B,KAAKy9B,OAASt2B,EAAQs2B,QAGpBt2B,EAAQ1G,QACVT,KAAK09B,UAAUv2B,EAAQ1G,OAE3B,CAMA,eAAAN,GACEH,KAAKiH,SAASmB,SACd/F,MAAMlC,iBACR,CAOA,MAAAw9B,GACE,OAAO39B,KAAKmL,IACd,CAUA,MAAAyyB,CAAOp1B,GACDxI,KAAKmL,MACPnL,KAAKiH,SAASmB,SAEhB,IAAK,IAAIvH,EAAI,EAAG2C,EAAKxD,KAAKw9B,aAAa58B,OAAQC,EAAI2C,IAAM3C,EACvD,EAAcb,KAAKw9B,aAAa38B,IAIlC,GAFAb,KAAKw9B,aAAa58B,OAAS,EAC3BZ,KAAKmL,KAAO3C,EACRA,EAAK,CACP,MAAM/H,EAAST,KAAKu9B,SAAW/0B,EAAIq1B,+BAC/B79B,KAAKiH,SACPxG,EAAOq9B,YAAY99B,KAAKiH,SAEtBjH,KAAKy9B,SAAWr8B,GAClBpB,KAAKw9B,aAAaz6B,KAChBmB,EAAOsE,EAAKu1B,EAAyB/9B,KAAKy9B,OAAQz9B,OAGtDwI,EAAIi1B,QACN,CACF,CAOA,MAAAA,CAAOO,GAAW,CAWlB,SAAAN,CAAUj9B,GACRT,KAAKu9B,QACe,iBAAX98B,EAAsB87B,SAAS0B,eAAex9B,GAAUA,CACnE,GC4LF,GAzSA,cAA0B,GAIxB,WAAAV,CAAYoH,GACVA,EAAUA,GAAoB,CAAC,EAE/B9E,MAAM,CACJ4E,QAASs1B,SAASC,cAAc,OAChCiB,OAAQt2B,EAAQs2B,OAChBh9B,OAAQ0G,EAAQ1G,SAOlBT,KAAKk+B,WAAa3B,SAASC,cAAc,MAMzCx8B,KAAKm+B,gBACmBn/B,IAAtBmI,EAAQi3B,WAA0Bj3B,EAAQi3B,UAM5Cp+B,KAAKq+B,eAAiBr+B,KAAKm+B,WAM3Bn+B,KAAKs+B,0BAA+Ct/B,IAAxBmI,EAAQo3B,YAMpCv+B,KAAKw+B,kBACqBx/B,IAAxBmI,EAAQo3B,aAA4Bp3B,EAAQo3B,YAEzCv+B,KAAKw+B,eACRx+B,KAAKm+B,YAAa,GAOpBn+B,KAAKy+B,cAAgBt3B,EAAQu3B,aAE7B,MAAMC,OACkB3/B,IAAtBmI,EAAQw3B,UAA0Bx3B,EAAQw3B,UAAY,iBAElDC,OACiB5/B,IAArBmI,EAAQy3B,SAAyBz3B,EAAQy3B,SAAW,eAEhDC,OACwB7/B,IAA5BmI,EAAQ03B,gBACJ13B,EAAQ03B,gBACRF,EAAY,UAEZG,OACsB9/B,IAA1BmI,EAAQ23B,cAA8B33B,EAAQ23B,cAAgB,IAE1DC,OAC0B//B,IAA9BmI,EAAQ43B,kBACJ53B,EAAQ43B,kBACRJ,EAAY,YAEW,iBAAlBG,GAKT9+B,KAAKg/B,eAAiBzC,SAASC,cAAc,QAC7Cx8B,KAAKg/B,eAAeC,YAAcH,EAClC9+B,KAAKg/B,eAAeL,UAAYI,GAEhC/+B,KAAKg/B,eAAiBF,EAGxB,MAAMI,OAA0BlgC,IAAlBmI,EAAQ+3B,MAAsB/3B,EAAQ+3B,MAAQ,IAEvC,iBAAVA,GAKTl/B,KAAKm/B,OAAS5C,SAASC,cAAc,QACrCx8B,KAAKm/B,OAAOF,YAAcC,EAC1Bl/B,KAAKm/B,OAAOR,UAAYE,GAExB7+B,KAAKm/B,OAASD,EAGhB,MAAME,EACJp/B,KAAKw+B,eAAiBx+B,KAAKm+B,WAAan+B,KAAKg/B,eAAiBh/B,KAAKm/B,OAMrEn/B,KAAKq/B,cAAgB9C,SAASC,cAAc,UAC5Cx8B,KAAKq/B,cAAcC,aAAa,OAAQ,UACxCt/B,KAAKq/B,cAAcC,aAAa,gBAAiB55B,QAAQ1F,KAAKm+B,aAC9Dn+B,KAAKq/B,cAAcE,MAAQX,EAC3B5+B,KAAKq/B,cAAcvB,YAAYsB,GAE/Bp/B,KAAKq/B,cAAc38B,iBACjB,EACA1C,KAAKw/B,aAAal7B,KAAKtE,OACvB,GAGF,MAAMy/B,EACJd,EACA,IACAhD,GACA,IACAC,IACC57B,KAAKm+B,YAAcn+B,KAAKw+B,aAAe,IAAM3C,GAAkB,KAC/D77B,KAAKw+B,aAAe,GAAK,qBACtBv3B,EAAUjH,KAAKiH,QACrBA,EAAQ03B,UAAYc,EACpBx4B,EAAQ62B,YAAY99B,KAAKq/B,eACzBp4B,EAAQ62B,YAAY99B,KAAKk+B,YAOzBl+B,KAAK0/B,sBAAwB,GAM7B1/B,KAAK2/B,kBAAmB,CAC1B,CAQA,0BAAAC,CAA2Bn3B,GACzB,MAAMo3B,EAAS7/B,KAAK29B,SAASmC,eACvBC,EAAsB,IAAIC,IAC9BH,EAAOI,SAASC,GAAUA,EAAMC,gBAAgB13B,MAQlD,QAN2BzJ,IAAvBgB,KAAKy+B,gBACP15B,MAAMC,QAAQhF,KAAKy+B,eACfz+B,KAAKy+B,cAAc72B,SAASG,GAASg4B,EAAoBK,IAAIr4B,KAC7Dg4B,EAAoBK,IAAIpgC,KAAKy+B,iBAG9Bz+B,KAAKs+B,qBAAsB,CAC9B,MAAMC,GAAesB,EAAOQ,MACzBH,IAA8D,IAApDA,EAAMI,aAAaC,+BAEhCvgC,KAAKwgC,eAAejC,EACtB,CACA,OAAOx5B,MAAM07B,KAAKV,EACpB,CAMA,oBAAMW,CAAej4B,GACnB,IAAKA,EAKH,YAJIzI,KAAK2/B,mBACP3/B,KAAKiH,QAAQo2B,MAAMsD,QAAU,OAC7B3gC,KAAK2/B,kBAAmB,IAK5B,MAAMjB,QAAqBj9B,QAAQm/B,IACjC5gC,KAAK4/B,2BAA2Bn3B,GAAYD,KAAKq4B,GAC/Cx/B,GAAU,IAAMw/B,OAIdC,EAAUpC,EAAa99B,OAAS,EAMtC,GALIZ,KAAK2/B,kBAAoBmB,IAC3B9gC,KAAKiH,QAAQo2B,MAAMsD,QAAUG,EAAU,GAAK,OAC5C9gC,KAAK2/B,iBAAmBmB,IAGtB//B,EAAO29B,EAAc1+B,KAAK0/B,uBAA9B,EF3IG,SAAwBqB,GAC7B,KAAOA,EAAKC,WACVD,EAAKC,UAAU54B,QAEnB,CE2II64B,CAAejhC,KAAKk+B,YAGpB,IAAK,IAAIr9B,EAAI,EAAG2C,EAAKk7B,EAAa99B,OAAQC,EAAI2C,IAAM3C,EAAG,CACrD,MAAMoG,EAAUs1B,SAASC,cAAc,MACvCv1B,EAAQi6B,UAAYxC,EAAa79B,GACjCb,KAAKk+B,WAAWJ,YAAY72B,EAC9B,CAEAjH,KAAK0/B,sBAAwBhB,CAX7B,CAYF,CAMA,YAAAc,CAAav8B,GACXA,EAAMd,iBACNnC,KAAKmhC,gBACLnhC,KAAKq+B,eAAiBr+B,KAAKm+B,UAC7B,CAKA,aAAAgD,GACEnhC,KAAKiH,QAAQm6B,UAAUC,OAAOxF,IAC1B77B,KAAKm+B,WACPpB,GAAY/8B,KAAKg/B,eAAgBh/B,KAAKm/B,QAEtCpC,GAAY/8B,KAAKm/B,OAAQn/B,KAAKg/B,gBAEhCh/B,KAAKm+B,YAAcn+B,KAAKm+B,WACxBn+B,KAAKq/B,cAAcC,aAAa,gBAAiB55B,QAAQ1F,KAAKm+B,YAChE,CAOA,cAAAmD,GACE,OAAOthC,KAAKw+B,YACd,CAOA,cAAAgC,CAAejC,GACTv+B,KAAKw+B,eAAiBD,IAG1Bv+B,KAAKw+B,aAAeD,EACpBv+B,KAAKiH,QAAQm6B,UAAUC,OAAO,oBAC1BrhC,KAAKq+B,gBACPr+B,KAAKmhC,gBAET,CASA,YAAAI,CAAanD,GACXp+B,KAAKq+B,eAAiBD,EACjBp+B,KAAKw+B,cAAgBx+B,KAAKm+B,aAAeC,GAG9Cp+B,KAAKmhC,eACP,CAQA,YAAAK,GACE,OAAOxhC,KAAKm+B,UACd,CAOA,MAAAV,CAAOO,GACLh+B,KAAK0gC,eAAe1C,EAASv1B,WAC/B,GC9JF,GAvJA,cAAqB,GAInB,WAAA1I,CAAYoH,GACVA,EAAUA,GAAoB,CAAC,EAE/B9E,MAAM,CACJ4E,QAASs1B,SAASC,cAAc,OAChCiB,OAAQt2B,EAAQs2B,OAChBh9B,OAAQ0G,EAAQ1G,SAGlB,MAAMk+B,OACkB3/B,IAAtBmI,EAAQw3B,UAA0Bx3B,EAAQw3B,UAAY,YAElDO,OAA0BlgC,IAAlBmI,EAAQ+3B,MAAsB/3B,EAAQ+3B,MAAQ,IAEtDuC,OACyBziC,IAA7BmI,EAAQs6B,iBACJt6B,EAAQs6B,iBACR,aAMNzhC,KAAKm/B,OAAS,KAEO,iBAAVD,GACTl/B,KAAKm/B,OAAS5C,SAASC,cAAc,QACrCx8B,KAAKm/B,OAAOR,UAAY8C,EACxBzhC,KAAKm/B,OAAOF,YAAcC,IAE1Bl/B,KAAKm/B,OAASD,EACdl/B,KAAKm/B,OAAOiC,UAAUhB,IAAIqB,IAG5B,MAAM7C,EAAWz3B,EAAQy3B,SAAWz3B,EAAQy3B,SAAW,iBAEjD7xB,EAASwvB,SAASC,cAAc,UACtCzvB,EAAO4xB,UAAYA,EAAY,SAC/B5xB,EAAOuyB,aAAa,OAAQ,UAC5BvyB,EAAOwyB,MAAQX,EACf7xB,EAAO+wB,YAAY99B,KAAKm/B,QAExBpyB,EAAOrK,iBACL,EACA1C,KAAKw/B,aAAal7B,KAAKtE,OACvB,GAGF,MAAMy/B,EACJd,EAAY,IAAMhD,GAAqB,IAAMC,GACzC30B,EAAUjH,KAAKiH,QACrBA,EAAQ03B,UAAYc,EACpBx4B,EAAQ62B,YAAY/wB,GAKpB/M,KAAK0hC,gBAAkBv6B,EAAQw6B,WAAax6B,EAAQw6B,gBAAa3iC,EAMjEgB,KAAK4hC,eAAiC5iC,IAArBmI,EAAQkuB,SAAyBluB,EAAQkuB,SAAW,IAMrEr1B,KAAK6hC,eAAiC7iC,IAArBmI,EAAQ26B,UAAyB36B,EAAQ26B,SAM1D9hC,KAAK+hC,eAAY/iC,EAEbgB,KAAK6hC,WACP7hC,KAAKiH,QAAQm6B,UAAUhB,IAAI1E,GAE/B,CAMA,YAAA8D,CAAav8B,GACXA,EAAMd,sBACuBnD,IAAzBgB,KAAK0hC,gBACP1hC,KAAK0hC,kBAEL1hC,KAAKgiC,aAET,CAKA,WAAAA,GACE,MACMC,EADMjiC,KAAK29B,SACAuE,UACjB,IAAKD,EAGH,OAEF,MAAM1sB,EAAW0sB,EAAKzN,mBACLx1B,IAAbuW,IACEvV,KAAK4hC,UAAY,GAAKrsB,GAAY,EAAI/H,KAAK0E,KAAQ,EACrD+vB,EAAKxN,QAAQ,CACXlf,SAAU,EACV8f,SAAUr1B,KAAK4hC,UACftM,OAAQre,KAGVgrB,EAAKvO,YAAY,GAGvB,CAOA,MAAA+J,CAAOO,GACL,MAAMv1B,EAAau1B,EAASv1B,WAC5B,IAAKA,EACH,OAEF,MAAM8M,EAAW9M,EAAWqwB,UAAUvjB,SACtC,GAAIA,GAAYvV,KAAK+hC,UAAW,CAC9B,MAAM3f,EAAY,UAAY7M,EAAW,OACzC,GAAIvV,KAAK6hC,UAAW,CAClB,MAAMM,EAAWniC,KAAKiH,QAAQm6B,UAAUe,SAASzG,IAC5CyG,GAAyB,IAAb5sB,EAEN4sB,GAAyB,IAAb5sB,GACrBvV,KAAKiH,QAAQm6B,UAAUh5B,OAAOszB,IAF9B17B,KAAKiH,QAAQm6B,UAAUhB,IAAI1E,GAI/B,CACA17B,KAAKm/B,OAAO9B,MAAMjb,UAAYA,CAChC,CACApiB,KAAK+hC,UAAYxsB,CACnB,GCtBF,GA9HA,cAAmB,GAIjB,WAAAxV,CAAYoH,GACVA,EAAUA,GAAoB,CAAC,EAE/B9E,MAAM,CACJ4E,QAASs1B,SAASC,cAAc,OAChC/7B,OAAQ0G,EAAQ1G,SAGlB,MAAMk+B,OACkB3/B,IAAtBmI,EAAQw3B,UAA0Bx3B,EAAQw3B,UAAY,UAElDnJ,OAA0Bx2B,IAAlBmI,EAAQquB,MAAsBruB,EAAQquB,MAAQ,EAEtD4M,OACwBpjC,IAA5BmI,EAAQi7B,gBACJj7B,EAAQi7B,gBACRzD,EAAY,MAEZ0D,OACyBrjC,IAA7BmI,EAAQk7B,iBACJl7B,EAAQk7B,iBACR1D,EAAY,OAEZ2D,OACoBtjC,IAAxBmI,EAAQm7B,YAA4Bn7B,EAAQm7B,YAAc,IACtDC,OACqBvjC,IAAzBmI,EAAQo7B,aAA6Bp7B,EAAQo7B,aAAe,IAExDC,OACuBxjC,IAA3BmI,EAAQq7B,eAA+Br7B,EAAQq7B,eAAiB,UAC5DC,OACwBzjC,IAA5BmI,EAAQs7B,gBACJt7B,EAAQs7B,gBACR,WAEAC,EAAYnG,SAASC,cAAc,UACzCkG,EAAU/D,UAAYyD,EACtBM,EAAUpD,aAAa,OAAQ,UAC/BoD,EAAUnD,MAAQiD,EAClBE,EAAU5E,YACe,iBAAhBwE,EACH/F,SAASoG,eAAeL,GACxBA,GAGNI,EAAUhgC,iBACR,EACA1C,KAAKw/B,aAAal7B,KAAKtE,KAAMw1B,IAC7B,GAGF,MAAMoN,EAAarG,SAASC,cAAc,UAC1CoG,EAAWjE,UAAY0D,EACvBO,EAAWtD,aAAa,OAAQ,UAChCsD,EAAWrD,MAAQkD,EACnBG,EAAW9E,YACe,iBAAjByE,EACHhG,SAASoG,eAAeJ,GACxBA,GAGNK,EAAWlgC,iBACT,EACA1C,KAAKw/B,aAAal7B,KAAKtE,MAAOw1B,IAC9B,GAGF,MAAMiK,EACJd,EAAY,IAAMhD,GAAqB,IAAMC,GACzC30B,EAAUjH,KAAKiH,QACrBA,EAAQ03B,UAAYc,EACpBx4B,EAAQ62B,YAAY4E,GACpBz7B,EAAQ62B,YAAY8E,GAMpB5iC,KAAK4hC,eAAiC5iC,IAArBmI,EAAQkuB,SAAyBluB,EAAQkuB,SAAW,GACvE,CAOA,YAAAmK,CAAahK,EAAOvyB,GAClBA,EAAMd,iBACNnC,KAAK6iC,aAAarN,EACpB,CAMA,YAAAqN,CAAarN,GACX,MACMyM,EADMjiC,KAAK29B,SACAuE,UACjB,IAAKD,EAGH,OAEF,MAAMa,EAAcb,EAAK1N,UACzB,QAAoBv1B,IAAhB8jC,EAA2B,CAC7B,MAAMC,EAAUd,EAAK1G,mBAAmBuH,EAActN,GAClDx1B,KAAK4hC,UAAY,GACfK,EAAKrN,gBACPqN,EAAKrM,mBAEPqM,EAAKxN,QAAQ,CACXZ,KAAMkP,EACN1N,SAAUr1B,KAAK4hC,UACftM,OAAQre,MAGVgrB,EAAKnO,QAAQiP,EAEjB,CACF,GC/BF,GAnHA,MAOE,WAAAhjC,CAAYijC,EAAOC,EAAaC,GAK9BljC,KAAKmjC,OAASH,EAMdhjC,KAAKojC,aAAeH,EAMpBjjC,KAAKqjC,OAASH,EAMdljC,KAAKsjC,QAAU,GAMftjC,KAAKujC,OAAS,EAMdvjC,KAAKwjC,iBAAmB,CAC1B,CAKA,KAAAC,GACEzjC,KAAKsjC,QAAQ1iC,OAAS,EACtBZ,KAAKujC,OAAS,EACdvjC,KAAKwjC,iBAAmB,CAC1B,CAMA,MAAAE,CAAOlyB,EAAGC,GACRzR,KAAKsjC,QAAQvgC,KAAKyO,EAAGC,EAAGwjB,KAAKC,MAC/B,CAKA,GAAAhgB,GACE,GAAIlV,KAAKsjC,QAAQ1iC,OAAS,EAGxB,OAAO,EAET,MAAMsiC,EAAQjO,KAAKC,MAAQl1B,KAAKqjC,OAC1BM,EAAY3jC,KAAKsjC,QAAQ1iC,OAAS,EACxC,GAAIZ,KAAKsjC,QAAQK,EAAY,GAAKT,EAGhC,OAAO,EAIT,IAAIU,EAAaD,EAAY,EAC7B,KAAOC,EAAa,GAAK5jC,KAAKsjC,QAAQM,EAAa,GAAKV,GACtDU,GAAc,EAGhB,MAAMvO,EAAWr1B,KAAKsjC,QAAQK,EAAY,GAAK3jC,KAAKsjC,QAAQM,EAAa,GAIzE,GAAIvO,EAAW,IAAO,GACpB,OAAO,EAGT,MAAMvjB,EAAK9R,KAAKsjC,QAAQK,GAAa3jC,KAAKsjC,QAAQM,GAC5C7xB,EAAK/R,KAAKsjC,QAAQK,EAAY,GAAK3jC,KAAKsjC,QAAQM,EAAa,GAGnE,OAFA5jC,KAAKujC,OAAS/1B,KAAKsS,MAAM/N,EAAID,GAC7B9R,KAAKwjC,iBAAmBh2B,KAAK4N,KAAKtJ,EAAKA,EAAKC,EAAKA,GAAMsjB,EAChDr1B,KAAKwjC,iBAAmBxjC,KAAKojC,YACtC,CAKA,WAAA7jB,GACE,OAAQvf,KAAKojC,aAAepjC,KAAKwjC,kBAAoBxjC,KAAKmjC,MAC5D,CAKA,QAAAU,GACE,OAAO7jC,KAAKujC,MACd,GCnHF,GACU,SC4IH,SAASO,GAAY7B,EAAMzM,EAAO7P,EAAQ0P,GAC/C,MAAMyN,EAAcb,EAAK1N,UAEzB,QAAoBv1B,IAAhB8jC,EACF,OAGF,MAAMC,EAAUd,EAAK1G,mBAAmBuH,EAActN,GAChDkF,EAAgBuH,EAAK1M,qBAAqBwN,GAE5Cd,EAAKrN,gBACPqN,EAAKrM,mBAEPqM,EAAKxN,QAAQ,CACXvhB,WAAYwnB,EACZ/U,OAAQA,EACR0P,cAAuBr2B,IAAbq2B,EAAyBA,EAAW,IAC9CC,OAAQre,IAEZ,CAEA,SAjIA,cAA0B,EAIxB,WAAAlX,CAAYoH,GACV9E,QAKArC,KAAKyE,GAKLzE,KAAKoE,KAKLpE,KAAK0E,GAEDyC,GAAWA,EAAQ1D,cACrBzD,KAAKyD,YAAc0D,EAAQ1D,aAO7BzD,KAAKmL,KAAO,KAEZnL,KAAK+jC,WAAU,EACjB,CAQA,SAAAC,GACE,OAA+BhkC,KAAKP,IAAI,GAC1C,CAOA,MAAAk+B,GACE,OAAO39B,KAAKmL,IACd,CAQA,WAAA1H,CAAYwgC,GACV,OAAO,CACT,CAQA,SAAAF,CAAUG,GACRlkC,KAAK0G,IAAI,GAA4Bw9B,EACvC,CAQA,MAAAtG,CAAOp1B,GACLxI,KAAKmL,KAAO3C,CACd,GC1DF,GA/CA,cAA8B,GAI5B,WAAAzI,CAAYoH,GACV9E,QAEA8E,EAAUA,GAAoB,CAAC,EAM/BnH,KAAKmkC,OAASh9B,EAAQquB,MAAQruB,EAAQquB,MAAQ,EAM9Cx1B,KAAK4hC,eAAiC5iC,IAArBmI,EAAQkuB,SAAyBluB,EAAQkuB,SAAW,GACvE,CASA,WAAA5xB,CAAYwgC,GACV,IAAIG,GAAY,EAChB,GAAIH,EAAgBjiC,MAAQ,EAAoBqH,SAAU,CACxD,MAAMg7B,EACJJ,EACF,cACMz7B,EAAMy7B,EAAgBz7B,IACtBmd,EAASse,EAAgBh7B,WACzBusB,EAAQ6O,EAAaC,UAAYtkC,KAAKmkC,OAASnkC,KAAKmkC,OAE1DL,GADat7B,EAAI05B,UACC1M,EAAO7P,EAAQ3lB,KAAK4hC,WACtCyC,EAAaliC,iBACbiiC,GAAY,CACd,CACA,OAAQA,CACV,GCzCK,SAAS,GAAI1P,GAClB,MAAM6P,EAAa9f,UAKnB,OAAO,SAAUxhB,GACf,IAAIuhC,GAAO,EACX,IAAK,IAAI3jC,EAAI,EAAG2C,EAAK+gC,EAAW3jC,OAAQC,EAAI2C,IAC1CghC,EAAOA,GAAQD,EAAW1jC,GAAGoC,GACxBuhC,KAF2C3jC,GAMlD,OAAO2jC,CACT,CACF,CAUO,MAmBMC,GAAmB,SAAUR,GACxC,MAAMv7B,EACJu7B,EACF,cACA,OACEv7B,EAAcg8B,UACZh8B,EAAci8B,SAAWj8B,EAAck8B,UACzCl8B,EAAc47B,QAElB,EA0BaO,GAAoB,SAAU5hC,GACzC,MAAM6hC,EAAgB7hC,EAAMuF,IAAIu8B,mBAC1BC,EAAWF,EAAcz3B,cAI/B,QAFE23B,aAAoBC,WAAaD,EAASE,KAAOJ,GAE1BK,aAAa,aAtBnB,SAAUliC,GAC7B,MAAM6hC,EAAgB7hC,EAAMuF,IAAIu8B,mBAC1BC,EAAWF,EAAcz3B,cACzB+3B,EAAgBniC,EAAMuF,IAAI2E,mBAAmBi4B,cAEnD,OAAOJ,aAAoBC,WACvBD,EAASE,KAAK/C,SAASiD,GACvBN,EAAc3C,SAASiD,EAC7B,CAcsD,CAAMniC,EAC5D,EASaoiC,GAASlkC,EAsBTmkC,GAAoB,SAAUrB,GACzC,MAAMv7B,EACJu7B,EACF,cACA,OAA+B,GAAxBv7B,EAAcqE,UAAiB3C,GAAU,GAAO1B,EAAck8B,QACvE,EAqDaW,GAAiB,SAAUtB,GACtC,MAAMv7B,EACJu7B,EACF,cACA,OACGv7B,EAAcg8B,UACbh8B,EAAci8B,SAAWj8B,EAAck8B,WACxCl8B,EAAc47B,QAEnB,EA6CakB,GAAe,SAAUvB,GACpC,MAAMv7B,EACJu7B,EACF,cACA,OACGv7B,EAAcg8B,UACbh8B,EAAci8B,SAAWj8B,EAAck8B,UACzCl8B,EAAc47B,QAElB,EAWamB,GAAoB,SAAUxB,GACzC,MAAMv7B,EACJu7B,EACF,cACMyB,EAAkCh9B,EAAoB,OAAEg9B,QAC9D,MACc,UAAZA,GACY,WAAZA,GACY,aAAZA,IAICh9B,EAAcjI,OAAOklC,iBAE1B,EASaC,GAAY,SAAU3B,GACjC,MAAM33B,EAAmE,EAEvE5D,cAMF,OALA,QACmB1J,IAAjBsN,EACA,uDAGiC,SAA5BA,EAAau5B,WACtB,EAiDaC,GAAgB,SAAU7B,GACrC,MAAM33B,EAAmE,EAEvE5D,cAKF,OAJA,QACmB1J,IAAjBsN,EACA,uDAEKA,EAAay5B,WAAqC,IAAxBz5B,EAAaS,MAChD,ECtKO,SAAS,GAASuwB,GACvB,MAAM18B,EAAS08B,EAAc18B,OAC7B,IAAI8M,EAAU,EACVC,EAAU,EACd,IAAK,IAAI9M,EAAI,EAAGA,EAAID,EAAQC,IAC1B6M,GAAW4vB,EAAcz8B,GAAG6M,QAC5BC,GAAW2vB,EAAcz8B,GAAG8M,QAE9B,MAAO,CAACD,QAASA,EAAU9M,EAAQ+M,QAASA,EAAU/M,EACxD,CAEA,SAlKA,cAAiC,GAI/B,WAAAb,CAAYoH,GAGV9E,MAFA8E,EAAUA,GAAoB,CAAC,GAM3BA,EAAQ6+B,kBACVhmC,KAAKgmC,gBAAkB7+B,EAAQ6+B,iBAG7B7+B,EAAQ8+B,kBACVjmC,KAAKimC,gBAAkB9+B,EAAQ8+B,iBAG7B9+B,EAAQ++B,kBACVlmC,KAAKkmC,gBAAkB/+B,EAAQ++B,iBAG7B/+B,EAAQg/B,gBACVnmC,KAAKmmC,cAAgBh/B,EAAQg/B,eAG3Bh/B,EAAQi/B,WACVpmC,KAAKomC,SAAWj/B,EAAQi/B,UAO1BpmC,KAAKqmC,wBAAyB,EAM9BrmC,KAAKsmC,eAAiB,EACxB,CAQA,eAAAC,GACE,OAAOvmC,KAAKsmC,eAAe1lC,MAC7B,CAQA,eAAAolC,CAAgB/B,GACd,OAAO,CACT,CAOA,eAAAgC,CAAgBhC,GAAkB,CAWlC,WAAAxgC,CAAYwgC,GACV,IAAKA,EAAgBv7B,cACnB,OAAO,EAGT,IAAI07B,GAAY,EAEhB,GADApkC,KAAKwmC,uBAAuBvC,GACxBjkC,KAAKqmC,wBACP,GAAIpC,EAAgBjiC,MAAQ,EAAoBsH,YAC9CtJ,KAAKimC,gBAAgBhC,GAErBA,EAAgBv7B,cAAcvG,sBACzB,GAAI8hC,EAAgBjiC,MAAQ,EAAoByH,UAAW,CAChE,MAAMg9B,EAAYzmC,KAAKmmC,cAAclC,GACrCjkC,KAAKqmC,uBACHI,GAAazmC,KAAKsmC,eAAe1lC,OAAS,CAC9C,OAEA,GAAIqjC,EAAgBjiC,MAAQ,EAAoBwH,YAAa,CAC3D,MAAMk9B,EAAU1mC,KAAKgmC,gBAAgB/B,GACrCjkC,KAAKqmC,uBAAyBK,EAC9BtC,EAAYpkC,KAAKomC,SAASM,EAC5B,MAAWzC,EAAgBjiC,MAAQ,EAAoBuH,aACrDvJ,KAAKkmC,gBAAgBjC,GAGzB,OAAQG,CACV,CAOA,eAAA8B,CAAgBjC,GAAkB,CAQlC,aAAAkC,CAAclC,GACZ,OAAO,CACT,CAQA,QAAAmC,CAASM,GACP,OAAOA,CACT,CAMA,sBAAAF,CAAuBvC,GACjBA,EAAgBr7B,iBAClB5I,KAAKsmC,eAAiBrC,EAAgBr7B,eAE1C,GCIF,GA9JA,cAAsB+9B,GAIpB,WAAA5mC,CAAYoH,GACV9E,MAAM,CACJ+jC,SAAU,IAGZj/B,EAAUA,GAAoB,CAAC,EAM/BnH,KAAK4mC,SAAWz/B,EAAQ0/B,QAKxB7mC,KAAK8mC,aAAe,KAMpB9mC,KAAK+mC,mBAML/mC,KAAKgnC,UAAW,EAEhB,MAAMC,EAAY9/B,EAAQ8/B,UACtB9/B,EAAQ8/B,UACR,GAAI1B,GAAgBO,IAMxB9lC,KAAKknC,WAAa//B,EAAQggC,YACtB,GAAItC,GAAmBoC,GACvBA,EAMJjnC,KAAKonC,YAAa,CACpB,CAOA,eAAAnB,CAAgBhC,GACd,MAAMz7B,EAAMy7B,EAAgBz7B,IACvBxI,KAAKgnC,WACRhnC,KAAKgnC,UAAW,EAChBx+B,EAAI05B,UAAU9G,oBAEhB,MAAMkL,EAAiBtmC,KAAKsmC,eACtBe,EAAW7+B,EAAIQ,cAAc,GAAqBs9B,IACxD,GAAIA,EAAe1lC,QAAUZ,KAAK+mC,oBAIhC,GAHI/mC,KAAK4mC,UACP5mC,KAAK4mC,SAASlD,OAAO2D,EAAS,GAAIA,EAAS,IAEzCrnC,KAAK8mC,aAAc,CACrB,MAAMtR,EAAQ,CACZx1B,KAAK8mC,aAAa,GAAKO,EAAS,GAChCA,EAAS,GAAKrnC,KAAK8mC,aAAa,IAG5B7E,EADMgC,EAAgBz7B,IACX05B,U/C0LHj5B,E+CzLEusB,E/CyLU5P,E+CzLHqc,EAAK/N,gB/C0LlCjrB,EAAW,IAAM2c,EACjB3c,EAAW,IAAM2c,E+C1LX/O,GAAiB2e,EAAOyM,EAAKzN,eAC7ByN,EAAK1H,qBAAqB/E,EAC5B,OACSx1B,KAAK4mC,UAGd5mC,KAAK4mC,SAASnD,Q/CkLb,IAAex6B,EAAY2c,E+ChL9B5lB,KAAK8mC,aAAeO,EACpBrnC,KAAK+mC,mBAAqBT,EAAe1lC,OACzCqjC,EAAgBv7B,cAAcvG,gBAChC,CAQA,aAAAgkC,CAAclC,GACZ,MAAMz7B,EAAMy7B,EAAgBz7B,IACtBy5B,EAAOz5B,EAAI05B,UACjB,GAAmC,IAA/BliC,KAAKsmC,eAAe1lC,OAAc,CACpC,IAAKZ,KAAKonC,YAAcpnC,KAAK4mC,UAAY5mC,KAAK4mC,SAAS1xB,MAAO,CAC5D,MAAMoyB,EAAWtnC,KAAK4mC,SAASrnB,cACzBzI,EAAQ9W,KAAK4mC,SAAS/C,WACtB5wB,EAASgvB,EAAKjO,oBACduT,EAAW/+B,EAAIg/B,+BAA+Bv0B,GAC9C4B,EAAOrM,EAAIi/B,+BAA+B,CAC9CF,EAAS,GAAKD,EAAW95B,KAAKqI,IAAIiB,GAClCywB,EAAS,GAAKD,EAAW95B,KAAKuI,IAAIe,KAEpCmrB,EAAKlN,gBAAgB,CACnB9hB,OAAQgvB,EAAKlI,qBAAqBllB,GAClCwgB,SAAU,IACVC,OAAQre,IAEZ,CAKA,OAJIjX,KAAKgnC,WACPhnC,KAAKgnC,UAAW,EAChB/E,EAAK5G,mBAEA,CACT,CAOA,OANIr7B,KAAK4mC,UAGP5mC,KAAK4mC,SAASnD,QAEhBzjC,KAAK8mC,aAAe,MACb,CACT,CAQA,eAAAd,CAAgB/B,GACd,GAAIjkC,KAAKsmC,eAAe1lC,OAAS,GAAKZ,KAAKknC,WAAWjD,GAAkB,CACtE,MACMhC,EADMgC,EAAgBz7B,IACX05B,UAYjB,OAXAliC,KAAK8mC,aAAe,KAEhB7E,EAAKrN,gBACPqN,EAAKrM,mBAEH51B,KAAK4mC,UACP5mC,KAAK4mC,SAASnD,QAIhBzjC,KAAKonC,WAAapnC,KAAKsmC,eAAe1lC,OAAS,GACxC,CACT,CACA,OAAO,CACT,GC/DF,GAhGA,cAAyB+lC,GAIvB,WAAA5mC,CAAYoH,GACVA,EAAUA,GAAoB,CAAC,EAE/B9E,MAAM,CACJ+jC,SAAU,IAOZpmC,KAAKknC,WAAa//B,EAAQ8/B,UAAY9/B,EAAQ8/B,UAAYxC,GAM1DzkC,KAAK0nC,gBAAa1oC,EAMlBgB,KAAK4hC,eAAiC5iC,IAArBmI,EAAQkuB,SAAyBluB,EAAQkuB,SAAW,GACvE,CAOA,eAAA4Q,CAAgBhC,GACd,IAAK2B,GAAU3B,GACb,OAGF,MAAMz7B,EAAMy7B,EAAgBz7B,IACtBy5B,EAAOz5B,EAAI05B,UACjB,GAAID,EAAK/K,iBAAiB3hB,WAAawZ,GACrC,OAEF,MAAM5b,EAAO3K,EAAIm/B,UACX1yB,EAASgvB,EAAgBl7B,MACzBuqB,EAAQ9lB,KAAKsS,MAAM3M,EAAK,GAAK,EAAI8B,EAAO,GAAIA,EAAO,GAAK9B,EAAK,GAAK,GACxE,QAAwBnU,IAApBgB,KAAK0nC,WAA0B,CACjC,MAAMlS,EAAQlC,EAAQtzB,KAAK0nC,WAC3BzF,EAAKpH,wBAAwBrF,EAC/B,CACAx1B,KAAK0nC,WAAapU,CACpB,CAQA,aAAA6S,CAAclC,GACZ,OAAK2B,GAAU3B,KAIHA,EAAgBz7B,IACX05B,UACZ7G,eAAer7B,KAAK4hC,YAClB,EACT,CAQA,eAAAoE,CAAgB/B,GACd,QAAK2B,GAAU3B,QAKbqB,GAAkBrB,KAClBjkC,KAAKknC,WAAWjD,MAEJA,EAAgBz7B,IACxB05B,UAAU9G,mBACdp7B,KAAK0nC,gBAAa1oC,GACX,GAGX,GCaF,GAjIA,cAAwB,EAItB,WAAAe,CAAY4+B,GACVt8B,QAMArC,KAAK4nC,UAAY,KAMjB5nC,KAAK6L,SAAW0wB,SAASC,cAAc,OACvCx8B,KAAK6L,SAASwxB,MAAM1N,SAAW,WAC/B3vB,KAAK6L,SAASwxB,MAAMC,cAAgB,OACpCt9B,KAAK6L,SAAS8yB,UAAY,UAAYA,EAMtC3+B,KAAKmL,KAAO,KAMZnL,KAAK6nC,YAAc,KAMnB7nC,KAAK8nC,UAAY,IACnB,CAMA,eAAA3nC,GACEH,KAAK49B,OAAO,KACd,CAKA,OAAAmK,GACE,MAAMC,EAAahoC,KAAK6nC,YAClBI,EAAWjoC,KAAK8nC,UAChBI,EAAK,KACL7K,EAAQr9B,KAAK6L,SAASwxB,MAC5BA,EAAM8K,KAAO36B,KAAK6D,IAAI22B,EAAW,GAAIC,EAAS,IAAMC,EACpD7K,EAAM+K,IAAM56B,KAAK6D,IAAI22B,EAAW,GAAIC,EAAS,IAAMC,EACnD7K,EAAMpB,MAAQzuB,KAAKC,IAAIw6B,EAAS,GAAKD,EAAW,IAAME,EACtD7K,EAAMnB,OAAS1uB,KAAKC,IAAIw6B,EAAS,GAAKD,EAAW,IAAME,CACzD,CAKA,MAAAtK,CAAOp1B,GACL,GAAIxI,KAAKmL,KAAM,CACbnL,KAAKmL,KAAKk9B,sBAAsBC,YAAYtoC,KAAK6L,UACjD,MAAMwxB,EAAQr9B,KAAK6L,SAASwxB,MAC5BA,EAAM8K,KAAO,UACb9K,EAAM+K,IAAM,UACZ/K,EAAMpB,MAAQ,UACdoB,EAAMnB,OAAS,SACjB,CACAl8B,KAAKmL,KAAO3C,EACRxI,KAAKmL,MACPnL,KAAKmL,KAAKk9B,sBAAsBvK,YAAY99B,KAAK6L,SAErD,CAMA,SAAA08B,CAAUP,EAAYC,GACpBjoC,KAAK6nC,YAAcG,EACnBhoC,KAAK8nC,UAAYG,EACjBjoC,KAAKwoC,yBACLxoC,KAAK+nC,SACP,CAKA,sBAAAS,GACE,IAAKxoC,KAAKmL,KACR,OAGF,MAAM68B,EAAahoC,KAAK6nC,YAClBI,EAAWjoC,KAAK8nC,UAOhB5zB,EANS,CACb8zB,EACA,CAACA,EAAW,GAAIC,EAAS,IACzBA,EACA,CAACA,EAAS,GAAID,EAAW,KAEAx/B,IACzBxI,KAAKmL,KAAKs8B,+BACVznC,KAAKmL,MAGP+I,EAAY,GAAKA,EAAY,GAAGmL,QAC3Brf,KAAK4nC,UAGR5nC,KAAK4nC,UAAUngB,eAAe,CAACvT,IAF/BlU,KAAK4nC,UAAY,IAAI,GAAQ,CAAC1zB,GAIlC,CAKA,WAAAu0B,GACE,OAAOzoC,KAAK4nC,SACd,GCnGIc,GA2BO,YAQN,MAAMC,WAAqBvlC,EAMhC,WAAArD,CAAYiC,EAAMiH,EAAYg7B,GAC5B5hC,MAAML,GAQNhC,KAAKiJ,WAAaA,EAOlBjJ,KAAKikC,gBAAkBA,CACzB,EA2OF,SAlNA,cAAsB0C,GAIpB,WAAA5mC,CAAYoH,GACV9E,QAKArC,KAAKyE,GAKLzE,KAAKoE,KAKLpE,KAAK0E,GAELyC,EAAUA,GAAW,CAAC,EAMtBnH,KAAK4oC,KAAO,IAAI,GAAUzhC,EAAQw3B,WAAa,cAM/C3+B,KAAK6oC,SAAW1hC,EAAQ2hC,SAAW,GAE/B3hC,EAAQ4hC,WACV/oC,KAAK+oC,SAAW5hC,EAAQ4hC,UAO1B/oC,KAAK6nC,YAAc,KAMnB7nC,KAAKknC,WAAa//B,EAAQ8/B,WAAa3B,GAMvCtlC,KAAKgpC,iBACH7hC,EAAQ8hC,iBAAmBjpC,KAAKkpC,sBACpC,CAWA,sBAAAA,CAAuBjF,EAAiB+D,EAAYC,GAClD,MAAMhM,EAAQgM,EAAS,GAAKD,EAAW,GACjC9L,EAAS+L,EAAS,GAAKD,EAAW,GACxC,OAAO/L,EAAQA,EAAQC,EAASA,GAAUl8B,KAAK6oC,QACjD,CAOA,WAAAJ,GACE,OAAOzoC,KAAK4oC,KAAKH,aACnB,CAOA,eAAAxC,CAAgBhC,GACTjkC,KAAK6nC,cAIV7nC,KAAK4oC,KAAKL,UAAUvoC,KAAK6nC,YAAa5D,EAAgBl7B,OAEtD/I,KAAKgD,cACH,IAAI2lC,GAvKC,UAyKH1E,EAAgBh7B,WAChBg7B,IAGN,CAQA,aAAAkC,CAAclC,GACZ,IAAKjkC,KAAK6nC,YACR,OAAO,EAGT,MAAMsB,EAAcnpC,KAAKgpC,iBACvB/E,EACAjkC,KAAK6nC,YACL5D,EAAgBl7B,OAgBlB,OAdIogC,GACFnpC,KAAK+oC,SAAS9E,GAEhBjkC,KAAKgD,cACH,IAAI2lC,GACFQ,EA7LE,SA6LsCT,GACxCzE,EAAgBh7B,WAChBg7B,IAIJjkC,KAAK4oC,KAAKhL,OAAO,MACjB59B,KAAK6nC,YAAc,MAEZ,CACT,CAQA,eAAA7B,CAAgB/B,GACd,QAAIjkC,KAAKknC,WAAWjD,KAClBjkC,KAAK6nC,YAAc5D,EAAgBl7B,MACnC/I,KAAK4oC,KAAKhL,OAAOqG,EAAgBz7B,KACjCxI,KAAK4oC,KAAKL,UAAUvoC,KAAK6nC,YAAa7nC,KAAK6nC,aAC3C7nC,KAAKgD,cACH,IAAI2lC,GAnOA,WAqOF1E,EAAgBh7B,WAChBg7B,KAGG,EAGX,CAMA,QAAA8E,CAAS9lC,GAAQ,CASjB,SAAA8gC,CAAUG,GACHA,IACHlkC,KAAK4oC,KAAKhL,OAAO,MACb59B,KAAK6nC,cACP7nC,KAAKgD,cACH,IAAI2lC,GAAaD,GAA4B1oC,KAAK6nC,YAAa,OAEjE7nC,KAAK6nC,YAAc,OAIvBxlC,MAAM0hC,UAAUG,EAClB,CAMA,MAAAtG,CAAOp1B,GACUxI,KAAK29B,WAGlB39B,KAAK4oC,KAAKhL,OAAO,MAEb59B,KAAK6nC,cACP7nC,KAAKgD,cACH,IAAI2lC,GAAaD,GAA4B1oC,KAAK6nC,YAAa,OAEjE7nC,KAAK6nC,YAAc,OAIvBxlC,MAAMu7B,OAAOp1B,EACf,GChPF,GArDA,cAAuB,GAIrB,WAAAzI,CAAYoH,GAKV9E,MAAM,CACJ4kC,WALF9/B,EAAUA,GAAoB,CAAC,GAEL8/B,UAAY9/B,EAAQ8/B,UAAYzB,GAIxD7G,UAAWx3B,EAAQw3B,WAAa,cAChCmK,QAAS3hC,EAAQ2hC,UAOnB9oC,KAAK4hC,eAAiC5iC,IAArBmI,EAAQkuB,SAAyBluB,EAAQkuB,SAAW,IAMrEr1B,KAAKopC,UAAuBpqC,IAAhBmI,EAAQkiC,KAAoBliC,EAAQkiC,GAClD,CAOA,QAAAN,CAAS9lC,GACP,MACMg/B,EADMjiC,KAAK29B,SAC8CuE,UAC/D,IAAI/I,EAAWn5B,KAAKyoC,cAEpB,GAAIzoC,KAAKopC,KAAM,CACb,MAAMzP,EAAgBsI,EAAK5I,yBAAyBF,GAC9CjmB,EAAa+uB,EAAK7J,+BAA+BuB,GACjDpnB,EAAS0vB,EAAK/N,gBAAkBhhB,EACtCimB,EAAWA,EAASrU,QACpBqU,EAASvT,MAAMrT,EAASA,EAC1B,CAEA0vB,EAAK7I,YAAYD,EAAU,CACzB9D,SAAUr1B,KAAK4hC,UACftM,OAAQre,IAEZ,GCzEF,GACQ,YADR,GAGS,aAHT,GAIQ,YCgHR,GA1FA,cAA0B,GAIxB,WAAAlX,CAAYoH,GACV9E,QAEA8E,EAAUA,GAAW,CAAC,EAOtBnH,KAAKspC,kBAAoB,SAAUrF,GACjC,OACEsB,GAAetB,IAAoBwB,GAAkBxB,EAEzD,EAMAjkC,KAAKknC,gBACmBloC,IAAtBmI,EAAQ8/B,UACJ9/B,EAAQ8/B,UACRjnC,KAAKspC,kBAMXtpC,KAAK4hC,eAAiC5iC,IAArBmI,EAAQkuB,SAAyBluB,EAAQkuB,SAAW,IAMrEr1B,KAAKupC,iBACoBvqC,IAAvBmI,EAAQqiC,WAA2BriC,EAAQqiC,WAAa,GAC5D,CAUA,WAAA/lC,CAAYwgC,GACV,IAAIG,GAAY,EAChB,GAAIH,EAAgBjiC,MAAQ,EAAmB,CAC7C,MAAMynC,EACJxF,EACF,cACM7kC,EAAMqqC,EAASrqC,IACrB,GACEY,KAAKknC,WAAWjD,KACf7kC,GAAOsqC,IACNtqC,GAAOsqC,IACPtqC,GAAOsqC,IDtFX,WCuFItqC,GACF,CACA,MACM6iC,EADMgC,EAAgBz7B,IACX05B,UACXyH,EAAgB1H,EAAK/N,gBAAkBl0B,KAAKupC,YAClD,IAAIrjB,EAAS,EACXC,EAAS,EACP/mB,GAAOsqC,GACTvjB,GAAUwjB,EACDvqC,GAAOsqC,GAChBxjB,GAAUyjB,EACDvqC,GAAOsqC,GAChBxjB,EAASyjB,EAETxjB,EAASwjB,EAEX,MAAMnU,EAAQ,CAACtP,EAAQC,GACvBtP,GAAiB2e,EAAOyM,EAAKzN,eVgB9B,SAAayN,EAAMzM,EAAOH,GAC/B,MAAMuB,EAAgBqL,EAAKjO,oBAC3B,GAAI4C,EAAe,CACjB,MAAM3jB,EAAS,CAAC2jB,EAAc,GAAKpB,EAAM,GAAIoB,EAAc,GAAKpB,EAAM,IACtEyM,EAAKlN,gBAAgB,CACnBM,cAAuBr2B,IAAbq2B,EAAyBA,EAAW,IAC9CC,OAAQle,GACRnE,OAAQgvB,EAAKlI,qBAAqB9mB,IAEtC,CACF,CUzBQ22B,CAAI3H,EAAMzM,EAAOx1B,KAAK4hC,WACtB6H,EAAStnC,iBACTiiC,GAAY,CACd,CACF,CACA,OAAQA,CACV,GCvBF,GAlEA,cAA2B,GAIzB,WAAArkC,CAAYoH,GACV9E,QAEA8E,EAAUA,GAAoB,CAAC,EAM/BnH,KAAKknC,WAAa//B,EAAQ8/B,UACtB9/B,EAAQ8/B,UACR,SAAUhD,GACR,OT2LyB,SAAUA,GAC3C,MAAMv7B,EACJu7B,EACF,cACA,OAAO,EAAMv7B,EAAci8B,QAAUj8B,EAAck8B,OACrD,CS/LaiF,CAAoB5F,IACrBwB,GAAkBxB,EAEtB,EAMJjkC,KAAKmkC,OAASh9B,EAAQquB,MAAQruB,EAAQquB,MAAQ,EAM9Cx1B,KAAK4hC,eAAiC5iC,IAArBmI,EAAQkuB,SAAyBluB,EAAQkuB,SAAW,GACvE,CAUA,WAAA5xB,CAAYwgC,GACV,IAAIG,GAAY,EAChB,GACEH,EAAgBjiC,MAAQ,GACxBiiC,EAAgBjiC,MAAQ,EACxB,CACA,MAAMynC,EACJxF,EACF,cACM7kC,EAAMqqC,EAASrqC,IACrB,GAAIY,KAAKknC,WAAWjD,KAA6B,MAAR7kC,GAAuB,MAARA,GAAc,CACpE,MAAMoJ,EAAMy7B,EAAgBz7B,IACtBgtB,EAAgB,MAARp2B,EAAcY,KAAKmkC,QAAUnkC,KAAKmkC,OAEhDL,GADat7B,EAAI05B,UACC1M,OAAOx2B,EAAWgB,KAAK4hC,WACzC6H,EAAStnC,iBACTiiC,GAAY,CACd,CACF,CACA,OAAQA,CACV,GCmNF,GA7QA,cAA6B,GAI3B,WAAArkC,CAAYoH,GAGV9E,MAFA8E,EAAUA,GAAoB,CAAC,GAU/BnH,KAAK8pC,YAAc,EAMnB9pC,KAAK+pC,WAAa,EAMlB/pC,KAAKkpB,eAAiClqB,IAArBmI,EAAQqhB,SAAyBrhB,EAAQqhB,SAAW,EAMrExoB,KAAK4hC,eAAiC5iC,IAArBmI,EAAQkuB,SAAyBluB,EAAQkuB,SAAW,IAMrEr1B,KAAKgqC,cAA+BhrC,IAApBmI,EAAQ8iC,QAAwB9iC,EAAQ8iC,QAAU,GAMlEjqC,KAAKkqC,gBACmBlrC,IAAtBmI,EAAQgjC,WAA0BhjC,EAAQgjC,UAM5CnqC,KAAKoqC,0BAC6BprC,IAAhCmI,EAAQqqB,qBACJrqB,EAAQqqB,oBAGd,MAAMyV,EAAY9/B,EAAQ8/B,UAAY9/B,EAAQ8/B,UAAY5B,GAM1DrlC,KAAKknC,WAAa//B,EAAQggC,YACtB,GAAItC,GAAmBoC,GACvBA,EAMJjnC,KAAKqqC,YAAc,KAMnBrqC,KAAKsqC,gBAAatrC,EAMlBgB,KAAKuqC,WAMLvqC,KAAKwqC,WAAQxrC,EAQbgB,KAAKyqC,kBAAoB,IAMzBzqC,KAAK0qC,mBAOL1qC,KAAK2qC,cAAgB,GACvB,CAKA,eAAAC,GACE5qC,KAAK0qC,wBAAqB1rC,EAC1B,MAAMwJ,EAAMxI,KAAK29B,SACZn1B,GAGQA,EAAI05B,UACZ7G,oBACHr8B,EACAgB,KAAK+pC,WAAc/pC,KAAK+pC,WAAa,EAAI,GAAK,EAAK,EACnD/pC,KAAKqqC,YAAc7hC,EAAIU,uBAAuBlJ,KAAKqqC,aAAe,KAEtE,CASA,WAAA5mC,CAAYwgC,GACV,IAAKjkC,KAAKknC,WAAWjD,GACnB,OAAO,EAGT,GADaA,EAAgBjiC,OAChB,EACX,OAAO,EAGT,MAAMwG,EAAMy7B,EAAgBz7B,IACtBqiC,EACJ5G,EACF,cASA,IAAIzO,EAWJ,GAnBAqV,EAAW1oC,iBAEPnC,KAAKkqC,aACPlqC,KAAKqqC,YAAcpG,EAAgBl7B,OAMjCk7B,EAAgBjiC,MAAQ,IAC1BwzB,EAAQqV,EAAW1kB,OACfhc,GAAW0gC,EAAWC,YAAcC,WAAWC,kBACjDxV,GAASlrB,GAEPugC,EAAWC,YAAcC,WAAWE,iBACtCzV,GAAS,KAIC,IAAVA,EACF,OAAO,EAETx1B,KAAK+pC,WAAavU,EAElB,MAAMN,EAAMD,KAAKC,WAEOl2B,IAApBgB,KAAKsqC,aACPtqC,KAAKsqC,WAAapV,KAGfl1B,KAAKwqC,OAAStV,EAAMl1B,KAAKsqC,WAAatqC,KAAKyqC,qBAC9CzqC,KAAKwqC,MAAQh9B,KAAKC,IAAI+nB,GAAS,EAAI,WAAa,SAGlD,MAAMyM,EAAOz5B,EAAI05B,UACjB,GACiB,aAAfliC,KAAKwqC,QACHvI,EAAK9K,2BAA4Bn3B,KAAKoqC,qBAmBxC,OAjBIpqC,KAAK0qC,mBACPl+B,aAAaxM,KAAK0qC,qBAEdzI,EAAKrN,gBACPqN,EAAKrM,mBAEPqM,EAAK7G,oBAEPp7B,KAAK0qC,mBAAqBj+B,WACxBzM,KAAK4qC,gBAAgBtmC,KAAKtE,MAC1BA,KAAKgqC,UAEP/H,EAAKtH,YACFnF,EAAQx1B,KAAK2qC,cACd3qC,KAAKqqC,YAAc7hC,EAAIU,uBAAuBlJ,KAAKqqC,aAAe,MAEpErqC,KAAKsqC,WAAapV,GACX,EAGTl1B,KAAK8pC,aAAetU,EAEpB,MAAM0V,EAAW19B,KAAK8D,IAAItR,KAAKgqC,UAAY9U,EAAMl1B,KAAKsqC,YAAa,GAQnE,OANA99B,aAAaxM,KAAKuqC,YAClBvqC,KAAKuqC,WAAa99B,WAChBzM,KAAKmrC,iBAAiB7mC,KAAKtE,KAAMwI,GACjC0iC,IAGK,CACT,CAMA,gBAAAC,CAAiB3iC,GACf,MAAMy5B,EAAOz5B,EAAI05B,UACbD,EAAKrN,gBACPqN,EAAKrM,mBAEP,IAAIJ,GACD,GACCx1B,KAAK8pC,aACJ9pC,KAAKkpB,UAAYlpB,KAAK2qC,cACvB3qC,KAAKkpB,UAAYlpB,KAAK2qC,eACpB3qC,KAAK2qC,eACP1I,EAAK9K,0BAA4Bn3B,KAAKoqC,wBAExC5U,EAAQA,EAASA,EAAQ,EAAI,GAAK,EAAK,GAEzCsO,GACE7B,EACAzM,EACAx1B,KAAKqqC,YAAc7hC,EAAIU,uBAAuBlJ,KAAKqqC,aAAe,KAClErqC,KAAK4hC,WAGP5hC,KAAKwqC,WAAQxrC,EACbgB,KAAK8pC,YAAc,EACnB9pC,KAAKqqC,YAAc,KACnBrqC,KAAKsqC,gBAAatrC,EAClBgB,KAAKuqC,gBAAavrC,CACpB,CAQA,cAAAosC,CAAejB,GACbnqC,KAAKkqC,WAAaC,EACbA,IACHnqC,KAAKqqC,YAAc,KAEvB,GC9IF,GA3IA,cAA0B1D,GAIxB,WAAA5mC,CAAYoH,GAGV,MAAMkkC,EAFNlkC,EAAUA,GAAoB,CAAC,EAM1BkkC,EAAejF,WAClBiF,EAAejF,SAAW,GAG5B/jC,MAAMgpC,GAMNrrC,KAAKsrC,QAAU,KAMftrC,KAAK0nC,gBAAa1oC,EAMlBgB,KAAKurC,WAAY,EAMjBvrC,KAAKwrC,eAAiB,EAMtBxrC,KAAKyrC,gBAAmCzsC,IAAtBmI,EAAQukC,UAA0BvkC,EAAQukC,UAAY,GAMxE1rC,KAAK4hC,eAAiC5iC,IAArBmI,EAAQkuB,SAAyBluB,EAAQkuB,SAAW,GACvE,CAOA,eAAA4Q,CAAgBhC,GACd,IAAI0H,EAAgB,EAEpB,MAAMC,EAAS5rC,KAAKsmC,eAAe,GAC7BuF,EAAS7rC,KAAKsmC,eAAe,GAG7BxvB,EAAQtJ,KAAKsS,MACjB+rB,EAAOl+B,QAAUi+B,EAAOj+B,QACxBk+B,EAAOn+B,QAAUk+B,EAAOl+B,SAG1B,QAAwB1O,IAApBgB,KAAK0nC,WAA0B,CACjC,MAAMlS,EAAQ1e,EAAQ9W,KAAK0nC,WAC3B1nC,KAAKwrC,gBAAkBhW,GAClBx1B,KAAKurC,WAAa/9B,KAAKC,IAAIzN,KAAKwrC,gBAAkBxrC,KAAKyrC,aAC1DzrC,KAAKurC,WAAY,GAEnBI,EAAgBnW,CAClB,CACAx1B,KAAK0nC,WAAa5wB,EAElB,MAAMtO,EAAMy7B,EAAgBz7B,IACtBy5B,EAAOz5B,EAAI05B,UACbD,EAAK/K,iBAAiB3hB,WAAawZ,KAOvC/uB,KAAKsrC,QAAU9iC,EAAIi/B,+BACjBj/B,EAAIQ,cAAc,GAAqBhJ,KAAKsmC,kBAI1CtmC,KAAKurC,YACP/iC,EAAIi1B,SACJwE,EAAKpH,uBAAuB8Q,EAAe3rC,KAAKsrC,UAEpD,CAQA,aAAAnF,CAAclC,GACZ,QAAIjkC,KAAKsmC,eAAe1lC,OAAS,KACnBqjC,EAAgBz7B,IACX05B,UACZ7G,eAAer7B,KAAK4hC,YAClB,EAGX,CAQA,eAAAoE,CAAgB/B,GACd,GAAIjkC,KAAKsmC,eAAe1lC,QAAU,EAAG,CACnC,MAAM4H,EAAMy7B,EAAgBz7B,IAQ5B,OAPAxI,KAAKsrC,QAAU,KACftrC,KAAK0nC,gBAAa1oC,EAClBgB,KAAKurC,WAAY,EACjBvrC,KAAKwrC,eAAiB,EACjBxrC,KAAKqmC,wBACR79B,EAAI05B,UAAU9G,oBAET,CACT,CACA,OAAO,CACT,GCrBF,GAtHA,cAAwBuL,GAItB,WAAA5mC,CAAYoH,GAGV,MAAMkkC,EAFNlkC,EAAUA,GAAoB,CAAC,EAM1BkkC,EAAejF,WAClBiF,EAAejF,SAAW,GAG5B/jC,MAAMgpC,GAMNrrC,KAAKsrC,QAAU,KAMftrC,KAAK4hC,eAAiC5iC,IAArBmI,EAAQkuB,SAAyBluB,EAAQkuB,SAAW,IAMrEr1B,KAAK8rC,mBAAgB9sC,EAMrBgB,KAAK+rC,gBAAkB,CACzB,CAOA,eAAA9F,CAAgBhC,GACd,IAAI+H,EAAa,EAEjB,MAAMJ,EAAS5rC,KAAKsmC,eAAe,GAC7BuF,EAAS7rC,KAAKsmC,eAAe,GAC7Bx0B,EAAK85B,EAAOl+B,QAAUm+B,EAAOn+B,QAC7BqE,EAAK65B,EAAOj+B,QAAUk+B,EAAOl+B,QAG7B25B,EAAW95B,KAAK4N,KAAKtJ,EAAKA,EAAKC,EAAKA,QAEf/S,IAAvBgB,KAAK8rC,gBACPE,EAAahsC,KAAK8rC,cAAgBxE,GAEpCtnC,KAAK8rC,cAAgBxE,EAErB,MAAM9+B,EAAMy7B,EAAgBz7B,IACtBy5B,EAAOz5B,EAAI05B,UAEC,GAAd8J,IACFhsC,KAAK+rC,gBAAkBC,GAIzBhsC,KAAKsrC,QAAU9iC,EAAIi/B,+BACjBj/B,EAAIQ,cAAc,GAAqBhJ,KAAKsmC,kBAI9C99B,EAAIi1B,SACJwE,EAAKxH,yBAAyBuR,EAAYhsC,KAAKsrC,QACjD,CAQA,aAAAnF,CAAclC,GACZ,GAAIjkC,KAAKsmC,eAAe1lC,OAAS,EAAG,CAClC,MACMqhC,EADMgC,EAAgBz7B,IACX05B,UACXxhC,EAAYV,KAAK+rC,gBAAkB,EAAI,GAAK,EAElD,OADA9J,EAAK5G,eAAer7B,KAAK4hC,UAAWlhC,IAC7B,CACT,CACA,OAAO,CACT,CAQA,eAAAslC,CAAgB/B,GACd,GAAIjkC,KAAKsmC,eAAe1lC,QAAU,EAAG,CACnC,MAAM4H,EAAMy7B,EAAgBz7B,IAO5B,OANAxI,KAAKsrC,QAAU,KACftrC,KAAK8rC,mBAAgB9sC,EACrBgB,KAAK+rC,gBAAkB,EAClB/rC,KAAKqmC,wBACR79B,EAAI05B,UAAU9G,oBAET,CACT,CACA,OAAO,CACT,GC/HF,GACW,UADX,GAEW,UAFX,GAGU,SAHV,GAIW,SAJX,GAKkB,gBALlB,GAMkB,gBANlB,GAOY,UAPZ,GAQY,UARZ,GASU,SCqYV,GAvVA,cAAwB,EAItB,WAAAr7B,CAAYoH,GACV9E,QAKArC,KAAKyE,GAKLzE,KAAKoE,KAKLpE,KAAK0E,GAML1E,KAAKisC,YAAc9kC,EAAQ+kC,WAK3B,MAAMtb,EAAatxB,OAAO4G,OAAO,CAAC,EAAGiB,GACH,iBAAvBA,EAAQypB,oBACVA,EAAWA,WAClBtxB,OAAO4G,OAAO0qB,EAAYzpB,EAAQypB,aAGpCA,EAAW,SACW5xB,IAApBmI,EAAQglC,QAAwBhlC,EAAQglC,QAAU,EACpD,GAC+C,iBAAtCvb,EAAW,IAClB,kCAGFA,EAAW,SACW5xB,IAApBmI,EAAQ25B,SAAwB35B,EAAQ25B,QAC1ClQ,EAAW,IAAyBzpB,EAAQilC,OAC5Cxb,EAAW,SACiB5xB,IAA1BmI,EAAQunB,cAA8BvnB,EAAQunB,cAAgB3gB,IAChE6iB,EAAW,SACiB5xB,IAA1BmI,EAAQwnB,cAA8BxnB,EAAQwnB,cAAgB,EAChEiC,EAAW,SACW5xB,IAApBmI,EAAQ6pB,QAAwB7pB,EAAQ6pB,SAAU,IACpDJ,EAAW,SACW5xB,IAApBmI,EAAQ8pB,QAAwB9pB,EAAQ8pB,QAAUljB,IAMpD/N,KAAKqsC,gBACsBrtC,IAAzB4xB,EAAW+N,UAA0B/N,EAAW+N,UAAY,kBACvD/N,EAAW+N,UAElB3+B,KAAK+F,cAAc6qB,GAMnB5wB,KAAKssC,OAAS,IAChB,CAMA,aAAAC,GACE,OAAOvsC,KAAKisC,WACd,CAKA,YAAAO,GACE,OAAOxsC,KAAKqsC,UACd,CASA,aAAAI,CAAcC,GAEZ,MAAMh8B,EACJ1Q,KAAKssC,QACY,CACfpM,MAAOlgC,KACP0sC,aAAqB1tC,IAAZ0tC,GAA+BA,GAEtCN,EAASpsC,KAAK2sC,YAWpB,OAVAj8B,EAAMy7B,QAAU,GAAM3+B,KAAKiF,MAA0B,IAApBzS,KAAK4sC,cAAsB,IAAK,EAAG,GACpEl8B,EAAMowB,QAAU9gC,KAAK6sC,aACrBn8B,EAAMoC,OAAS9S,KAAK6Y,YACpBnI,EAAM07B,YAAoBptC,IAAXotC,GAAyB17B,EAAMg8B,QAAqBN,EAAXr+B,IACxD2C,EAAMge,cAAgB1uB,KAAKy3B,mBAC3B/mB,EAAMie,cAAgBnhB,KAAK8D,IAAItR,KAAK03B,mBAAoB,GACxDhnB,EAAMsgB,QAAUhxB,KAAK83B,aACrBpnB,EAAMugB,QAAUjxB,KAAK23B,aACrB33B,KAAKssC,OAAS57B,EAEPA,CACT,CAQA,cAAAo8B,CAAe5lC,GACb,OAAO,GACT,CAQA,mBAAA6lC,CAAoBC,GAClB,OAAO,GACT,CASA,SAAAn0B,GACE,OACE7Y,KAAKP,IAAI,GAEb,CASA,gBAAAg4B,GACE,OAA8Bz3B,KAAKP,IAAI,GACzC,CASA,gBAAAi4B,GACE,OAA8B13B,KAAKP,IAAI,GACzC,CASA,UAAAq4B,GACE,OAA8B93B,KAAKP,IAAI,GACzC,CASA,UAAAk4B,GACE,OAA8B33B,KAAKP,IAAI,GACzC,CAQA,UAAAmtC,GACE,OAA8B5sC,KAAKP,IAAI,GACzC,CAMA,cAAAwtC,GACE,OAAO,GACT,CASA,UAAAJ,GACE,OAA+B7sC,KAAKP,IAAI,GAC1C,CASA,SAAAktC,GACE,OAAwC3sC,KAAKP,IAAI,GACnD,CAMA,aAAAytC,CAAchB,GACZlsC,KAAKisC,YAAcC,EACnBlsC,KAAK4E,SACP,CASA,SAAA2U,CAAUzG,GACR9S,KAAK0G,IAAI,GAAsBoM,EACjC,CAQA,gBAAAq6B,CAAiBze,GACf1uB,KAAK0G,IAAI,GAA8BgoB,EACzC,CAQA,gBAAA0e,CAAiBze,GACf3uB,KAAK0G,IAAI,GAA8BioB,EACzC,CAUA,UAAAkJ,CAAW5G,GACTjxB,KAAK0G,IAAI,GAAwBuqB,EACnC,CAUA,UAAA8G,CAAW/G,GACThxB,KAAK0G,IAAI,GAAwBsqB,EACnC,CAQA,UAAAqc,CAAWlB,GACT,GAA0B,iBAAZA,EAAsB,kCACpCnsC,KAAK0G,IAAI,GAAuBylC,EAClC,CAQA,UAAAmB,CAAWxM,GACT9gC,KAAK0G,IAAI,GAAuBo6B,EAClC,CASA,SAAAyM,CAAUC,GACRxtC,KAAK0G,IAAI,GAAuB8mC,EAClC,CAMA,eAAArtC,GACMH,KAAKssC,SACPtsC,KAAKssC,OAAOpM,MAAQ,KACpBlgC,KAAKssC,OAAS,MAEhBjqC,MAAMlC,iBACR,GCzXK,MAAMstC,WAAmBrqC,EAK9B,WAAArD,CAAYiC,EAAMk+B,GAChB79B,MAAML,GAONhC,KAAKkgC,MAAQA,CACf,EAqCF,MAAM,GACI,SAWV,MAAMwN,WAAmBC,GAIvB,WAAA5tC,CAAYoH,GACVA,EAAUA,GAAW,CAAC,EACtB,MAAMymC,EAAsCtuC,OAAO4G,OAAO,CAAC,EAAGiB,UACvDymC,EAAY/N,OAEnB,IAAIA,EAAS14B,EAAQ04B,OAErBx9B,MAAMurC,GAKN5tC,KAAKyE,GAKLzE,KAAKoE,KAKLpE,KAAK0E,GAML1E,KAAK6tC,oBAAsB,GAM3B7tC,KAAK8tC,cAAgB,CAAC,EAEtB9tC,KAAKwG,kBAAkB,GAAiBxG,KAAK+tC,sBAEzClO,EACE96B,MAAMC,QAAQ66B,GAChBA,EAAS,IAAI,EAAWA,EAAOxgB,QAAS,CAAChY,QAAQ,IAEjD,GACkD,mBAAvB,EAAiB,SAC1C,sDAIJw4B,EAAS,IAAI,OAAW7gC,EAAW,CAACqI,QAAQ,IAG9CrH,KAAKguC,UAAUnO,EACjB,CAKA,kBAAAoO,GACEjuC,KAAK4E,SACP,CAKA,oBAAAmpC,GACE/tC,KAAK6tC,oBAAoBjmC,QAAQ,GACjC5H,KAAK6tC,oBAAoBjtC,OAAS,EAElC,MAAMi/B,EAAS7/B,KAAKkuC,YACpBluC,KAAK6tC,oBAAoB9qC,KACvBmB,EAAO27B,EAAQ33B,EAAyBlI,KAAKmuC,iBAAkBnuC,MAC/DkE,EACE27B,EACA33B,EACAlI,KAAKouC,oBACLpuC,OAIJ,IAAK,MAAM2M,KAAM3M,KAAK8tC,cACpB9tC,KAAK8tC,cAAcnhC,GAAI/E,QAAQ,GAEjC/F,EAAM7B,KAAK8tC,eAEX,MAAMO,EAAcxO,EAAO/3B,WAC3B,IAAK,IAAIjH,EAAI,EAAG2C,EAAK6qC,EAAYztC,OAAQC,EAAI2C,EAAI3C,IAAK,CACpD,MAAMq/B,EAAQmO,EAAYxtC,GAC1Bb,KAAKsuC,wBAAwBpO,GAC7BlgC,KAAKgD,cAAc,IAAIyqC,GAAW,WAAYvN,GAChD,CACAlgC,KAAK4E,SACP,CAKA,uBAAA0pC,CAAwBpO,GACtB,MAAM1C,EAAe,CACnBt5B,EACEg8B,EACA35B,EACAvG,KAAKiuC,mBACLjuC,MAEFkE,EAAOg8B,EAAO,EAAkBlgC,KAAKiuC,mBAAoBjuC,OAGvDkgC,aAAiBwN,IACnBlQ,EAAaz6B,KACXmB,EAAOg8B,EAAO,WAAYlgC,KAAKuuC,qBAAsBvuC,MACrDkE,EAAOg8B,EAAO,cAAelgC,KAAKwuC,wBAAyBxuC,OAI/DA,KAAK8tC,cAActoC,EAAO06B,IAAU1C,CACtC,CAKA,oBAAA+Q,CAAqBtrC,GACnBjD,KAAKgD,cAAc,IAAIyqC,GAAW,WAAYxqC,EAAMi9B,OACtD,CAKA,uBAAAsO,CAAwBvrC,GACtBjD,KAAKgD,cAAc,IAAIyqC,GAAW,cAAexqC,EAAMi9B,OACzD,CAMA,gBAAAiO,CAAiBM,GACf,MAAMvO,EAAQuO,EAAgBxnC,QAC9BjH,KAAKsuC,wBAAwBpO,GAC7BlgC,KAAKgD,cAAc,IAAIyqC,GAAW,WAAYvN,IAC9ClgC,KAAK4E,SACP,CAMA,mBAAAwpC,CAAoBK,GAClB,MAAMvO,EAAQuO,EAAgBxnC,QACxB7H,EAAMoG,EAAO06B,GACnBlgC,KAAK8tC,cAAc1uC,GAAKwI,QAAQ,UACzB5H,KAAK8tC,cAAc1uC,GAC1BY,KAAKgD,cAAc,IAAIyqC,GAAW,cAAevN,IACjDlgC,KAAK4E,SACP,CAUA,SAAAspC,GACE,OACEluC,KAAKP,IAAI,GAEb,CAUA,SAAAuuC,CAAUnO,GACR,MAAM6O,EAAa1uC,KAAKkuC,YACxB,GAAIQ,EAAY,CACd,MAAMC,EAAgBD,EAAW5mC,WACjC,IAAK,IAAIjH,EAAI,EAAG2C,EAAKmrC,EAAc/tC,OAAQC,EAAI2C,IAAM3C,EACnDb,KAAKgD,cAAc,IAAIyqC,GAAW,cAAekB,EAAc9tC,IAEnE,CAEAb,KAAK0G,IAAI,GAAiBm5B,EAC5B,CAOA,cAAAiN,CAAe5lC,GAKb,OAJAA,OAAkBlI,IAAVkI,EAAsBA,EAAQ,GACtClH,KAAKkuC,YAAYtmC,SAAQ,SAAUs4B,GACjCA,EAAM4M,eAAe5lC,EACvB,IACOA,CACT,CAYA,mBAAA6lC,CAAoBl4B,GAClB,MAAMm4B,OAAkBhuC,IAAT6V,EAAqBA,EAAO,GACrC+5B,EAAM5B,EAAOpsC,OAEnBZ,KAAKkuC,YAAYtmC,SAAQ,SAAUs4B,GACjCA,EAAM6M,oBAAoBC,EAC5B,IAEA,MAAM6B,EAAgB7uC,KAAKysC,gBAC3B,IAAIqC,EAAgBD,EAAczC,OAC7Bv3B,QAAiC7V,IAAzB6vC,EAAczC,SACzB0C,EAAgB,GAElB,IAAK,IAAIjuC,EAAI+tC,EAAKprC,EAAKwpC,EAAOpsC,OAAQC,EAAI2C,EAAI3C,IAAK,CACjD,MAAMkuC,EAAa/B,EAAOnsC,GAC1BkuC,EAAW5C,SAAW0C,EAAc1C,QACpC4C,EAAWjO,QAAUiO,EAAWjO,SAAW+N,EAAc/N,QACzDiO,EAAWrgB,cAAgBlhB,KAAK6D,IAC9B09B,EAAWrgB,cACXmgB,EAAcngB,eAEhBqgB,EAAWpgB,cAAgBnhB,KAAK8D,IAC9By9B,EAAWpgB,cACXkgB,EAAclgB,eAEhBogB,EAAW/d,QAAUxjB,KAAK8D,IAAIy9B,EAAW/d,QAAS6d,EAAc7d,SAChE+d,EAAW9d,QAAUzjB,KAAK6D,IAAI09B,EAAW9d,QAAS4d,EAAc5d,cACnCjyB,IAAzB6vC,EAAc/7B,cACU9T,IAAtB+vC,EAAWj8B,OACbi8B,EAAWj8B,OAASwD,GAClBy4B,EAAWj8B,OACX+7B,EAAc/7B,QAGhBi8B,EAAWj8B,OAAS+7B,EAAc/7B,aAGZ9T,IAAtB+vC,EAAW3C,SACb2C,EAAW3C,OAAS0C,EAExB,CAEA,OAAO9B,CACT,CAMA,cAAAC,GACE,MAAO,OACT,EAGF,YC/VA,GAMa,YANb,GAac,aAbd,GAsBc,aAtBd,GAwCkB,iBCmfX,SAAS+B,GAAOD,EAAYjW,GACjC,IAAKiW,EAAWjO,QACd,OAAO,EAET,MAAM5tB,EAAa4lB,EAAU5lB,WAC7B,GACEA,EAAa67B,EAAWpgB,eACxBzb,GAAc67B,EAAWrgB,cAEzB,OAAO,EAET,MAAMmF,EAAOiF,EAAUjF,KACvB,OAAOA,EAAOkb,EAAW/d,SAAW6C,GAAQkb,EAAW9d,OACzD,CAEA,SA9cA,cAAoB0c,GAIlB,WAAA5tC,CAAYoH,GACV,MAAMymC,EAActuC,OAAO4G,OAAO,CAAC,EAAGiB,UAC/BymC,EAAY/mC,OAEnBxE,MAAMurC,GAKN5tC,KAAKyE,GAKLzE,KAAKoE,KAKLpE,KAAK0E,GAML1E,KAAKivC,kBAAoB,KAMzBjvC,KAAKkvC,cAAgB,KAMrBlvC,KAAKmvC,iBAAmB,KAMxBnvC,KAAKovC,UAAY,KAMjBpvC,KAAKqvC,cAAe,EAMpBrvC,KAAKsvC,UAAW,EAGZnoC,EAAQs2B,SACVz9B,KAAKy9B,OAASt2B,EAAQs2B,QAGpBt2B,EAAQqB,KACVxI,KAAK49B,OAAOz2B,EAAQqB,KAGtBxI,KAAKwG,kBACH,GACAxG,KAAKuvC,6BAGP,MAAM1oC,EAASM,EAAQN,OACQM,EAAc,OACzC,KACJnH,KAAKwvC,UAAU3oC,EACjB,CAOA,cAAAimC,CAAe5lC,GAGb,OAFAA,EAAQA,GAAgB,IAClBnE,KAAK/C,MACJkH,CACT,CAOA,mBAAA6lC,CAAoBC,GAGlB,OAFAA,EAASA,GAAkB,IACpBjqC,KAAK/C,KAAKysC,iBACVO,CACT,CAQA,SAAA1M,GACE,OAAkCtgC,KAAKP,IAAI,KAA0B,IACvE,CAKA,eAAAgwC,GACE,OAAOzvC,KAAKsgC,WACd,CAMA,cAAA2M,GACE,MAAMpmC,EAAS7G,KAAKsgC,YACpB,OAAQz5B,EAAuBA,EAAO8J,WAArB,WACnB,CAKA,mBAAA++B,GACE1vC,KAAK4E,UACD5E,KAAKqvC,cAAgD,UAAhCrvC,KAAKsgC,YAAY3vB,aAG1C3Q,KAAKqvC,cAAe,EACpBrvC,KAAKgD,cAAc,eACrB,CAKA,2BAAAusC,GACMvvC,KAAKmvC,mBACP,EAAcnvC,KAAKmvC,kBACnBnvC,KAAKmvC,iBAAmB,MAE1BnvC,KAAKqvC,cAAe,EACpB,MAAMxoC,EAAS7G,KAAKsgC,YAChBz5B,IACF7G,KAAKmvC,iBAAmBjrC,EACtB2C,EACA,EACA7G,KAAK0vC,oBACL1vC,MAEwB,UAAtB6G,EAAO8J,aACT3Q,KAAKqvC,cAAe,EACpB5iC,YAAW,KACTzM,KAAKgD,cAAc,cAAc,GAChC,IAELhD,KAAK2vC,iBAEP3vC,KAAK4E,SACP,CAOA,WAAAgrC,CAAY7mC,GACV,OAAK/I,KAAKovC,UAGHpvC,KAAKovC,UAAUQ,YAAY7mC,GAFzBtH,QAAQE,QAAQ,GAG3B,CAMA,OAAAkuC,CAAQ9mC,GACN,OAAK/I,KAAKovC,WAAcpvC,KAAKsvC,SAGtBtvC,KAAKovC,UAAUS,QAAQ9mC,GAFrB,IAGX,CAWA,SAAA+mC,CAAU7N,GACR,IAAIx5B,EACJ,MAAMD,EAAMxI,KAAK+vC,iBAejB,IAAIhB,EACJ,IAfK9M,GAAQz5B,IACXy5B,EAAOz5B,EAAI05B,WAGXz5B,EADEw5B,aAAgB,GACL,CACXnJ,UAAWmJ,EAAKtxB,WAChBmC,OAAQmvB,EAAK3K,mBAGF2K,GAEVx5B,EAAWunC,kBAAoBxnC,IAClCC,EAAWunC,iBAAmBxnC,EAAIynC,gBAAgBlD,uBAGhDtkC,EAAWunC,kBAIb,GAHAjB,EAAatmC,EAAWunC,iBAAiBE,MACtCnB,GAAeA,EAAW7O,QAAUlgC,QAElC+uC,EACH,OAAO,OAGTA,EAAa/uC,KAAKysC,gBAGpB,MAAM0D,EAAcnwC,KAAK6Y,YAEzB,OACEm2B,GAAOD,EAAYtmC,EAAWqwB,cAC5BqX,GAAe35B,GAAW25B,EAAa1nC,EAAWqK,QAExD,CASA,eAAAqtB,CAAgB8B,GACd,IAAKjiC,KAAK8vC,UAAU7N,GAClB,MAAO,GAET,MAAM9B,EAAkBngC,KAAKsgC,aAAaH,kBAC1C,IAAKA,EACH,MAAO,GAIT,IAAIzB,EAAeyB,EADjB8B,aAAgB,GAAOA,EAAKpJ,wBAA0BoJ,GAKxD,OAHKl9B,MAAMC,QAAQ05B,KACjBA,EAAe,CAACA,IAEXA,CACT,CAUA,MAAAjB,CAAOh1B,EAAYhI,GACjB,MAAM2vC,EAAgBpwC,KAAKqwC,cAE3B,OAAID,EAAcE,aAAa7nC,IAC7BzI,KAAKsvC,UAAW,EACTc,EAAcG,YAAY9nC,EAAYhI,IAExC,IACT,CAKA,QAAA+vC,GACExwC,KAAKsvC,UAAW,CAClB,CAGA,YAAAmB,GAEA,CAMA,eAAAC,CAAgBjoC,EAAYsmC,GAAa,CAMzC,cAAA4B,CAAeloC,GACb,MAAM2nC,EAAgBpwC,KAAKqwC,cACtBD,GAGLA,EAAcO,eAAeloC,EAC/B,CAMA,cAAAmoC,CAAepoC,GACRA,GACHxI,KAAKwwC,WAEPxwC,KAAK0G,IJhZF,MIgZyB8B,EAC9B,CAMA,cAAAunC,GACE,OAAO/vC,KAAKP,IJxZT,MIyZL,CAaA,MAAAm+B,CAAOp1B,GACDxI,KAAKivC,oBACP,EAAcjvC,KAAKivC,mBACnBjvC,KAAKivC,kBAAoB,MAEtBzmC,GACHxI,KAAK4E,UAEH5E,KAAKkvC,gBACP,EAAclvC,KAAKkvC,eACnBlvC,KAAKkvC,cAAgB,MAEnB1mC,IACFxI,KAAKivC,kBAAoB/qC,EACvBsE,EACA,GACAxI,KAAK6wC,kBACL7wC,MAEFA,KAAKkvC,cAAgBhrC,EAAOlE,KAAM,EAAkBwI,EAAIi1B,OAAQj1B,GAChExI,KAAK4E,UAET,CAMA,iBAAAisC,CAAkBC,GAChB,MAAMd,EACgD,EACjDvnC,WAAWunC,iBACVjB,EAAa/uC,KAAKysC,eAAc,GACtC,IACGuD,EAAiB3P,MACf0Q,GAAoBA,EAAgB7Q,QAAU6O,EAAW7O,QAE5D,yGAEF8P,EAAiBjtC,KAAKgsC,EACxB,CAQA,SAAAS,CAAU3oC,GACR7G,KAAK0G,IAAI,GAAsBG,EACjC,CAMA,WAAAwpC,GAIE,OAHKrwC,KAAKovC,YACRpvC,KAAKovC,UAAYpvC,KAAKgxC,kBAEjBhxC,KAAKovC,SACd,CAKA,WAAA6B,GACE,QAASjxC,KAAKovC,SAChB,CAOA,cAAA4B,GACE,OAAO,IACT,CAKA,aAAArB,GACM3vC,KAAKovC,YACPpvC,KAAKovC,UAAUlvC,iBACRF,KAAKovC,UAEhB,CAMA,eAAAjvC,GACEH,KAAK2vC,gBACL3vC,KAAKwvC,UAAU,MACfntC,MAAMlC,iBACR,GCvhBa,SAAS+wC,GAAY1wC,EAAKomB,EAAGuhB,EAAM3c,EAAO2lB,GACrDC,GAAgB5wC,EAAKomB,EAAGuhB,GAAQ,EAAG3c,GAAUhrB,EAAII,OAAS,EAAIuwC,GAAWE,GAC7E,CAEA,SAASD,GAAgB5wC,EAAKomB,EAAGuhB,EAAM3c,EAAO2lB,GAE1C,KAAO3lB,EAAQ2c,GAAM,CACjB,GAAI3c,EAAQ2c,EAAO,IAAK,CACpB,IAAIxnC,EAAI6qB,EAAQ2c,EAAO,EACnB1pB,EAAImI,EAAIuhB,EAAO,EACfzW,EAAIlkB,KAAKuG,IAAIpT,GACb2wC,EAAI,GAAM9jC,KAAKmW,IAAI,EAAI+N,EAAI,GAC3B6f,EAAK,GAAM/jC,KAAK4N,KAAKsW,EAAI4f,GAAK3wC,EAAI2wC,GAAK3wC,IAAM8d,EAAI9d,EAAI,EAAI,GAAK,EAAI,GAGtEywC,GAAgB5wC,EAAKomB,EAFPpZ,KAAK8D,IAAI62B,EAAM36B,KAAKmkB,MAAM/K,EAAInI,EAAI6yB,EAAI3wC,EAAI4wC,IACzC/jC,KAAK6D,IAAIma,EAAOhe,KAAKmkB,MAAM/K,GAAKjmB,EAAI8d,GAAK6yB,EAAI3wC,EAAI4wC,IACrBJ,EAC/C,CAEA,IAAIn/B,EAAIxR,EAAIomB,GACR/lB,EAAIsnC,EACJxhB,EAAI6E,EAKR,IAHAgmB,GAAKhxC,EAAK2nC,EAAMvhB,GACZuqB,EAAQ3wC,EAAIgrB,GAAQxZ,GAAK,GAAGw/B,GAAKhxC,EAAK2nC,EAAM3c,GAEzC3qB,EAAI8lB,GAAG,CAIV,IAHA6qB,GAAKhxC,EAAKK,EAAG8lB,GACb9lB,IACA8lB,IACOwqB,EAAQ3wC,EAAIK,GAAImR,GAAK,GAAGnR,IAC/B,KAAOswC,EAAQ3wC,EAAImmB,GAAI3U,GAAK,GAAG2U,GACnC,CAE8B,IAA1BwqB,EAAQ3wC,EAAI2nC,GAAOn2B,GAAUw/B,GAAKhxC,EAAK2nC,EAAMxhB,GAG7C6qB,GAAKhxC,IADLmmB,EACa6E,GAGb7E,GAAKC,IAAGuhB,EAAOxhB,EAAI,GACnBC,GAAKD,IAAG6E,EAAQ7E,EAAI,EAC5B,CACJ,CAEA,SAAS6qB,GAAKhxC,EAAKK,EAAG8lB,GAClB,IAAIyE,EAAM5qB,EAAIK,GACdL,EAAIK,GAAKL,EAAImmB,GACbnmB,EAAImmB,GAAKyE,CACb,CAEA,SAASimB,GAAehxC,EAAGC,GACvB,OAAOD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,CACpC,CCnDe,MAAMmxC,GACjB,WAAA1xC,CAAY2xC,EAAa,GAErB1xC,KAAK2xC,YAAcnkC,KAAK8D,IAAI,EAAGogC,GAC/B1xC,KAAK4xC,YAAcpkC,KAAK8D,IAAI,EAAG9D,KAAKkF,KAAwB,GAAnB1S,KAAK2xC,cAC9C3xC,KAAK6B,OACT,CAEA,GAAA++B,GACI,OAAO5gC,KAAK6xC,KAAK7xC,KAAKisB,KAAM,GAChC,CAEA,MAAA6lB,CAAOC,GACH,IAAIhR,EAAO/gC,KAAKisB,KAChB,MAAM2C,EAAS,GAEf,IAAK,GAAWmjB,EAAMhR,GAAO,OAAOnS,EAEpC,MAAMojB,EAAShyC,KAAKgyC,OACdC,EAAgB,GAEtB,KAAOlR,GAAM,CACT,IAAK,IAAIlgC,EAAI,EAAGA,EAAIkgC,EAAKmR,SAAStxC,OAAQC,IAAK,CAC3C,MAAMsxC,EAAQpR,EAAKmR,SAASrxC,GACtBuxC,EAAYrR,EAAKsR,KAAOL,EAAOG,GAASA,EAE1C,GAAWJ,EAAMK,KACbrR,EAAKsR,KAAMzjB,EAAO7rB,KAAKovC,GAClBhQ,GAAS4P,EAAMK,GAAYpyC,KAAK6xC,KAAKM,EAAOvjB,GAChDqjB,EAAclvC,KAAKovC,GAEhC,CACApR,EAAOkR,EAAcvqC,KACzB,CAEA,OAAOknB,CACX,CAEA,QAAA0jB,CAASP,GACL,IAAIhR,EAAO/gC,KAAKisB,KAEhB,IAAK,GAAW8lB,EAAMhR,GAAO,OAAO,EAEpC,MAAMkR,EAAgB,GACtB,KAAOlR,GAAM,CACT,IAAK,IAAIlgC,EAAI,EAAGA,EAAIkgC,EAAKmR,SAAStxC,OAAQC,IAAK,CAC3C,MAAMsxC,EAAQpR,EAAKmR,SAASrxC,GACtBuxC,EAAYrR,EAAKsR,KAAOryC,KAAKgyC,OAAOG,GAASA,EAEnD,GAAI,GAAWJ,EAAMK,GAAY,CAC7B,GAAIrR,EAAKsR,MAAQlQ,GAAS4P,EAAMK,GAAY,OAAO,EACnDH,EAAclvC,KAAKovC,EACvB,CACJ,CACApR,EAAOkR,EAAcvqC,KACzB,CAEA,OAAO,CACX,CAEA,IAAAuJ,CAAKgb,GACD,IAAMA,IAAQA,EAAKrrB,OAAS,OAAOZ,KAEnC,GAAIisB,EAAKrrB,OAASZ,KAAK4xC,YAAa,CAChC,IAAK,IAAI/wC,EAAI,EAAGA,EAAIorB,EAAKrrB,OAAQC,IAC7Bb,KAAKuyC,OAAOtmB,EAAKprB,IAErB,OAAOb,IACX,CAGA,IAAI+gC,EAAO/gC,KAAKwyC,OAAOvmB,EAAK5M,QAAS,EAAG4M,EAAKrrB,OAAS,EAAG,GAEzD,GAAKZ,KAAKisB,KAAKimB,SAAStxC,OAIjB,GAAIZ,KAAKisB,KAAKiQ,SAAW6E,EAAK7E,OAEjCl8B,KAAKyyC,WAAWzyC,KAAKisB,KAAM8U,OAExB,CACH,GAAI/gC,KAAKisB,KAAKiQ,OAAS6E,EAAK7E,OAAQ,CAEhC,MAAMwW,EAAU1yC,KAAKisB,KACrBjsB,KAAKisB,KAAO8U,EACZA,EAAO2R,CACX,CAGA1yC,KAAK2yC,QAAQ5R,EAAM/gC,KAAKisB,KAAKiQ,OAAS6E,EAAK7E,OAAS,GAAG,EAC3D,MAhBIl8B,KAAKisB,KAAO8U,EAkBhB,OAAO/gC,IACX,CAEA,MAAAuyC,CAAOxqC,GAEH,OADIA,GAAM/H,KAAK2yC,QAAQ5qC,EAAM/H,KAAKisB,KAAKiQ,OAAS,GACzCl8B,IACX,CAEA,KAAA6B,GAEI,OADA7B,KAAKisB,KAAO2mB,GAAW,IAChB5yC,IACX,CAEA,MAAAoI,CAAOL,EAAM8qC,GACT,IAAK9qC,EAAM,OAAO/H,KAElB,IAAI+gC,EAAO/gC,KAAKisB,KAChB,MAAM8lB,EAAO/xC,KAAKgyC,OAAOjqC,GACnB+qC,EAAO,GACPC,EAAU,GAChB,IAAIlyC,EAAGq8B,EAAQ8V,EAGf,KAAOjS,GAAQ+R,EAAKlyC,QAAQ,CASxB,GAPKmgC,IACDA,EAAO+R,EAAKprC,MACZw1B,EAAS4V,EAAKA,EAAKlyC,OAAS,GAC5BC,EAAIkyC,EAAQrrC,MACZsrC,GAAU,GAGVjS,EAAKsR,KAAM,CACX,MAAMtuC,EAAQkvC,GAASlrC,EAAMg5B,EAAKmR,SAAUW,GAE5C,IAAe,IAAX9uC,EAKA,OAHAg9B,EAAKmR,SAASjuC,OAAOF,EAAO,GAC5B+uC,EAAK/vC,KAAKg+B,GACV/gC,KAAKkzC,UAAUJ,GACR9yC,IAEf,CAEKgzC,GAAYjS,EAAKsR,OAAQlQ,GAASpB,EAAMgR,GAOlC7U,GACPr8B,IACAkgC,EAAO7D,EAAOgV,SAASrxC,GACvBmyC,GAAU,GAEPjS,EAAO,MAXV+R,EAAK/vC,KAAKg+B,GACVgS,EAAQhwC,KAAKlC,GACbA,EAAI,EACJq8B,EAAS6D,EACTA,EAAOA,EAAKmR,SAAS,GAQ7B,CAEA,OAAOlyC,IACX,CAEA,MAAAgyC,CAAOjqC,GAAQ,OAAOA,CAAM,CAE5B,WAAAorC,CAAY9yC,EAAGC,GAAK,OAAOD,EAAEqT,KAAOpT,EAAEoT,IAAM,CAC5C,WAAA0/B,CAAY/yC,EAAGC,GAAK,OAAOD,EAAEuT,KAAOtT,EAAEsT,IAAM,CAE5C,MAAAy/B,GAAW,OAAOrzC,KAAKisB,IAAM,CAE7B,QAAAqnB,CAASrnB,GAEL,OADAjsB,KAAKisB,KAAOA,EACLjsB,IACX,CAEA,IAAA6xC,CAAK9Q,EAAMnS,GACP,MAAMqjB,EAAgB,GACtB,KAAOlR,GACCA,EAAKsR,KAAMzjB,EAAO7rB,QAAQg+B,EAAKmR,UAC9BD,EAAclvC,QAAQg+B,EAAKmR,UAEhCnR,EAAOkR,EAAcvqC,MAEzB,OAAOknB,CACX,CAEA,MAAA4jB,CAAOe,EAAOpL,EAAM3c,EAAO0Q,GAEvB,MAAMsX,EAAIhoB,EAAQ2c,EAAO,EACzB,IACIpH,EADA0S,EAAIzzC,KAAK2xC,YAGb,GAAI6B,GAAKC,EAIL,OAFA1S,EAAO6R,GAAWW,EAAMl0B,MAAM8oB,EAAM3c,EAAQ,IAC5CkoB,GAAS3S,EAAM/gC,KAAKgyC,QACbjR,EAGN7E,IAEDA,EAAS1uB,KAAKkF,KAAKlF,KAAKuG,IAAIy/B,GAAKhmC,KAAKuG,IAAI0/B,IAG1CA,EAAIjmC,KAAKkF,KAAK8gC,EAAIhmC,KAAKgF,IAAIihC,EAAGvX,EAAS,KAG3C6E,EAAO6R,GAAW,IAClB7R,EAAKsR,MAAO,EACZtR,EAAK7E,OAASA,EAId,MAAMyX,EAAKnmC,KAAKkF,KAAK8gC,EAAIC,GACnBG,EAAKD,EAAKnmC,KAAKkF,KAAKlF,KAAK4N,KAAKq4B,IAEpCI,GAAYN,EAAOpL,EAAM3c,EAAOooB,EAAI5zC,KAAKmzC,aAEzC,IAAK,IAAItyC,EAAIsnC,EAAMtnC,GAAK2qB,EAAO3qB,GAAK+yC,EAAI,CAEpC,MAAME,EAAStmC,KAAK6D,IAAIxQ,EAAI+yC,EAAK,EAAGpoB,GAEpCqoB,GAAYN,EAAO1yC,EAAGizC,EAAQH,EAAI3zC,KAAKozC,aAEvC,IAAK,IAAIzsB,EAAI9lB,EAAG8lB,GAAKmtB,EAAQntB,GAAKgtB,EAAI,CAElC,MAAMI,EAASvmC,KAAK6D,IAAIsV,EAAIgtB,EAAK,EAAGG,GAGpC/S,EAAKmR,SAASnvC,KAAK/C,KAAKwyC,OAAOe,EAAO5sB,EAAGotB,EAAQ7X,EAAS,GAC9D,CACJ,CAIA,OAFAwX,GAAS3S,EAAM/gC,KAAKgyC,QAEbjR,CACX,CAEA,cAAAiT,CAAejC,EAAMhR,EAAMzpB,EAAOw7B,GAC9B,KACIA,EAAK/vC,KAAKg+B,IAENA,EAAKsR,MAAQS,EAAKlyC,OAAS,IAAM0W,GAH5B,CAKT,IAEI28B,EAFAnL,EAAU/6B,IACVmmC,EAAiBnmC,IAGrB,IAAK,IAAIlN,EAAI,EAAGA,EAAIkgC,EAAKmR,SAAStxC,OAAQC,IAAK,CAC3C,MAAMsxC,EAAQpR,EAAKmR,SAASrxC,GACtB0rB,EAAO4nB,GAAShC,GAChBiC,GAgNA/zC,EAhN2B0xC,EAgNxBzxC,EAhN8B6xC,GAiN3C3kC,KAAK8D,IAAIhR,EAAEqT,KAAMtT,EAAEsT,MAAQnG,KAAK6D,IAAI/Q,EAAEoT,KAAMrT,EAAEqT,QAC9ClG,KAAK8D,IAAIhR,EAAEuT,KAAMxT,EAAEwT,MAAQrG,KAAK6D,IAAI/Q,EAAEsT,KAAMvT,EAAEuT,OAlNM2Y,GAG5C6nB,EAAcF,GACdA,EAAiBE,EACjBtL,EAAUvc,EAAOuc,EAAUvc,EAAOuc,EAClCmL,EAAa9B,GAENiC,IAAgBF,GAEnB3nB,EAAOuc,IACPA,EAAUvc,EACV0nB,EAAa9B,EAGzB,CAEApR,EAAOkT,GAAclT,EAAKmR,SAAS,EACvC,CA8LR,IAAsB7xC,EAAGC,EA5LjB,OAAOygC,CACX,CAEA,OAAA4R,CAAQ5qC,EAAMuP,EAAO+8B,GACjB,MAAMtC,EAAOsC,EAAStsC,EAAO/H,KAAKgyC,OAAOjqC,GACnCusC,EAAa,GAGbvT,EAAO/gC,KAAKg0C,eAAejC,EAAM/xC,KAAKisB,KAAM3U,EAAOg9B,GAOzD,IAJAvT,EAAKmR,SAASnvC,KAAKgF,GACnB,GAAOg5B,EAAMgR,GAGNz6B,GAAS,GACRg9B,EAAWh9B,GAAO46B,SAAStxC,OAASZ,KAAK2xC,aACzC3xC,KAAKu0C,OAAOD,EAAYh9B,GACxBA,IAKRtX,KAAKw0C,oBAAoBzC,EAAMuC,EAAYh9B,EAC/C,CAGA,MAAAi9B,CAAOD,EAAYh9B,GACf,MAAMypB,EAAOuT,EAAWh9B,GAClBm8B,EAAI1S,EAAKmR,SAAStxC,OAClB6d,EAAIze,KAAK4xC,YAEf5xC,KAAKy0C,iBAAiB1T,EAAMtiB,EAAGg1B,GAE/B,MAAMiB,EAAa10C,KAAK20C,kBAAkB5T,EAAMtiB,EAAGg1B,GAE7CzW,EAAU4V,GAAW7R,EAAKmR,SAASjuC,OAAOywC,EAAY3T,EAAKmR,SAAStxC,OAAS8zC,IACnF1X,EAAQd,OAAS6E,EAAK7E,OACtBc,EAAQqV,KAAOtR,EAAKsR,KAEpBqB,GAAS3S,EAAM/gC,KAAKgyC,QACpB0B,GAAS1W,EAASh9B,KAAKgyC,QAEnB16B,EAAOg9B,EAAWh9B,EAAQ,GAAG46B,SAASnvC,KAAKi6B,GAC1Ch9B,KAAKyyC,WAAW1R,EAAM/D,EAC/B,CAEA,UAAAyV,CAAW1R,EAAM/D,GAEbh9B,KAAKisB,KAAO2mB,GAAW,CAAC7R,EAAM/D,IAC9Bh9B,KAAKisB,KAAKiQ,OAAS6E,EAAK7E,OAAS,EACjCl8B,KAAKisB,KAAKomB,MAAO,EACjBqB,GAAS1zC,KAAKisB,KAAMjsB,KAAKgyC,OAC7B,CAEA,iBAAA2C,CAAkB5T,EAAMtiB,EAAGg1B,GACvB,IAAI1vC,EACA6wC,EAAa7mC,IACb+6B,EAAU/6B,IAEd,IAAK,IAAIlN,EAAI4d,EAAG5d,GAAK4yC,EAAIh1B,EAAG5d,IAAK,CAC7B,MAAMg0C,EAAQC,GAAS/T,EAAM,EAAGlgC,EAAGb,KAAKgyC,QAClC+C,EAAQD,GAAS/T,EAAMlgC,EAAG4yC,EAAGzzC,KAAKgyC,QAElCgD,EAAUC,GAAiBJ,EAAOE,GAClCxoB,EAAO4nB,GAASU,GAASV,GAASY,GAGpCC,EAAUJ,GACVA,EAAaI,EACbjxC,EAAQlD,EAERioC,EAAUvc,EAAOuc,EAAUvc,EAAOuc,GAE3BkM,IAAYJ,GAEfroB,EAAOuc,IACPA,EAAUvc,EACVxoB,EAAQlD,EAGpB,CAEA,OAAOkD,GAAS0vC,EAAIh1B,CACxB,CAGA,gBAAAg2B,CAAiB1T,EAAMtiB,EAAGg1B,GACtB,MAAMN,EAAcpS,EAAKsR,KAAOryC,KAAKmzC,YAAc+B,GAC7C9B,EAAcrS,EAAKsR,KAAOryC,KAAKozC,YAAc+B,GACnCn1C,KAAKo1C,eAAerU,EAAMtiB,EAAGg1B,EAAGN,GAChCnzC,KAAKo1C,eAAerU,EAAMtiB,EAAGg1B,EAAGL,IAIzBrS,EAAKmR,SAAS7kB,KAAK8lB,EAC9C,CAGA,cAAAiC,CAAerU,EAAMtiB,EAAGg1B,EAAGtC,GACvBpQ,EAAKmR,SAAS7kB,KAAK8jB,GAEnB,MAAMa,EAAShyC,KAAKgyC,OACdqD,EAAWP,GAAS/T,EAAM,EAAGtiB,EAAGuzB,GAChCsD,EAAYR,GAAS/T,EAAM0S,EAAIh1B,EAAGg1B,EAAGzB,GAC3C,IAAIuD,EAASC,GAAWH,GAAYG,GAAWF,GAE/C,IAAK,IAAIz0C,EAAI4d,EAAG5d,EAAI4yC,EAAIh1B,EAAG5d,IAAK,CAC5B,MAAMsxC,EAAQpR,EAAKmR,SAASrxC,GAC5B,GAAOw0C,EAAUtU,EAAKsR,KAAOL,EAAOG,GAASA,GAC7CoD,GAAUC,GAAWH,EACzB,CAEA,IAAK,IAAIx0C,EAAI4yC,EAAIh1B,EAAI,EAAG5d,GAAK4d,EAAG5d,IAAK,CACjC,MAAMsxC,EAAQpR,EAAKmR,SAASrxC,GAC5B,GAAOy0C,EAAWvU,EAAKsR,KAAOL,EAAOG,GAASA,GAC9CoD,GAAUC,GAAWF,EACzB,CAEA,OAAOC,CACX,CAEA,mBAAAf,CAAoBzC,EAAMe,EAAMx7B,GAE5B,IAAK,IAAIzW,EAAIyW,EAAOzW,GAAK,EAAGA,IACxB,GAAOiyC,EAAKjyC,GAAIkxC,EAExB,CAEA,SAAAmB,CAAUJ,GAEN,IAAK,IAAyB2C,EAArB50C,EAAIiyC,EAAKlyC,OAAS,EAAaC,GAAK,EAAGA,IACZ,IAA5BiyC,EAAKjyC,GAAGqxC,SAAStxC,OACbC,EAAI,GACJ40C,EAAW3C,EAAKjyC,EAAI,GAAGqxC,SACvBuD,EAASxxC,OAAOwxC,EAASzxC,QAAQ8uC,EAAKjyC,IAAK,IAExCb,KAAK6B,QAET6xC,GAASZ,EAAKjyC,GAAIb,KAAKgyC,OAEtC,EAGJ,SAASiB,GAASlrC,EAAMwrC,EAAOV,GAC3B,IAAKA,EAAU,OAAOU,EAAMvvC,QAAQ+D,GAEpC,IAAK,IAAIlH,EAAI,EAAGA,EAAI0yC,EAAM3yC,OAAQC,IAC9B,GAAIgyC,EAAS9qC,EAAMwrC,EAAM1yC,IAAK,OAAOA,EAEzC,OAAQ,CACZ,CAGA,SAAS6yC,GAAS3S,EAAMiR,GACpB8C,GAAS/T,EAAM,EAAGA,EAAKmR,SAAStxC,OAAQoxC,EAAQjR,EACpD,CAGA,SAAS+T,GAAS/T,EAAMna,EAAG8uB,EAAG1D,EAAQ2D,GAC7BA,IAAUA,EAAW/C,GAAW,OACrC+C,EAASjiC,KAAO3F,IAChB4nC,EAAS/hC,KAAO7F,IAChB4nC,EAAShiC,MAAO,IAChBgiC,EAAS9hC,MAAO,IAEhB,IAAK,IAAIhT,EAAI+lB,EAAG/lB,EAAI60C,EAAG70C,IAAK,CACxB,MAAMsxC,EAAQpR,EAAKmR,SAASrxC,GAC5B,GAAO80C,EAAU5U,EAAKsR,KAAOL,EAAOG,GAASA,EACjD,CAEA,OAAOwD,CACX,CAEA,SAAS,GAAOt1C,EAAGC,GAKf,OAJAD,EAAEqT,KAAOlG,KAAK6D,IAAIhR,EAAEqT,KAAMpT,EAAEoT,MAC5BrT,EAAEuT,KAAOpG,KAAK6D,IAAIhR,EAAEuT,KAAMtT,EAAEsT,MAC5BvT,EAAEsT,KAAOnG,KAAK8D,IAAIjR,EAAEsT,KAAMrT,EAAEqT,MAC5BtT,EAAEwT,KAAOrG,KAAK8D,IAAIjR,EAAEwT,KAAMvT,EAAEuT,MACrBxT,CACX,CAEA,SAAS60C,GAAgB70C,EAAGC,GAAK,OAAOD,EAAEqT,KAAOpT,EAAEoT,IAAM,CACzD,SAASyhC,GAAgB90C,EAAGC,GAAK,OAAOD,EAAEuT,KAAOtT,EAAEsT,IAAM,CAEzD,SAASugC,GAAS9zC,GAAO,OAAQA,EAAEsT,KAAOtT,EAAEqT,OAASrT,EAAEwT,KAAOxT,EAAEuT,KAAO,CACvE,SAAS4hC,GAAWn1C,GAAK,OAAQA,EAAEsT,KAAOtT,EAAEqT,MAASrT,EAAEwT,KAAOxT,EAAEuT,KAAO,CAOvE,SAASqhC,GAAiB50C,EAAGC,GACzB,MAAMoT,EAAOlG,KAAK8D,IAAIjR,EAAEqT,KAAMpT,EAAEoT,MAC1BE,EAAOpG,KAAK8D,IAAIjR,EAAEuT,KAAMtT,EAAEsT,MAC1BD,EAAOnG,KAAK6D,IAAIhR,EAAEsT,KAAMrT,EAAEqT,MAC1BE,EAAOrG,KAAK6D,IAAIhR,EAAEwT,KAAMvT,EAAEuT,MAEhC,OAAOrG,KAAK8D,IAAI,EAAGqC,EAAOD,GACnBlG,KAAK8D,IAAI,EAAGuC,EAAOD,EAC9B,CAEA,SAASuuB,GAAS9hC,EAAGC,GACjB,OAAOD,EAAEqT,MAAQpT,EAAEoT,MACZrT,EAAEuT,MAAQtT,EAAEsT,MACZtT,EAAEqT,MAAQtT,EAAEsT,MACZrT,EAAEuT,MAAQxT,EAAEwT,IACvB,CAEA,SAAS,GAAWxT,EAAGC,GACnB,OAAOA,EAAEoT,MAAQrT,EAAEsT,MACZrT,EAAEsT,MAAQvT,EAAEwT,MACZvT,EAAEqT,MAAQtT,EAAEqT,MACZpT,EAAEuT,MAAQxT,EAAEuT,IACvB,CAEA,SAASg/B,GAAWV,GAChB,MAAO,CACHA,WACAhW,OAAQ,EACRmW,MAAM,EACN3+B,KAAM3F,IACN6F,KAAM7F,IACN4F,MAAM,IACNE,MAAM,IAEd,CAKA,SAASggC,GAAYrzC,EAAK2nC,EAAM3c,EAAO7qB,EAAGwwC,GACtC,MAAM7nB,EAAQ,CAAC6e,EAAM3c,GAErB,KAAOlC,EAAM1oB,QAAQ,CAIjB,IAHA4qB,EAAQlC,EAAM5hB,QACdygC,EAAO7e,EAAM5hB,QAEO/G,EAAG,SAEvB,MAAMi1C,EAAMzN,EAAO36B,KAAKkF,MAAM8Y,EAAQ2c,GAAQxnC,EAAI,GAAKA,EACvDuwC,GAAY1wC,EAAKo1C,EAAKzN,EAAM3c,EAAO2lB,GAEnC7nB,EAAMvmB,KAAKolC,EAAMyN,EAAKA,EAAKpqB,EAC/B,CACJ,eCnfA,IAAIqqB,GAAW,CACdC,IAAK,EACLC,OAAQ,GACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,KCZT,UACCC,KAAM,MACN/kC,IAAK,CAAC,EAAE,EAAE,GACVC,IAAK,CAAC,IAAI,IAAI,KACd+kC,QAAS,CAAC,MAAO,QAAS,QAC1BC,MAAO,CAAC,QCNT,IACCF,KAAM,MACN/kC,IAAK,CAAC,EAAE,EAAE,GACVC,IAAK,CAAC,IAAI,IAAI,KACd+kC,QAAS,CAAC,MAAO,aAAc,aAC/BC,MAAO,CAAC,OAERC,IAAK,SAASC,GACb,IAAoDx0B,EAAIC,EAAIw0B,EAAIF,EAAKtsB,EAAjE8M,EAAIyf,EAAI,GAAG,IAAKlF,EAAIkF,EAAI,GAAG,IAAKE,EAAIF,EAAI,GAAG,IAA2B31C,EAAE,EAE5E,GAAU,IAANywC,EAAS,MAAsB,CAAfrnB,EAAU,IAAJysB,EAAezsB,EAAKA,GAM9C,IAHAjI,EAAK,EAAI00B,GADTz0B,EAAKy0B,EAAI,GAAMA,GAAK,EAAIpF,GAAKoF,EAAIpF,EAAIoF,EAAIpF,GAGzCiF,EAAM,CAAC,EAAG,EAAG,GACP11C,EAAE,IACP41C,EAAK1f,EAAI,EAAI,IAAOl2B,EAAI,IACnB,EAAI41C,IAAOA,EAAK,GAAKA,IAC1BxsB,EAAM,EAAIwsB,EAAK,EAAIz0B,EAAiB,GAAXC,EAAKD,GAAUy0B,EACxC,EAAIA,EAAK,EAAIx0B,EACb,EAAIw0B,EAAK,EAAKz0B,GAAMC,EAAKD,IAAO,EAAI,EAAIy0B,GAAM,EAC9Cz0B,EACAu0B,EAAI11C,KAAa,IAANopB,EAGZ,OAAOssB,CACR,GAKDA,GAAIC,IAAM,SAASD,GAClB,IAMExf,EAAM2f,EANJtkC,EAAImkC,EAAI,GAAG,IACbI,EAAIJ,EAAI,GAAG,IACXj2C,EAAIi2C,EAAI,GAAG,IACXllC,EAAM7D,KAAK6D,IAAIe,EAAGukC,EAAGr2C,GACrBgR,EAAM9D,KAAK8D,IAAIc,EAAGukC,EAAGr2C,GACrBk1B,EAAQlkB,EAAMD,EAkChB,OA/BIC,IAAQD,EACX0lB,EAAI,EAEI3kB,IAAMd,EACdylB,GAAK4f,EAAIr2C,GAAKk1B,EAENmhB,IAAMrlC,EACdylB,EAAI,GAAKz2B,EAAI8R,GAAKojB,EAEVl1B,IAAMgR,IACdylB,EAAI,GAAK3kB,EAAIukC,GAAInhB,IAGlBuB,EAAIvpB,KAAK6D,IAAQ,GAAJ0lB,EAAQ,MAEb,IACPA,GAAK,KAGN2f,GAAKrlC,EAAMC,GAAO,EAYX,CAACylB,EAAO,KAVXzlB,IAAQD,EACP,EAEIqlC,GAAK,GACTlhB,GAASlkB,EAAMD,GAGfmkB,GAAS,EAAIlkB,EAAMD,IAGA,IAAJqlC,EACrB,ECvEA,IAAIE,GAAM,CACTR,KAAM,MACN/kC,IAAK,CAAC,EAAE,EAAE,GACVglC,QAAS,CAAC,IAAI,IAAI,KAClBC,MAAO,CAAC,MAAO,SAAU,WAS1BM,WAAiB,CAEhB,EAAG,CAEFC,EAAE,CAAC,OAAQ,IAAK,QAEhBC,EAAG,CAAC,OAAQ,IAAK,SACjBC,IAAK,CAAC,OAAQ,IAAK,QACnBC,IAAK,CAAC,OAAQ,IAAK,QAEnBC,IAAK,CAAC,gBAAiB,IAAK,mBAC5BC,IAAK,CAAC,OAAQ,IAAK,SAGnBC,GAAI,CAAC,OAAQ,IAAK,QAKlBC,GAAI,CAAC,OAAQ,IAAK,SAIlBC,IAAK,CAAC,QAAS,IAAK,OAEpBt8B,EAAG,CAAC,IAAI,IAAI,MAIb,GAAI,CAEH87B,EAAE,CAAC,QAAS,IAAK,MACjBC,EAAG,CAAC,OAAQ,IAAK,SACjBC,IAAK,CAAC,MAAQ,IAAK,QACnBC,IAAK,CAAC,OAAQ,IAAK,QAEnBC,IAAK,CAAC,OAAQ,IAAK,SACnBC,IAAK,CAAC,OAAQ,IAAK,SAEnBC,GAAI,CAAC,OAAS,IAAK,QACnBC,GAAI,CAAC,OAAQ,IAAK,SAClBC,IAAK,CAAC,QAAS,IAAK,QACpBt8B,EAAG,CAAC,IAAI,IAAI,QAQd67B,GAAItlC,IAAMslC,GAAIU,WAAW,GAAGL,IAU5BL,GAAIL,IAAM,SAAUgB,EAAMC,GAEzBA,EAAQA,GAASZ,GAAIU,WAAW,GAAGv8B,EAEnC,IAGC3I,EAAGukC,EAAGr2C,EAHHkR,EAAI+lC,EAAK,GAAKC,EAAM,GACvB/lC,EAAI8lC,EAAK,GAAKC,EAAM,GACpB9lB,EAAI6lB,EAAK,GAAKC,EAAM,GAsBrB,OAhBAb,GAAU,gBAALnlC,EAA8B,iBAAJC,EAA6B,iBAAJigB,EACxDpxB,EAAS,iBAAJkR,GAA+B,gBAALC,EAA8B,kBAAJigB,EAEzDtf,GAJAA,EAAS,kBAAJZ,GAA+B,kBAALC,GAAgC,cAALigB,GAIlD,SAAc,MAAQlkB,KAAKgF,IAAIJ,EAAG,EAAM,KAAQ,KACrDA,GAAS,MAEZukC,EAAIA,EAAI,SAAc,MAAQnpC,KAAKgF,IAAImkC,EAAG,EAAM,KAAQ,KACrDA,GAAS,MAEZr2C,EAAIA,EAAI,SAAc,MAAQkN,KAAKgF,IAAIlS,EAAG,EAAM,KAAQ,KACrDA,GAAS,MAML,CAAK,KAJZ8R,EAAI5E,KAAK6D,IAAI7D,KAAK8D,IAAI,EAAGc,GAAI,IAIR,KAHrBukC,EAAInpC,KAAK6D,IAAI7D,KAAK8D,IAAI,EAAGqlC,GAAI,IAGC,KAF9Br2C,EAAIkN,KAAK6D,IAAI7D,KAAK8D,IAAI,EAAGhR,GAAI,IAG9B,EAWAi2C,GAAIK,IAAM,SAASL,EAAKiB,GACvB,IAAIplC,EAAImkC,EAAI,GAAK,IACfI,EAAIJ,EAAI,GAAK,IACbj2C,EAAIi2C,EAAI,GAAK,IAQX9kC,EAAS,iBALbW,EAAIA,EAAI,OAAU5E,KAAKgF,KAAMJ,EAAI,MAAS,MAAQ,KAAQA,EAAI,OAKxB,iBAJtCukC,EAAIA,EAAI,OAAUnpC,KAAKgF,KAAMmkC,EAAI,MAAS,MAAQ,KAAQA,EAAI,OAIC,kBAH/Dr2C,EAAIA,EAAI,OAAUkN,KAAKgF,KAAMlS,EAAI,MAAS,MAAQ,KAAQA,EAAI,OAI1DoxB,EAAS,iBAAJtf,EAA8B,gBAAJukC,EAA6B,gBAAJr2C,EAI5D,MAAO,EANM,gBAAJ8R,EAA6B,gBAAJukC,EAA6B,gBAAJr2C,IAI3Dk3C,EAAQA,GAASZ,GAAIU,WAAW,GAAGv8B,GAEjB,GAAItJ,EAAI+lC,EAAM,GAAI9lB,EAAI8lB,EAAM,GAC/C,EAIA,YCtIA,IACCpB,KAAM,MAKN/kC,IAAK,CAAC,GAAG,KAAK,KACdC,IAAK,CAAC,IAAI,IAAI,KACd+kC,QAAS,CAAC,YAAa,IAAK,KAC5BC,MAAO,CAAC,MAAO,SAAU,WAEzBM,IAAK,SAASa,EAAK52C,EAAGxB,GACrB,IAAIq4C,EAAIC,EAAIjB,EAAGkB,EAAGC,EAAMpmC,EAAMqmC,EAAIC,EAAIC,EAGtC,OAFAtB,EAAIe,EAAI,GAAIG,EAAIH,EAAI,GAAII,EAAIJ,EAAI,GAEtB,IAANf,EAAgB,CAAC,EAAE,EAAE,IAOzB71C,EAAIA,GAAK,MACTxB,EAAIA,GAAK,EAYTq4C,EAAKE,GAAK,GAAKlB,GANT,GAJNoB,EAAK,GAAIR,WAAWj4C,GAAGwB,GAAG,KAITi3C,EAAM,IAHvBC,EAAK,GAAIT,WAAWj4C,GAAGwB,GAAG,IAGS,GAFnCm3C,EAAK,GAAIV,WAAWj4C,GAAGwB,GAAG,MAQA,EAC1B82C,EAAKE,GAAK,GAAKnB,GANT,EAAIqB,GAAOD,EAAM,GAAKC,EAAO,EAAIC,IAMb,EAanB,CARC,GAHRvmC,EAAIilC,EAAI,EAAIqB,EAAKvqC,KAAKgF,KAAMkkC,EAAI,IAAM,IAAM,GAAKqB,EAAKrB,EAnB9C,sBAsBIgB,GAAM,EAAIC,IAAO,EAQlBlmC,EAPPA,GAAK,GAAK,EAAIimC,EAAK,GAAKC,IAAO,EAAIA,IAAO,GAQ/C,GAOD,GAAIM,IAAM,SAASR,EAAK52C,EAAGxB,GAC1B,IAAIq4C,EAAIC,EAAIjB,EAASllC,EAAGC,EAAGigB,EAAGomB,EAAIC,EAAIC,EAAItzC,EAAIwzC,EAO9Cr3C,EAAIA,GAAK,MACTxB,EAAIA,GAAK,EAMTqF,EAAM,GAJNozC,EAAK,GAAIR,WAAWj4C,GAAGwB,GAAG,KAITi3C,EAAM,IAHvBC,EAAK,GAAIT,WAAWj4C,GAAGwB,GAAG,IAGS,GAFnCm3C,EAAK,GAAIV,WAAWj4C,GAAGwB,GAAG,KAG1Bq3C,EAAM,EAAIH,GAAOD,EAAM,GAAKC,EAAO,EAAIC,GAMvCN,EAAM,GAHNlmC,EAAIimC,EAAI,KAGQjmC,EAAK,IAHTC,EAAIgmC,EAAI,IAGY,GAHR/lB,EAAI+lB,EAAI,MAGW,EAC3CE,EAAM,EAAIlmC,GAAMD,EAAK,GAAKC,EAAM,EAAIigB,IAAO,EAE3C,IAAIymB,EAAK1mC,EAAEsmC,EAOX,MAAO,CALPrB,EAAIyB,GAvBI,oBACA,kBAsBUA,EAAK,IAAM3qC,KAAKgF,IAAI2lC,EAAI,EAAE,GAAK,GAE7C,GAAKzB,GAAKgB,EAAKhzC,GACf,GAAKgyC,GAAKiB,EAAKO,GAGpB,ECxFA,IAAIE,GAAQ,CACXhC,KAAM,QACNC,QAAS,CAAC,YAAa,SAAU,OACjCC,MAAO,CAAC,QAAS,YACjBjlC,IAAK,CAAC,EAAE,EAAE,GACVC,IAAK,CAAC,IAAI,IAAI,KAEd2mC,IAAK,SAASA,GACb,IAGMI,EAHF3B,EAAIuB,EAAI,GACZh7B,EAAIg7B,EAAI,GAOR,OAHAI,EAHIJ,EAAI,GAGC,IAAM,EAAIzqC,KAAK0E,GAGjB,CAACwkC,EAFJz5B,EAAIzP,KAAKqI,IAAIwiC,GACbp7B,EAAIzP,KAAKuI,IAAIsiC,GAElB,EAEAzB,IAAK,SAASa,GACb,OAAOQ,GAAIrB,IAAIwB,GAAMH,IAAIR,GAC1B,GAGD,YAEAQ,GAAIG,MAAQ,SAASH,GACpB,IAAIvB,EAAIuB,EAAI,GAAIL,EAAIK,EAAI,GAAIJ,EAAII,EAAI,GAEhCh7B,EAAIzP,KAAK4N,KAAKw8B,EAAEA,EAAIC,EAAEA,GAEtB9gB,EAAS,IADJvpB,KAAKsS,MAAM+3B,EAAED,GACH,EAAIpqC,KAAK0E,GAK5B,OAJI6kB,EAAI,IACPA,GAAK,KAGC,CAAC2f,EAAEz5B,EAAE8Z,EACb,EAEA,GAAIqhB,MAAQ,SAASX,GACnB,OAAOQ,GAAIG,MAAM,GAAIH,IAAIR,GAC3B,EC3BO,MAAMa,GAAW,CAACv0B,IAAKA,IAAKA,IAAK,GA0BlC,GAAQ,CAAC,EAKf,IAAIw0B,GAAY,EAQT,SAASC,GAAUC,GACxB,GAAqB,IAAjBA,EAAM73C,OACR,OAAO63C,EAET,MAAMt5B,EAASs5B,EAAMp5B,QAErB,OADAF,EAAO,GAAK,EACLA,CACT,CAMO,SAASu5B,GAAWD,GACzB,MAAMt5B,EAAS,GAAIi5B,MAAM7B,GAAIK,IAAI6B,IAEjC,OADAt5B,EAAO,GAAKs5B,EAAM,GACXt5B,CACT,CAgBO,SAASw5B,GAAWrH,GACzB,GAAU,SAANA,EACF,OAAOgH,GAET,GAAI,GAAMz4C,eAAeyxC,GACvB,OAAO,GAAMA,GAEf,GAAIiH,IA7DiB,KA6DY,CAC/B,IAAI13C,EAAI,EACR,IAAK,MAAMzB,KAAO,GACL,EAANyB,aACI,GAAMzB,KACXm5C,GAGR,CAEA,MAAME,EC3GO,SAAcA,GAK5B,IAAI5yC,EAHAd,MAAMC,QAAQyzC,IAAUA,EAAMG,MAAKH,EAAQ/yC,OAAOkzC,OAAOn0B,YACzDg0B,aAAiBrzB,SAAQqzB,GAASA,GAKtC,IAAII,EPaL,SAAeC,GACd,IAAIr6B,EAA0Bs6B,EAAvBC,EAAQ,GAAIC,EAAQ,EAG3B,GAAoB,iBAATH,EACV,MAAO,CAAEC,MAAO,MAAOlzC,OAAQ,CAACizC,IAAS,IAAY,MAAPA,KAAqB,EAAU,IAAPA,GAAkBG,MAAO,GAEhG,GAAoB,iBAATH,EAAmB,MAAO,CAAEC,MAAO,MAAOlzC,OAAQ,CAACizC,IAAS,IAAY,MAAPA,KAAqB,EAAU,IAAPA,GAAkBG,MAAO,GAK7H,GAHAH,EAAOpzC,OAAOozC,GAAM5uC,cAGhB,GAAM4uC,GACTE,EAAQ,GAAMF,GAAMz5B,QACpB05B,EAAQ,WAIJ,GAAa,gBAATD,EACRG,EAAQ,EACRF,EAAQ,MACRC,EAAQ,CAAC,EAAG,EAAG,QAIX,GAAgB,MAAZF,EAAK,GAAY,CACzB,IAAII,EAAOJ,EAAKz5B,MAAM,GAClBlM,EAAO+lC,EAAKt4C,OAEhBq4C,EAAQ,EADM9lC,GAAQ,GAIrB6lC,EAAQ,CACPj6B,SAASm6B,EAAK,GAAKA,EAAK,GAAI,IAC5Bn6B,SAASm6B,EAAK,GAAKA,EAAK,GAAI,IAC5Bn6B,SAASm6B,EAAK,GAAKA,EAAK,GAAI,KAEhB,IAAT/lC,IACH8lC,EAAQl6B,SAASm6B,EAAK,GAAKA,EAAK,GAAI,IAAM,OAI3CF,EAAQ,CACPj6B,SAASm6B,EAAK,GAAKA,EAAK,GAAI,IAC5Bn6B,SAASm6B,EAAK,GAAKA,EAAK,GAAI,IAC5Bn6B,SAASm6B,EAAK,GAAKA,EAAK,GAAI,KAEhB,IAAT/lC,IACH8lC,EAAQl6B,SAASm6B,EAAK,GAAKA,EAAK,GAAI,IAAM,MAIvCF,EAAM,KAAIA,EAAM,GAAK,GACrBA,EAAM,KAAIA,EAAM,GAAK,GACrBA,EAAM,KAAIA,EAAM,GAAK,GAE1BD,EAAQ,KACT,MAGK,GAAIt6B,EAAI,yGAAyG06B,KAAKL,GAAO,CACjI,IAAI1C,EAAO33B,EAAE,GAET26B,EAAiB,UADrBL,EAAQ3C,EAAK51B,QAAQ,KAAM,KACG,EAAc,SAAVu4B,EAAmB,EAAI,EACzDC,EAAQv6B,EAAE,GAAG46B,OAAOC,MAAM,mBAGZ,UAAVP,IAAmBA,EAAQC,EAAM1c,SA2CrC2c,GAzCAD,EAAQA,EAAMxwC,KAAI,SAAUgJ,EAAG3Q,GAE9B,GAAwB,MAApB2Q,EAAEA,EAAE5Q,OAAS,GAGhB,OAFA4Q,EAAI+nC,WAAW/nC,GAAK,IAEV,IAAN3Q,EAAgB2Q,EAEN,QAAVunC,EAA4B,IAAJvnC,EAEX,MAAbunC,EAAM,GAAuB,IAAJvnC,EAEZ,MAAbunC,EAAM,IAAel4C,EAEX,QAAVk4C,EAA4B,IAAJvnC,EAEd,QAAVunC,EAAwBl4C,EAAI,EAAQ,IAAJ2Q,EAAc,IAAJA,EAE7B,MAAbunC,EAAM,IAAel4C,EAEX,UAAVk4C,EAA8B,GAAJvnC,EAEhB,UAAVunC,EAA0Bl4C,EAAI,EAAQ,GAAJ2Q,EAAc,IAAJA,EAEzCA,EAN4BA,EANI,IAAJA,EAgBpC,GAAiB,MAAbunC,EAAMl4C,IAAqB,IAANA,GAAuC,MAA5Bk4C,EAAMA,EAAMn4C,OAAS,GAAa,CAErE,QAAoB5B,IAAhB62C,GAASrkC,GAAkB,OAAOqkC,GAASrkC,GAE/C,GAAIA,EAAEgoC,SAAS,OAAQ,OAAOD,WAAW/nC,GAEzC,GAAIA,EAAEgoC,SAAS,QAAS,OAAuB,IAAhBD,WAAW/nC,GAC1C,GAAIA,EAAEgoC,SAAS,QAAS,OAAuB,IAAhBD,WAAW/nC,GAAW,IACrD,GAAIA,EAAEgoC,SAAS,OAAQ,OAAuB,IAAhBD,WAAW/nC,GAAWhE,KAAK0E,EAC1D,CACA,MAAU,SAANV,EAAqB,EAClB+nC,WAAW/nC,EACnB,KAEc5Q,OAASw4C,EAAOJ,EAAMtxC,MAAQ,CAC7C,KAGS,mBAAmB2C,KAAKyuC,KAChCE,EAAQF,EAAKh6B,MAAM,aAAatW,KAAI,SAAUjH,GAC7C,OAAOg4C,WAAWh4C,EACnB,IAEAw3C,EAAQD,EAAKh6B,MAAM,cAAcid,KAAK,KAAK7xB,eAAiB,OAG7D,MAAO,CACN6uC,QACAlzC,OAAQmzC,EACRC,QAEF,CO5Ic,CAAMR,GAEnB,IAAKI,EAAOE,MAAO,MAAO,GAE1B,MAAM1nC,EAA0B,MAApBwnC,EAAOE,MAAM,GAAavC,GAAInlC,IAAMklC,GAAIllC,IAC9CC,EAA0B,MAApBunC,EAAOE,MAAM,GAAavC,GAAIllC,IAAMilC,GAAIjlC,IAapD,OAXAzL,EAASd,MAAM,IACR,GAAKyI,KAAK6D,IAAI7D,KAAK8D,IAAIunC,EAAOhzC,OAAO,GAAIwL,EAAI,IAAKC,EAAI,IAC7DzL,EAAO,GAAK2H,KAAK6D,IAAI7D,KAAK8D,IAAIunC,EAAOhzC,OAAO,GAAIwL,EAAI,IAAKC,EAAI,IAC7DzL,EAAO,GAAK2H,KAAK6D,IAAI7D,KAAK8D,IAAIunC,EAAOhzC,OAAO,GAAIwL,EAAI,IAAKC,EAAI,IAErC,MAApBunC,EAAOE,MAAM,KAChBlzC,EAAS2wC,GAAID,IAAI1wC,IAGlBA,EAAO9C,KAAKyK,KAAK6D,IAAI7D,KAAK8D,IAAIunC,EAAOI,MAAO,GAAI,IAEzCpzC,CACR,CDgFgB,CAAUyrC,GACxB,GAAqB,IAAjBmH,EAAM73C,OACR,MAAM,IAAI0E,MAAM,oBAAsBgsC,EAAI,cAE5C,IAAK,MAAMr0B,KAAKw7B,EACd,GAAIhzB,MAAMxI,GACR,MAAM,IAAI3X,MAAM,oBAAsBgsC,EAAI,cAM9C,OAHAmI,GAAUhB,GACV,GAAMnH,GAAKmH,IACTF,GACKE,CACT,CASO,SAASiB,GAAQjB,GACtB,OAAI1zC,MAAMC,QAAQyzC,GACTA,EAEFE,GAAWF,EACpB,CAOO,SAASgB,GAAUhB,GAKxB,OAJAA,EAAM,GAAK,GAAOA,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAK,GAAOA,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAK,GAAOA,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAK,GAAMA,EAAM,GAAI,EAAG,GACvBA,CACT,CAMO,SAAS,GAASA,GACvB,IAAIrmC,EAAIqmC,EAAM,GACVrmC,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAIukC,EAAI8B,EAAM,GACV9B,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAIr2C,EAAIm4C,EAAM,GAKd,OAJIn4C,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAGX,QAAU8R,EAAI,IAAMukC,EAAI,IAAMr2C,EAAI,UADlBtB,IAAby5C,EAAM,GAAmB,EAAIjrC,KAAKiF,MAAiB,IAAXgmC,EAAM,IAAa,KAClB,GACrD,CE9IO,SAASkB,GAAQxmC,GACtB,OAAOA,EAAK,GAAK,GAAKA,EAAK,GAAK,CAClC,CA2BO,SAASymC,GAAOzmC,EAAM0B,GAC3B,OAAI9P,MAAMC,QAAQmO,GACTA,QAEInU,IAAT6V,EACFA,EAAO,CAAC1B,EAAMA,IAEd0B,EAAK,GAAK1B,EACV0B,EAAK,GAAK1B,GAEL0B,EACT,CCgEA,IAAIglC,GAAW,EACR,MACMC,GAAc,GAAKD,KACnBE,GAAa,GAAKF,KAClBG,GAAa,GAAKH,KAClBI,GAAY,GAAKJ,KACjBK,GAAkB,GAAKL,KACvBM,GAAW,GAAKN,KAChBO,GAAU5sC,KAAKgF,IAAI,EADHqnC,GACkB,EAEzCQ,GAAY,CAChB,CAACP,IAAc,UACf,CAACC,IAAa,SACd,CAACC,IAAa,SACd,CAACC,IAAY,QACb,CAACC,IAAkB,WACnB,CAACC,IAAW,QAGRG,GAAah7C,OAAOwE,KAAKu2C,IAAW7xC,IAAI4c,QAAQiI,KAAKjtB,GAepD,SAASm6C,GAASv4C,GACvB,MAAMw4C,EAAQ,GACd,IAAK,MAAMC,KAAaH,GAClBI,GAAa14C,EAAMy4C,IACrBD,EAAMz3C,KAAKs3C,GAAUI,IAGzB,OAAqB,IAAjBD,EAAM55C,OACD,UAEL45C,EAAM55C,OAAS,EACV45C,EAAMze,KAAK,QAEbye,EAAMn7B,MAAM,GAAI,GAAG0c,KAAK,MAAQ,QAAUye,EAAMA,EAAM55C,OAAS,EACxE,CAOO,SAAS85C,GAAaC,EAAOC,GAClC,OAAQD,EAAQC,KAAcA,CAChC,CAgBO,SAASC,GAAO74C,EAAM84C,GAC3B,OAAO94C,IAAS84C,CAClB,CAMO,MAAMC,GAKX,WAAAh7C,CAAYiC,EAAMT,GAChB,IA9DJ,SAAoBS,GAClB,OAAOA,KAAQq4C,EACjB,CA4DSW,CAAWh5C,GACd,MAAM,IAAIsD,MACR,sDAAsDi1C,GAASv4C,MAGnEhC,KAAKgC,KAAOA,EACZhC,KAAKuB,MAAQA,CACf,EAGK,MAAM05C,GAMX,WAAAl7C,CAAYiC,EAAMk5C,KAAa1jC,GAC7BxX,KAAKgC,KAAOA,EACZhC,KAAKk7C,SAAWA,EAChBl7C,KAAKwX,KAAOA,CACd,EAmBK,SAAS2jC,KACd,MAAO,CACLC,UAAW,IAAIpb,IACfpP,WAAY,IAAIoP,IAChBqb,WAAW,EACXC,cAAc,EACdC,UAAU,EAEd,CAYO,SAAS,GAAMC,EAASC,EAAc5e,GAC3C,cAAe2e,GACb,IAAK,UACH,GAAIX,GAAOY,EAAczB,IACvB,OAAO,IAAIe,GAAkBf,GAAYwB,EAAU,OAAS,SAE9D,IAAKd,GAAae,EAAc3B,IAC9B,MAAM,IAAIx0C,MACR,+BAA+Bi1C,GAASkB,MAG5C,OAAO,IAAIV,GAAkBjB,GAAa0B,GAE5C,IAAK,SACH,GAAIX,GAAOY,EAActB,IACvB,OAAO,IAAIY,GAAkBZ,GAAUP,GAAO4B,IAEhD,GAAIX,GAAOY,EAAc3B,IACvB,OAAO,IAAIiB,GAAkBjB,KAAe0B,GAE9C,GAAIX,GAAOY,EAAczB,IACvB,OAAO,IAAIe,GAAkBf,GAAYwB,EAAQE,YAEnD,IAAKhB,GAAae,EAAc1B,IAC9B,MAAM,IAAIz0C,MAAM,8BAA8Bi1C,GAASkB,MAEzD,OAAO,IAAIV,GAAkBhB,GAAYyB,GAE3C,IAAK,SACH,GAAIX,GAAOY,EAAcxB,IACvB,OAAO,IAAIc,GAAkBd,GAAW,GAAgBuB,IAE1D,GAAIX,GAAOY,EAAc3B,IACvB,OAAO,IAAIiB,GAAkBjB,KAAe0B,GAE9C,IAAKd,GAAae,EAAczB,IAC9B,MAAM,IAAI10C,MAAM,8BAA8Bi1C,GAASkB,MAEzD,OAAO,IAAIV,GAAkBf,GAAYwB,GAO7C,IAAKz2C,MAAMC,QAAQw2C,GACjB,MAAM,IAAIl2C,MAAM,oDAGlB,GAAuB,IAAnBk2C,EAAQ56C,OACV,MAAM,IAAI0E,MAAM,oBAGlB,GAA0B,iBAAfk2C,EAAQ,GACjB,OAyqBJ,SAA6BA,EAASG,EAAY9e,GAChD,MAAMqe,EAAWM,EAAQ,GAEnBI,EAASC,GAAQX,GACvB,IAAKU,EACH,MAAM,IAAIt2C,MAAM,qBAAqB41C,KAEvC,OAAOU,EAAOJ,EAASG,EAAY9e,EACrC,CAjrBWif,CAAoBN,EAASC,EAAc5e,GAGpD,IAAK,MAAM90B,KAAQyzC,EACjB,GAAoB,iBAATzzC,EACT,MAAM,IAAIzC,MAAM,gCAIpB,GAAIu1C,GAAOY,EAActB,IAAW,CAClC,GAAuB,IAAnBqB,EAAQ56C,OACV,MAAM,IAAI0E,MACR,mDAAmDk2C,EAAQ56C,UAG/D,OAAO,IAAIm6C,GAAkBZ,GAAUqB,EACzC,CAEA,GAAIX,GAAOY,EAAcxB,IAAY,CACnC,GAAuB,IAAnBuB,EAAQ56C,OACV,OAAO,IAAIm6C,GAAkBd,GAAW,IAAIuB,EAAS,IAEvD,GAAuB,IAAnBA,EAAQ56C,OACV,OAAO,IAAIm6C,GAAkBd,GAAWuB,GAE1C,MAAM,IAAIl2C,MACR,uDAAuDk2C,EAAQ56C,SAEnE,CAEA,IAAK85C,GAAae,EAAcvB,IAC9B,MAAM,IAAI50C,MACR,yCAAyCi1C,GAASkB,MAItD,OAAO,IAAIV,GAAkBb,GAAiBsB,EAChD,CAKO,MAAMO,GACN,MADMA,GAEN,MAFMA,GAGH,SAHGA,GAIG,gBAJHA,GAKC,cALDA,GAMN,MANMA,GAON,MAPMA,GAQN,IARMA,GASC,aATDA,GAUL,OAVKA,GAWL,OAXKA,GAYJ,KAZIA,GAaD,KAbCA,GAcE,IAdFA,GAeW,KAfXA,GAgBD,IAhBCA,GAiBQ,KAjBRA,GAkBD,IAlBCA,GAmBH,IAnBGA,GAoBN,IApBMA,GAqBD,IArBCA,GAsBJ,QAtBIA,GAuBN,IAvBMA,GAwBN,IAxBMA,GAyBN,MAzBMA,GA0BJ,QA1BIA,GA2BL,OA3BKA,GA4BJ,QA5BIA,GA6BN,MA7BMA,GA8BN,MA9BMA,GA+BL,OA/BKA,GAgCL,OAhCKA,GAiCJ,QAjCIA,GAkCF,UAlCEA,GAmCE,cAnCFA,GAoCD,WApCCA,GAqCL,OArCKA,GAsCP,KAtCOA,GAuCH,SAvCGA,GAwCH,SAxCGA,GAyCJ,QAzCIA,GA0CJ,QA1CIA,GA2CP,KA3COA,GA4CL,OA5CKA,GA6CF,UA7CEA,GA8CD,YA9CCA,GA+CN,MAYDF,GAAU,CACd,CAACE,IAAUC,GAA2BC,GAAa,EAAGluC,KAAWmuC,IACjE,CAACH,IAAUC,GAA2BC,GAAa,EAAG,IA0MxD,SAAqBT,EAASG,EAAY9e,GACxC,MAAMuZ,EAAOoF,EAAQ,GACrB,GAAoB,iBAATpF,EACT,MAAM,IAAI9wC,MAAM,gDAIlB,OAFAu3B,EAAQue,UAAUhb,IAAIgW,GAEf,CAAC,IAAI2E,GAAkBf,GAAY5D,GAC5C,IAjNE,CAAC2F,IAAUC,GAA2BC,GAAa,EAAGluC,KAAWmuC,IACjE,CAACH,IAASC,IAqNZ,SAAuBR,EAASG,EAAY9e,GAC1CA,EAAQwe,WAAY,CACtB,GAvNsDc,IACpD,CAACJ,IAAaC,GACZC,GAAa,EAAGluC,KAChBquC,GAAepC,KAEjB,CAAC+B,IAAmBC,IAuNtB,SAA0BR,EAASG,EAAY9e,GAC7CA,EAAQye,cAAe,CACzB,GAzNmEa,IACjE,CAACJ,IAAiBC,GAA2BG,IAC7C,CAACJ,IAAiBC,GAA2BK,GAAcF,IAC3D,CAACJ,IAAWC,GAA2BK,GAAcF,IACrD,CAACJ,IAAWC,GAA2BK,GAAcF,IACrD,CAACJ,IAAUC,GACTC,GAAa,EAAGluC,KAChBquC,GAAetC,KAEjB,CAACiC,IAAUC,GACTC,GAAa,EAAGluC,KAChBquC,GAAetC,KAEjB,CAACiC,IAAUC,GACTC,GAAa,EAAG,GAChBG,GAAetC,KAEjB,CAACiC,IAAYC,GACXC,GAAa,EAAG,GAChBG,GAAehC,KAEjB,CAAC2B,IAAeC,GACdC,GAAa,EAAG,GAChBG,GAAehC,KAEjB,CAAC2B,IAAkBC,GACjBC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAA2BC,GAC1BC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAeC,GACdC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAwBC,GACvBC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAeC,GACdC,GAAa,EAAGluC,KAChBuuC,IAEF,CAACP,IAAeC,GACdC,GAAa,EAAGluC,KAChBuuC,IAEF,CAACP,IAAaC,GACZC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAUC,GACTC,GAAa,EAAGluC,KAChBquC,GAAerC,KAEjB,CAACgC,IAAeC,GACdC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAYC,GACXC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAUC,GACTC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAUC,GACTC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAUC,GACTC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAYC,GACXC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAWC,GACVC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAYC,GACXC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAUC,GACTC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAUC,GACTC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAWC,GACVC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAWC,GACVC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAYC,GACXC,GAAa,EAAGluC,KAChBwuC,IA8NJ,SAAuBf,EAASG,EAAY9e,GAC1C,MAAM2f,EAAYhB,EAAQ56C,OAAS,EAE7B67C,EAAYzC,GAAaD,GAAaD,GAEtC56B,EAAQ,GAAMs8B,EAAQ,GAAIiB,EAAW5f,GAErC6f,EAAW,GAAMlB,EAAQA,EAAQ56C,OAAS,GAAI+6C,EAAY9e,GAE1DrlB,EAAO,IAAIzS,MAAMy3C,EAAY,GACnC,IAAK,IAAI37C,EAAI,EAAGA,EAAI27C,EAAY,EAAG37C,GAAK,EAAG,CACzC,IACE,MAAMie,EAAQ,GAAM08B,EAAQ36C,EAAI,GAAIqe,EAAMld,KAAM66B,GAChDrlB,EAAK3W,GAAKie,CACZ,CAAE,MAAOtd,GACP,MAAM,IAAI8D,MACR,4BAA4BzE,EAAI,0BAA0BW,EAAIm7C,UAElE,CACA,IACE,MAAMx9B,EAAS,GAAMq8B,EAAQ36C,EAAI,GAAI67C,EAAS16C,KAAM66B,GACpDrlB,EAAK3W,EAAI,GAAKse,CAChB,CAAE,MAAO3d,GACP,MAAM,IAAI8D,MACR,4BAA4BzE,EAAI,0BAA0BW,EAAIm7C,UAElE,CACF,CAEA,MAAO,CAACz9B,KAAU1H,EAAMklC,EAC1B,IAzPE,CAACX,IAAcC,GACbC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAkBC,GACjBC,GAAa,EAAGluC,KAChBwuC,IAwPJ,SAA6Bf,EAASG,EAAY9e,GAChD,MAAM+f,EAAoBpB,EAAQ,GAIlC,IAAItC,EACJ,OAAQ0D,EAAkB,IACxB,IAAK,SACH1D,EAAO,EACP,MACF,IAAK,cACH,MAAM54C,EAAIs8C,EAAkB,GAC5B,GAAiB,iBAANt8C,GAAkBA,GAAK,EAChC,MAAM,IAAIgF,MAEN,6DAASu3C,KAAKC,UAAUx8C,cAG9B44C,EAAO54C,EACP,MACF,QACE,MAAM,IAAIgF,MACR,+BAA+Bu3C,KAAKC,UAAUF,MAIpD,MAAMG,EAAgB,IAAIhC,GAAkBhB,GAAYb,GAExD,IAAIh6B,EACJ,IACEA,EAAQ,GAAMs8B,EAAQ,GAAIzB,GAAYld,EACxC,CAAE,MAAOr7B,GACP,MAAM,IAAI8D,MACR,yDAAyD9D,EAAIm7C,UAEjE,CAEA,MAAMnlC,EAAO,IAAIzS,MAAMy2C,EAAQ56C,OAAS,GACxC,IAAK,IAAIC,EAAI,EAAGA,EAAI2W,EAAK5W,OAAQC,GAAK,EAAG,CACvC,IACE,MAAMm8C,EAAO,GAAMxB,EAAQ36C,EAAI,GAAIk5C,GAAYld,GAC/CrlB,EAAK3W,GAAKm8C,CACZ,CAAE,MAAOx7C,GACP,MAAM,IAAI8D,MACR,4BAA4BzE,EAAI,iCAAiCW,EAAIm7C,UAEzE,CACA,IACE,MAAMx9B,EAAS,GAAMq8B,EAAQ36C,EAAI,GAAI86C,EAAY9e,GACjDrlB,EAAK3W,EAAI,GAAKse,CAChB,CAAE,MAAO3d,GACP,MAAM,IAAI8D,MACR,4BAA4BzE,EAAI,iCAAiCW,EAAIm7C,UAEzE,CACF,CAEA,MAAO,CAACI,EAAe79B,KAAU1H,EACnC,IA/SE,CAACukC,IAAWC,GACVC,GAAa,EAAGluC,MAuLpB,SAAoBytC,EAASG,EAAY9e,GACvC,MAAMogB,EAAYzB,EAAQ,GACpB0B,EAAW1B,EAAQ56C,OAAS,EAClC,GAAIs8C,EAAW,GAAM,EACnB,MAAM,IAAI53C,MACR,2CAA2C23C,UAAkBC,YAGnE,IAoHA,SAAsB1B,EAASG,EAAY9e,GACzC,MAAM6f,EAAW,GAAMlB,EAAQA,EAAQ56C,OAAS,GAAI+6C,EAAY9e,GAE1DrlB,EAAO,IAAIzS,MAAMy2C,EAAQ56C,OAAS,GACxC,IAAK,IAAIC,EAAI,EAAGA,EAAI2W,EAAK5W,OAAS,EAAGC,GAAK,EAAG,CAC3C,IACE,MAAMomC,EAAY,GAAMuU,EAAQ36C,EAAI,GAAIi5C,GAAajd,GACrDrlB,EAAK3W,GAAKomC,CACZ,CAAE,MAAOzlC,GACP,MAAM,IAAI8D,MACR,4BAA4BzE,yBAAyBW,EAAIm7C,UAE7D,CACA,IACE,MAAMx9B,EAAS,GAAMq8B,EAAQ36C,EAAI,GAAI67C,EAAS16C,KAAM66B,GACpDrlB,EAAK3W,EAAI,GAAKse,CAChB,CAAE,MAAO3d,GACP,MAAM,IAAI8D,MACR,4BAA4BzE,EAAI,yBAAyBW,EAAIm7C,UAEjE,CACF,CAGA,OADAnlC,EAAKA,EAAK5W,OAAS,GAAK87C,EACjBllC,CACT,IAxUE,CAACukC,IAASC,GAA2BC,GAAa,EAAG,IA6UvD,SAAoBT,EAASG,EAAY9e,GACvC,IASIsgB,EATAC,EAAW5B,EAAQ,GACvB,IAAKz2C,MAAMC,QAAQo4C,GACjB,MAAM,IAAI93C,MACR,8DAOJ,GAA2B,iBAAhB83C,EAAS,GAAiB,CACnC,GAAoB,YAAhBA,EAAS,GACX,MAAM,IAAI93C,MACR,oHAGJ,IAAKP,MAAMC,QAAQo4C,EAAS,IAC1B,MAAM,IAAI93C,MACR,sFAGJ83C,EAAWA,EAAS,GACpBD,EAAanD,EACf,MACEmD,EAAapD,GAGf,MAAMviC,EAAO,IAAIzS,MAAMq4C,EAASx8C,QAChC,IAAK,IAAIC,EAAI,EAAGA,EAAI2W,EAAK5W,OAAQC,IAC/B,IACE,MAAM42C,EAAM,GAAM2F,EAASv8C,GAAIs8C,EAAYtgB,GAC3CrlB,EAAK3W,GAAK42C,CACZ,CAAE,MAAOj2C,GACP,MAAM,IAAI8D,MACR,iCAAiCzE,0BAA0BW,EAAIm7C,UAEnE,CAIF,MAAO,CADQ,GAAMnB,EAAQ,GAAI2B,EAAYtgB,MAC1BrlB,EACrB,IAtXE,CAACukC,IAAaC,GACZC,GAAa,EAAGluC,KAChBquC,GAAehC,KAEjB,CAAC2B,IAAaC,GACZC,GAAa,EAAGluC,KAChBquC,GAAehC,KAEjB,CAAC2B,IAAYC,GACXC,GAAa,EAAGluC,KAChBquC,GAAerC,KAEjB,CAACgC,IAAYC,GACXC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAWC,GACVC,GAAa,EAAG,GAChBG,GAAerC,KAEjB,CAACgC,IAAcC,GACbC,GAAa,EAAG,IAsWpB,SAAyBT,EAASG,EAAY9e,GAC5C,IAAI94B,EACJ,IACEA,EAAQ,GAAMy3C,EAAQ,GAAIzB,GAAYld,EACxC,CAAE,MAAOr7B,GACP,MAAM,IAAI8D,MACR,yDAAyD9D,EAAIm7C,UAEjE,CACA,MAAMU,EAAS7B,EAAQ,GACvB,IAAKz2C,MAAMC,QAAQq4C,GACjB,MAAM,IAAI/3C,MAAM,mDAElB,MAAMg4C,EAAe,IAAIv4C,MAAMs4C,EAAOz8C,QACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIy8C,EAAa18C,OAAQC,IAAK,CAC5C,IAAI43C,EACJ,IACEA,EAAQ,GAAM4E,EAAOx8C,GAAIo5C,GAAWpd,EACtC,CAAE,MAAOr7B,GACP,MAAM,IAAI8D,MACR,kCAAkCzE,4BAA4BW,EAAIm7C,UAEtE,CACA,KAAMlE,aAAiBsC,IACrB,MAAM,IAAIz1C,MACR,8BAA8BzE,6BAGlCy8C,EAAaz8C,GAAK43C,CACpB,CACA,MAAO,CAAC10C,KAAUu5C,EACpB,IAlYE,CAACvB,IAAeC,GACdC,GAAa,EAAG,GAChBG,GAAetC,GAAcC,GAAaC,GAAaC,MAc3D,SAASiC,GAAYV,EAASG,EAAY9e,GACxC,MAAM2f,EAAYhB,EAAQ56C,OAAS,EAC7B4W,EAAO,IAAIzS,MAAMy3C,GACvB,IAAK,IAAI37C,EAAI,EAAGA,EAAI27C,IAAa37C,EAAG,CAClC,MAAMzB,EAAMo8C,EAAQ36C,EAAI,GACxB,cAAezB,GACb,IAAK,SACHoY,EAAK3W,GAAK,IAAIk6C,GAAkBhB,GAAY36C,GAC5C,MAEF,IAAK,SACHoY,EAAK3W,GAAK,IAAIk6C,GAAkBf,GAAY56C,GAC5C,MAEF,QACE,MAAM,IAAIkG,MACR,yEAAyElG,KAIrE,IAANyB,GACFg8B,EAAQjM,WAAWwP,IAAI16B,OAAOtG,GAElC,CACA,OAAOoY,CACT,CAgCA,SAAS6kC,GAAab,EAASG,EAAY9e,GACzCA,EAAQ0e,UAAW,CACrB,CAKA,SAASY,GAAWX,EAASG,EAAY9e,GACvC,MAAMogB,EAAYzB,EAAQ,GAC1B,GAAuB,IAAnBA,EAAQ56C,OACV,MAAM,IAAI0E,MAAM,6BAA6B23C,eAE/C,MAAO,EACT,CAOA,SAAShB,GAAasB,EAASC,GAC7B,OAAO,SAAUhC,EAASG,EAAY9e,GACpC,MAAMogB,EAAYzB,EAAQ,GACpB0B,EAAW1B,EAAQ56C,OAAS,EAClC,GAAI28C,IAAYC,GACd,GAAIN,IAAaK,EAEf,MAAM,IAAIj4C,MACR,YAAYi4C,aAFa,IAAZA,EAAgB,GAAK,WAEWN,UAAkBC,UAG9D,GAAIA,EAAWK,GAAWL,EAAWM,EAK1C,MAAM,IAAIl4C,MACR,YAJAk4C,IAAYzvC,IACR,GAAGwvC,YACH,GAAGA,QAAcC,qBAEcP,UAAkBC,IAG3D,CACF,CAKA,SAASZ,GAAqBd,EAASG,EAAY9e,GACjD,MAAMqgB,EAAW1B,EAAQ56C,OAAS,EAI5B4W,EAAO,IAAIzS,MAAMm4C,GACvB,IAAK,IAAIr8C,EAAI,EAAGA,EAAIq8C,IAAYr8C,EAAG,CACjC,MAAM48C,EAAa,GAAMjC,EAAQ36C,EAAI,GAAI86C,EAAY9e,GACrDrlB,EAAK3W,GAAK48C,CACZ,CACA,OAAOjmC,CACT,CAMA,SAAS4kC,GAAesB,GACtB,OAAO,SAAUlC,EAASG,EAAY9e,GACpC,MAAMqgB,EAAW1B,EAAQ56C,OAAS,EAI5B4W,EAAO,IAAIzS,MAAMm4C,GACvB,IAAK,IAAIr8C,EAAI,EAAGA,EAAIq8C,IAAYr8C,EAAG,CACjC,MAAM48C,EAAa,GAAMjC,EAAQ36C,EAAI,GAAI68C,EAAS7gB,GAClDrlB,EAAK3W,GAAK48C,CACZ,CACA,OAAOjmC,CACT,CACF,CAkBA,SAAS+kC,GAAYf,EAASG,EAAY9e,GACxC,MAAMogB,EAAYzB,EAAQ,GACpB0B,EAAW1B,EAAQ56C,OAAS,EAClC,GAAIs8C,EAAW,GAAM,EACnB,MAAM,IAAI53C,MACR,sDAAsD23C,UAAkBC,YAG9E,CA0NA,SAASlB,MAA8B2B,GACrC,OAAO,SAAUnC,EAASG,EAAY9e,GACpC,MAAMqe,EAAWM,EAAQ,GAKzB,IAAIhkC,EACJ,IAAK,IAAI3W,EAAI,EAAGA,EAAI88C,EAAW/8C,OAAQC,IAAK,CAC1C,MAAMg4C,EAAS8E,EAAW98C,GAAG26C,EAASG,EAAY9e,GAClD,GAAIh8B,GAAK88C,EAAW/8C,OAAS,EAAG,CAC9B,IAAKi4C,EACH,MAAM,IAAIvzC,MACR,8DAGJkS,EAAOqhC,CACT,CACF,CACA,OAAO,IAAIoC,GAAeU,EAAYT,KAAa1jC,EACrD,CACF,CAuBO,SAASomC,GAAoBzkB,GAClC,IAAKA,EACH,MAAO,GAET,MAAMn3B,EAAOm3B,EAASpT,UACtB,OAAQ/jB,GACN,IAAK,QACL,IAAK,aACL,IAAK,UACH,OAAOA,EACT,IAAK,aACL,IAAK,kBACL,IAAK,eACH,OAAsDA,EAAK67C,UAAU,GACvE,IAAK,SACH,MAAO,UACT,IAAK,qBACH,OAAOD,GAC0D,EAE7DE,gBAAgB,IAEtB,QACE,MAAO,GAEb,CC18BO,SAASC,GAAgBvC,EAASx5C,EAAM66B,GAE7C,OAAOmhB,GADY,GAAMxC,EAASx5C,EAAM66B,GACHA,EACvC,CAOA,SAASmhB,GAAkBP,EAAY5gB,GACrC,GAAI4gB,aAAsB1C,GAAmB,CAE3C,GAAI0C,EAAWz7C,OAASi4C,IAAyC,iBAArBwD,EAAWl8C,MAAoB,CACzE,MAAM08C,EAAatF,GAAW8E,EAAWl8C,OACzC,OAAO,WACL,OAAO08C,CACT,CACF,CACA,OAAO,WACL,OAAOR,EAAWl8C,KACpB,CACF,CACA,MAAM25C,EAAWuC,EAAWvC,SAC5B,OAAQA,GACN,KAAKa,GACL,KAAKA,GACL,KAAKA,GACH,OAmFN,SAAoC0B,EAAY5gB,GAC9C,MAAM76B,EAAOy7C,EAAWvC,SAClBt6C,EAAS68C,EAAWjmC,KAAK5W,OAEzB4W,EAAO,IAAIzS,MAAMnE,GACvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAUC,EAC5B2W,EAAK3W,GAAKm9C,GAAkBP,EAAWjmC,KAAK3W,GAAIg8B,GAElD,OAAQ76B,GACN,KAAK+5C,GACH,OAAQlf,IACN,IAAK,IAAIh8B,EAAI,EAAGA,EAAID,IAAUC,EAAG,CAC/B,MAAMU,EAAQiW,EAAK3W,GAAGg8B,GACtB,GAAI,MAAOt7B,EACT,OAAOA,CAEX,CACA,MAAM,IAAI+D,MAAM,4CAA4C,EAGhE,KAAKy2C,GACL,KAAKA,GACH,OAAQlf,IACN,IAAK,IAAIh8B,EAAI,EAAGA,EAAID,IAAUC,EAAG,CAC/B,MAAMU,EAAQiW,EAAK3W,GAAGg8B,GACtB,UAAWt7B,IAAUS,EACnB,OAAOT,CAEX,CACA,MAAM,IAAI+D,MAAM,sCAAsCtD,IAAO,EAGjE,QACE,MAAM,IAAIsD,MAAM,kCAAkCtD,KAGxD,CAvHak8C,CAA2BT,EAAY5gB,GAEhD,KAAKkf,GACL,KAAKA,GACL,KAAKA,GACH,OAyHN,SAAmC0B,GACjC,MACMrH,EADmDqH,EAAWjmC,KAAK,GACjB,MACxD,OAAQimC,EAAWvC,UACjB,KAAKa,GACH,OAAQlf,IACN,MAAMrlB,EAAOimC,EAAWjmC,KACxB,IAAIjW,EAAQs7B,EAAQjM,WAAWwlB,GAC/B,IAAK,IAAIv1C,EAAI,EAAG2C,EAAKgU,EAAK5W,OAAQC,EAAI2C,IAAM3C,EAG1CU,EAAQA,EAFgDiW,EAAK3W,GACA,OAG/D,OAAOU,CAAK,EAGhB,KAAKw6C,GACH,OAAQlf,GAAYA,EAAQue,UAAUhF,GAExC,KAAK2F,GACH,OAAQlf,IACN,MAAMrlB,EAAOimC,EAAWjmC,KACxB,KAAM4+B,KAAQvZ,EAAQjM,YACpB,OAAO,EAET,IAAIrvB,EAAQs7B,EAAQjM,WAAWwlB,GAC/B,IAAK,IAAIv1C,EAAI,EAAG2C,EAAKgU,EAAK5W,OAAQC,EAAI2C,IAAM3C,EAAG,CAC7C,MACMzB,EADkDoY,EAAK3W,GACA,MAC7D,IAAKU,IAAUjC,OAAO6+C,OAAO58C,EAAOnC,GAClC,OAAO,EAETmC,EAAQA,EAAMnC,EAChB,CACA,OAAO,CAAI,EAGf,QACE,MAAM,IAAIkG,MAAM,iCAAiCm4C,EAAWvC,YAGlE,CAlKakD,CAA0BX,GAEnC,ID2SE,KC1SA,OAAQ5gB,GAAYA,EAAQwe,UAE9B,KAAKU,GACH,OAAQlf,GAAYA,EAAQye,aAE9B,KAAKS,GAAY,CACf,MAAMvkC,EAAOimC,EAAWjmC,KAAKhP,KAAKib,GAAMu6B,GAAkBv6B,EAAGoZ,KAC7D,OAAQA,GACN,GAAGwhB,UAAU7mC,EAAKhP,KAAKivC,GAAQA,EAAI5a,GAAS6e,aAChD,CACA,KAAKK,GACH,OAAQlf,GAAYA,EAAQ3pB,WAE9B,KAAK6oC,GACL,KAAKA,GACL,KAAKA,GACL,KAAKA,GACL,IDsPG,ICrPD,OAsLN,SAAkC0B,EAAY5gB,GAC5C,MAAMyhB,EAAKb,EAAWvC,SAChBt6C,EAAS68C,EAAWjmC,KAAK5W,OAEzB4W,EAAO,IAAIzS,MAAMnE,GACvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAUC,EAC5B2W,EAAK3W,GAAKm9C,GAAkBP,EAAWjmC,KAAK3W,GAAIg8B,GAElD,OAAQyhB,GACN,KAAKvC,GACH,OAAQlf,IACN,IAAK,IAAIh8B,EAAI,EAAGA,EAAID,IAAUC,EAC5B,GAAI2W,EAAK3W,GAAGg8B,GACV,OAAO,EAGX,OAAO,CAAK,EAGhB,KAAKkf,GACH,OAAQlf,IACN,IAAK,IAAIh8B,EAAI,EAAGA,EAAID,IAAUC,EAC5B,IAAK2W,EAAK3W,GAAGg8B,GACX,OAAO,EAGX,OAAO,CAAI,EAGf,KAAKkf,GACH,OAAQlf,IACN,MAAMt7B,EAAQiW,EAAK,GAAGqlB,GAChBxrB,EAAMmG,EAAK,GAAGqlB,GACdvrB,EAAMkG,EAAK,GAAGqlB,GACpB,OAAOt7B,GAAS8P,GAAO9P,GAAS+P,CAAG,EAGvC,KAAKyqC,GACH,OAAQlf,IACN,MAAMt7B,EAAQiW,EAAK,GAAGqlB,GACtB,IAAK,IAAIh8B,EAAI,EAAGA,EAAID,IAAUC,EAC5B,GAAIU,IAAUiW,EAAK3W,GAAGg8B,GACpB,OAAO,EAGX,OAAO,CAAK,EAGhB,IDeG,ICdD,OAAQA,IAAarlB,EAAK,GAAGqlB,GAE/B,QACE,MAAM,IAAIv3B,MAAM,gCAAgCg5C,KAGtD,CA7OaC,CAAyBd,EAAY5gB,GAE9C,KAAKkf,GACL,KAAKA,GACL,IDyPQ,ICxPR,KAAKA,GACL,IDqPW,ICpPX,KAAKA,GACH,OA4IN,SAAqC0B,EAAY5gB,GAC/C,MAAMyhB,EAAKb,EAAWvC,SAChB/S,EAAO6V,GAAkBP,EAAWjmC,KAAK,GAAIqlB,GAC7CrR,EAAQwyB,GAAkBP,EAAWjmC,KAAK,GAAIqlB,GACpD,OAAQyhB,GACN,KAAKvC,GACH,OAAQlf,GAAYsL,EAAKtL,KAAarR,EAAMqR,GAE9C,KAAKkf,GACH,OAAQlf,GAAYsL,EAAKtL,KAAarR,EAAMqR,GAE9C,ID8FQ,IC7FN,OAAQA,GAAYsL,EAAKtL,GAAWrR,EAAMqR,GAE5C,KAAKkf,GACH,OAAQlf,GAAYsL,EAAKtL,IAAYrR,EAAMqR,GAE7C,IDsFW,ICrFT,OAAQA,GAAYsL,EAAKtL,GAAWrR,EAAMqR,GAE5C,KAAKkf,GACH,OAAQlf,GAAYsL,EAAKtL,IAAYrR,EAAMqR,GAE7C,QACE,MAAM,IAAIv3B,MAAM,mCAAmCg5C,KAGzD,CAvKaE,CAA4Bf,EAAY5gB,GAEjD,IDqPQ,ICpPR,IDqPM,ICpPN,IDqPG,ICpPH,IDqPQ,ICpPR,KAAKkf,GACL,IDqPG,ICpPH,IDqPG,ICpPH,KAAKA,GACL,KAAKA,GACL,KAAKA,GACL,KAAKA,GACL,KAAKA,GACL,KAAKA,GACL,KAAKA,GACL,KAAKA,GACH,OA2NN,SAAkC0B,EAAY5gB,GAC5C,MAAMyhB,EAAKb,EAAWvC,SAChBt6C,EAAS68C,EAAWjmC,KAAK5W,OAEzB4W,EAAO,IAAIzS,MAAMnE,GACvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAUC,EAC5B2W,EAAK3W,GAAKm9C,GAAkBP,EAAWjmC,KAAK3W,GAAIg8B,GAElD,OAAQyhB,GACN,IDEQ,ICDN,OAAQzhB,IACN,IAAIt7B,EAAQ,EACZ,IAAK,IAAIV,EAAI,EAAGA,EAAID,IAAUC,EAC5BU,GAASiW,EAAK3W,GAAGg8B,GAEnB,OAAOt7B,CAAK,EAGhB,IDNM,ICOJ,OAAQs7B,GAAYrlB,EAAK,GAAGqlB,GAAWrlB,EAAK,GAAGqlB,GAEjD,IDRG,ICSD,OAAQA,IACN,IAAIt7B,EAAQ,EACZ,IAAK,IAAIV,EAAI,EAAGA,EAAID,IAAUC,EAC5BU,GAASiW,EAAK3W,GAAGg8B,GAEnB,OAAOt7B,CAAK,EAGhB,IDhBQ,ICiBN,OAAQs7B,GAAYrlB,EAAK,GAAGqlB,GAAWrlB,EAAK,GAAGqlB,GAEjD,KAAKkf,GACH,OAAQlf,IACN,MAAMt7B,EAAQiW,EAAK,GAAGqlB,GAChBxrB,EAAMmG,EAAK,GAAGqlB,GACpB,GAAIt7B,EAAQ8P,EACV,OAAOA,EAET,MAAMC,EAAMkG,EAAK,GAAGqlB,GACpB,OAAIt7B,EAAQ+P,EACHA,EAEF/P,CAAK,EAGhB,ID/BG,ICgCD,OAAQs7B,GAAYrlB,EAAK,GAAGqlB,GAAWrlB,EAAK,GAAGqlB,GAEjD,IDjCG,ICkCD,OAAQA,GAAYrvB,KAAKgF,IAAIgF,EAAK,GAAGqlB,GAAUrlB,EAAK,GAAGqlB,IAEzD,KAAKkf,GACH,OAAQlf,GAAYrvB,KAAKC,IAAI+J,EAAK,GAAGqlB,IAEvC,KAAKkf,GACH,OAAQlf,GAAYrvB,KAAKmkB,MAAMna,EAAK,GAAGqlB,IAEzC,KAAKkf,GACH,OAAQlf,GAAYrvB,KAAKkF,KAAK8E,EAAK,GAAGqlB,IAExC,KAAKkf,GACH,OAAQlf,GAAYrvB,KAAKiF,MAAM+E,EAAK,GAAGqlB,IAEzC,KAAKkf,GACH,OAAQlf,GAAYrvB,KAAKuI,IAAIyB,EAAK,GAAGqlB,IAEvC,KAAKkf,GACH,OAAQlf,GAAYrvB,KAAKqI,IAAI2B,EAAK,GAAGqlB,IAEvC,KAAKkf,GACH,OAAe,IAAXn7C,EACMi8B,GAAYrvB,KAAKsS,MAAMtI,EAAK,GAAGqlB,GAAUrlB,EAAK,GAAGqlB,IAEnDA,GAAYrvB,KAAKkW,KAAKlM,EAAK,GAAGqlB,IAExC,KAAKkf,GACH,OAAQlf,GAAYrvB,KAAK4N,KAAK5D,EAAK,GAAGqlB,IAExC,QACE,MAAM,IAAIv3B,MAAM,gCAAgCg5C,KAGtD,CA/SaG,CAAyBhB,EAAY5gB,GAE9C,KAAKkf,GACH,OAmTN,SAA+B0B,EAAY5gB,GACzC,MAAMj8B,EAAS68C,EAAWjmC,KAAK5W,OACzB4W,EAAO,IAAIzS,MAAMnE,GACvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAUC,EAC5B2W,EAAK3W,GAAKm9C,GAAkBP,EAAWjmC,KAAK3W,GAAIg8B,GAElD,OAAQA,IACN,IAAK,IAAIh8B,EAAI,EAAGA,EAAID,EAAS,EAAGC,GAAK,EAEnC,GADkB2W,EAAK3W,GAAGg8B,GAExB,OAAOrlB,EAAK3W,EAAI,GAAGg8B,GAGvB,OAAOrlB,EAAK5W,EAAS,GAAGi8B,EAAQ,CAEpC,CAlUa6hB,CAAsBjB,EAAY5gB,GAE3C,KAAKkf,GACH,OAsUN,SAAgC0B,EAAY5gB,GAC1C,MAAMj8B,EAAS68C,EAAWjmC,KAAK5W,OACzB4W,EAAO,IAAIzS,MAAMnE,GACvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAUC,EAC5B2W,EAAK3W,GAAKm9C,GAAkBP,EAAWjmC,KAAK3W,GAAIg8B,GAElD,OAAQA,IACN,MAAMt7B,EAAQiW,EAAK,GAAGqlB,GACtB,IAAK,IAAIh8B,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/B,GAAIU,IAAUiW,EAAK3W,GAAGg8B,GACpB,OAAOrlB,EAAK3W,EAAI,GAAGg8B,GAGvB,OAAOrlB,EAAK5W,EAAS,GAAGi8B,EAAQ,CAEpC,CArVa8hB,CAAuBlB,EAAY5gB,GAE5C,KAAKkf,GACH,OAyVN,SAAsC0B,EAAY5gB,GAChD,MAAMj8B,EAAS68C,EAAWjmC,KAAK5W,OACzB4W,EAAO,IAAIzS,MAAMnE,GACvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAUC,EAC5B2W,EAAK3W,GAAKm9C,GAAkBP,EAAWjmC,KAAK3W,GAAIg8B,GAElD,OAAQA,IACN,MAAMqc,EAAO1hC,EAAK,GAAGqlB,GACft7B,EAAQiW,EAAK,GAAGqlB,GAEtB,IAAI+hB,EACAC,EACJ,IAAK,IAAIh+C,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAClC,MAAMqe,EAAQ1H,EAAK3W,GAAGg8B,GACtB,IAAI1d,EAAS3H,EAAK3W,EAAI,GAAGg8B,GACzB,MAAMiiB,EAAU/5C,MAAMC,QAAQma,GAI9B,GAHI2/B,IACF3/B,EAASq5B,GAAUr5B,IAEjBD,GAAS3d,EACX,OAAU,IAANV,EACKse,EAEL2/B,EACKC,GACL7F,EACA33C,EACAq9C,EACAC,EACA3/B,EACAC,GAGG6/B,GACL9F,EACA33C,EACAq9C,EACAC,EACA3/B,EACAC,GAGJy/B,EAAgB1/B,EAChB2/B,EAAiB1/B,CACnB,CACA,OAAO0/B,CAAc,CAEzB,CAxYaI,CAA6BxB,EAAY5gB,GAElD,KAAKkf,GACH,OA4YN,SAAkC0B,EAAY5gB,GAC5C,MAAMyhB,EAAKb,EAAWvC,SAChBt6C,EAAS68C,EAAWjmC,KAAK5W,OAEzB4W,EAAO,IAAIzS,MAAMnE,GACvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAUC,EAC5B2W,EAAK3W,GAAKm9C,GAAkBP,EAAWjmC,KAAK3W,GAAIg8B,GAElD,GAAQyhB,IACDvC,GACH,OAAQlf,IACN,MAAMt7B,EAAQiW,EAAK,GAAGqlB,GACtB,OAAI4gB,EAAWjmC,KAAK,GAAGxV,OAASi4C,GACvB,GAAS14C,GAEXA,EAAMm6C,UAAU,EAIzB,MAAM,IAAIp2C,MAAM,gCAAgCg5C,IAGtD,CAlaaY,CAAyBzB,EAAY5gB,GAE9C,QACE,MAAM,IAAIv3B,MAAM,wBAAwB41C,KAU9C,CAgaA,SAAS8D,GAAkB9F,EAAM33C,EAAO49C,EAAQC,EAASC,EAAQC,GAC/D,MAAM9pB,EAAQ6pB,EAASF,EACvB,GAAc,IAAV3pB,EACF,OAAO4pB,EAET,MAAMG,EAAQh+C,EAAQ49C,EAKtB,OAAOC,GAHI,IAATlG,EACIqG,EAAQ/pB,GACPhoB,KAAKgF,IAAI0mC,EAAMqG,GAAS,IAAM/xC,KAAKgF,IAAI0mC,EAAM1jB,GAAS,KAClC8pB,EAAUF,EACvC,CAWA,SAASL,GAAiB7F,EAAM33C,EAAO49C,EAAQK,EAAOH,EAAQI,GAE5D,GAAc,GADAJ,EAASF,EAErB,OAAOK,EAET,MAAME,EAAQhH,GAAW8G,GACnBG,EAAQjH,GAAW+G,GACzB,IAAIG,EAAWD,EAAM,GAAKD,EAAM,GAahC,OAZIE,EAAW,IACbA,GAAY,IACHA,GAAY,MACrBA,GAAY,KASPnG,GJnjBF,SAAoBhB,GACzB,MAAMt5B,EAAS,GAAIo3B,IAAI,GAAMK,IAAI6B,IAEjC,OADAt5B,EAAO,GAAKs5B,EAAM,GACXt5B,CACT,CI+iBmB0gC,CANJ,CACXb,GAAkB9F,EAAM33C,EAAO49C,EAAQO,EAAM,GAAIL,EAAQM,EAAM,IAC/DX,GAAkB9F,EAAM33C,EAAO49C,EAAQO,EAAM,GAAIL,EAAQM,EAAM,IAC/DD,EAAM,GAAKV,GAAkB9F,EAAM33C,EAAO49C,EAAQ,EAAGE,EAAQO,GAC7DZ,GAAkB9F,EAAM33C,EAAO49C,EAAQK,EAAM,GAAIH,EAAQI,EAAM,MAGnE,CC/VO,SAASK,GAAeC,EAAOC,GAIpC,OAHIA,IACFD,EAAMC,IAAMA,GAEPD,EAAMC,KAAO,EAChB,IAAIv+C,SAAQ,CAACE,EAASD,IACpBq+C,EACGn1C,SACAq1C,MAAK,IAAMt+C,EAAQo+C,KACnBG,OAAOz8B,GACNs8B,EAAM3qB,UAAY2qB,EAAM9jB,MAAQt6B,EAAQo+C,GAASr+C,EAAO+hB,OArC7D,SAAcs8B,GACnB,OAAO,IAAIt+C,SAAQ,CAACE,EAASD,KAC3B,SAASy+C,IACPC,IACAz+C,EAAQo+C,EACV,CACA,SAASM,IACPD,IACA1+C,EAAO,IAAI4D,MAAM,oBACnB,CACA,SAAS86C,IACPL,EAAMp8C,oBAAoB,OAAQw8C,GAClCJ,EAAMp8C,oBAAoB,QAAS08C,EACrC,CACAN,EAAMr9C,iBAAiB,OAAQy9C,GAC/BJ,EAAMr9C,iBAAiB,QAAS29C,EAGhC,GAEJ,CAoBMpvC,CAAK8uC,EACX,CAWO,SAASn1C,GAAOm1C,EAAOC,GAI5B,OAHIA,IACFD,EAAMC,IAAMA,GAEPD,EAAMC,KAAO,GAAgBn1C,EAChCk1C,EACGn1C,SACAq1C,MAAK,IAAMn1C,kBAAkBi1C,KAC7BG,OAAOz8B,IACN,GAAIs8B,EAAM3qB,UAAY2qB,EAAM9jB,MAC1B,OAAO8jB,EAET,MAAMt8B,CAAC,IAEXq8B,GAAeC,EACrB,CAEA,SA1RA,cAA2B,EAQzB,WAAAhgD,CAAY+S,EAAQI,EAAYotC,EAAYC,GAC1Cl+C,QAMArC,KAAK8S,OAASA,EAMd9S,KAAKwgD,YAAcF,EAMnBtgD,KAAKkT,WAAaA,EAMlBlT,KAAK0Q,MACsB,mBAAlB6vC,ECpFL,EDoFsDA,EAM1DvgD,KAAKygD,OAAS,KAMdzgD,KAAK0gD,OAAkC,mBAAlBH,EAA+BA,EAAgB,IACtE,CAKA,OAAA37C,GACE5E,KAAKgD,cAAc,EACrB,CAKA,SAAA6V,GACE,OAAO7Y,KAAK8S,MACd,CAKA,QAAA6tC,GACE,OAAO3gD,KAAKygD,MACd,CAKA,aAAAG,GACE,OAAO5gD,KAAKwgD,WACd,CAKA,aAAAtsB,GACE,OAA8Bl0B,KAAe,UAC/C,CAKA,QAAA2Q,GACE,OAAO3Q,KAAK0Q,KACd,CAKA,IAAAO,GACE,GCjJI,GDiJAjR,KAAK0Q,OACH1Q,KAAK0gD,OAAQ,CACf1gD,KAAK0Q,MClJF,EDmJH1Q,KAAK4E,UACL,MAAMsO,EAAalT,KAAKk0B,gBAClB2sB,EAAoB97C,MAAMC,QAAQkO,GACpCA,EAAW,GACXA,EACJ7R,GAAU,IACRrB,KAAK0gD,OACH1gD,KAAK6Y,YACLgoC,EACA7gD,KAAK4gD,mBAGNX,MAAMF,IACD,UAAWA,IACb//C,KAAKygD,OAASV,EAAMA,OAElB,WAAYA,IACd//C,KAAK8S,OAASitC,EAAMjtC,QAElB,eAAgBitC,IAClB//C,KAAKkT,WAAa6sC,EAAM7sC,YAEtB,eAAgB6sC,IAClB//C,KAAKwgD,YAAcT,EAAMO,aAGzBP,aAAiBe,kBAChBj2C,GAAuBk1C,aAAiBgB,aACzChB,aAAiBiB,mBACjBjB,aAAiBkB,oBAEjBjhD,KAAKygD,OAASV,GAEhB//C,KAAK0Q,MCnLP,CDmLgC,IAE/BwvC,OAAOgB,IACNlhD,KAAK0Q,MCrLR,EDsLG+G,QAAQypC,MAAMA,EAAM,IAErBC,SAAQ,IAAMnhD,KAAK4E,WACxB,CAEJ,CAKA,QAAAw8C,CAASrB,GACP//C,KAAKygD,OAASV,CAChB,CAKA,aAAAnsB,CAAc1gB,GACZlT,KAAKkT,WAAaA,CACpB,GElEK,SAASmuC,GAAYrB,EAAKsB,EAAa7I,GAE5C,OAAO6I,EAAc,IAAMtB,EAAM,KADbvH,EAAQiB,GAAQjB,GAAS,OAE/C,CAEA,MAOa8I,GAAS,IAnJtB,MACE,WAAAxhD,GAKEC,KAAKwhD,OAAS,CAAC,EAMfxhD,KAAKyhD,cAAgB,CAAC,EAMtBzhD,KAAK0hD,WAAa,EAMlB1hD,KAAK2hD,cAAgB,IACvB,CAKA,KAAA9/C,GACE7B,KAAKwhD,OAAS,CAAC,EACfxhD,KAAKyhD,cAAgB,CAAC,EACtBzhD,KAAK0hD,WAAa,CACpB,CAKA,cAAAE,GACE,OAAO5hD,KAAK0hD,WAAa1hD,KAAK2hD,aAChC,CAKA,MAAAE,GACE,GAAI7hD,KAAK4hD,iBAAkB,CACzB,IAAI/gD,EAAI,EACR,IAAK,MAAMzB,KAAOY,KAAKwhD,OAAQ,CAC7B,MAAMM,EAAY9hD,KAAKwhD,OAAOpiD,GACnB,EAANyB,KAAmBihD,EAAUj+C,uBACzB7D,KAAKwhD,OAAOpiD,UACZY,KAAKyhD,cAAcriD,KACxBY,KAAK0hD,WAEX,CACF,CACF,CAQA,GAAAjiD,CAAIugD,EAAKsB,EAAa7I,GACpB,MAAMr5C,EAAMiiD,GAAYrB,EAAKsB,EAAa7I,GAC1C,OAAOr5C,KAAOY,KAAKwhD,OAASxhD,KAAKwhD,OAAOpiD,GAAO,IACjD,CAQA,UAAA2iD,CAAW/B,EAAKsB,EAAa7I,GAC3B,MAAMr5C,EAAMiiD,GAAYrB,EAAKsB,EAAa7I,GAC1C,OAAOr5C,KAAOY,KAAKyhD,cAAgBzhD,KAAKyhD,cAAcriD,GAAO,IAC/D,CASA,GAAAsH,CAAIs5C,EAAKsB,EAAa7I,EAAOqJ,EAAWE,GACtC,MAAM5iD,EAAMiiD,GAAYrB,EAAKsB,EAAa7I,GACpC/U,EAAStkC,KAAOY,KAAKwhD,OAC3BxhD,KAAKwhD,OAAOpiD,GAAO0iD,EACfE,IDhGA,ICiGEF,EAAUG,iBACZH,EAAU7wC,ODjGP,ICmGD6wC,EAAUG,gBACZH,EAAUI,QAAQjC,MAAK,KACrBjgD,KAAKyhD,cAAcriD,GAAOu9B,KAA2BwlB,cACnDL,EAAUnB,SAAS,GACnB,SACD,IAGH3gD,KAAKyhD,cAAcriD,GAAOu9B,KAA2BwlB,cACnDL,EAAUnB,SAAS,GACnB,WAIDjd,KACD1jC,KAAK0hD,UAEX,CASA,OAAAU,CAAQC,GACNriD,KAAK2hD,cAAgBU,EACrBriD,KAAK6hD,QACP,GC1HF,IAAIS,GAAqB,KAEzB,MAAMC,WAAkB,EAQtB,WAAAxiD,CAAYggD,EAAOC,EAAKsB,EAAakB,EAAY/J,GAC/Cp2C,QAMArC,KAAKyiD,mBAAqB,KAM1BziD,KAAKygD,OAASV,EAMd//C,KAAK0iD,aAAepB,EAMpBthD,KAAK2iD,QAAU,CAAC,EAMhB3iD,KAAK4iD,OAASnK,EAMdz4C,KAAK6iD,iBAA6B7jD,IAAfwjD,EFtDf,EEsD4DA,EAMhExiD,KAAK8iD,MACH/C,GAASA,EAAM9jB,OAAS8jB,EAAM7jB,OAAS,CAAC6jB,EAAM9jB,MAAO8jB,EAAM7jB,QAAU,KAMvEl8B,KAAK+iD,KAAO/C,EAKZhgD,KAAKgjD,SAMLhjD,KAAKijD,OAAS,IAChB,CAKA,gBAAAC,GACEljD,KAAKygD,OAAS,IAAI91C,MACQ,OAAtB3K,KAAK0iD,eACP1iD,KAAKygD,OAAOa,YAActhD,KAAK0iD,aAEnC,CAMA,UAAAS,GACE,QAAsBnkD,IAAlBgB,KAAKgjD,UF9FH,IE8F6BhjD,KAAK6iD,YAAmC,CACpEP,KACHA,GAAqBtmB,GAAsB,EAAG,OAAGh9B,EAAW,CAC1DokD,oBAAoB,KAGxBd,GAAmBe,UAAUrjD,KAAKygD,OAAQ,EAAG,GAC7C,IACE6B,GAAmBgB,aAAa,EAAG,EAAG,EAAG,GACzCtjD,KAAKgjD,UAAW,CAClB,CAAE,MACAV,GAAqB,KACrBtiD,KAAKgjD,UAAW,CAClB,CACF,CACA,OAAyB,IAAlBhjD,KAAKgjD,QACd,CAKA,oBAAAO,GACEvjD,KAAKgD,cAAc,EACrB,CAKA,iBAAAwgD,GACExjD,KAAK6iD,YF1HA,EE2HL7iD,KAAKujD,sBACP,CAKA,gBAAAE,GACEzjD,KAAK6iD,YFnIC,EEoIN7iD,KAAK8iD,MAAQ,CAAC9iD,KAAKygD,OAAOxkB,MAAOj8B,KAAKygD,OAAOvkB,QAC7Cl8B,KAAKujD,sBACP,CAMA,QAAA5C,CAASL,GAKP,OAJKtgD,KAAKygD,QACRzgD,KAAKkjD,mBAEPljD,KAAK0jD,cAAcpD,GACZtgD,KAAK2iD,QAAQrC,GAActgD,KAAK2iD,QAAQrC,GAActgD,KAAKygD,MACpE,CAMA,aAAAG,CAAcN,GAEZ,OADAtgD,KAAK0jD,cAAcpD,GACZtgD,KAAK2iD,QAAQrC,GAAcA,EAAa,CACjD,CAKA,aAAA2B,GACE,OAAOjiD,KAAK6iD,WACd,CAKA,oBAAAc,GAIE,GAHK3jD,KAAKygD,QACRzgD,KAAKkjD,oBAEFljD,KAAKyiD,mBACR,GAAIziD,KAAKmjD,aAAc,CACrB,MAAMlnB,EAAQj8B,KAAK8iD,MAAM,GACnB5mB,EAASl8B,KAAK8iD,MAAM,GACpBjmB,EAAUb,GAAsBC,EAAOC,GAC7CW,EAAQ+mB,SAAS,EAAG,EAAG3nB,EAAOC,GAC9Bl8B,KAAKyiD,mBAAqB5lB,EAAQR,MACpC,MACEr8B,KAAKyiD,mBAAqBziD,KAAKygD,OAGnC,OAAOzgD,KAAKyiD,kBACd,CAMA,OAAA9a,GACE,OAAO3nC,KAAK8iD,KACd,CAKA,MAAAe,GACE,OAAO7jD,KAAK+iD,IACd,CAKA,IAAA9xC,GACE,GF9MI,IE8MAjR,KAAK6iD,YAAT,CAGK7iD,KAAKygD,QACRzgD,KAAKkjD,mBAGPljD,KAAK6iD,YFpNE,EEqNP,SACoB7jD,IAAdgB,KAAK+iD,OAC0B/iD,KAAW,OAAEggD,IAAMhgD,KAAK+iD,KAE7D,CAAE,MACA/iD,KAAKwjD,mBACP,CACIxjD,KAAKygD,kBAAkBK,kBACzBhB,GAAe9/C,KAAKygD,OAAQzgD,KAAK+iD,MAC9B9C,MAAMF,IACL//C,KAAKygD,OAASV,EACd//C,KAAKyjD,kBAAkB,IAExBvD,MAAMlgD,KAAKwjD,kBAAkBl/C,KAAKtE,MAnBvC,CAqBF,CAMA,aAAA0jD,CAAcpD,GACZ,IACGtgD,KAAK4iD,QACN5iD,KAAK2iD,QAAQrC,IF5OT,IE6OJtgD,KAAK6iD,YAEL,OAGF,MAAM9C,EAAQ//C,KAAKygD,OACbqD,EAAM9nB,GACVxuB,KAAKkF,KAAKqtC,EAAM9jB,MAAQqkB,GACxB9yC,KAAKkF,KAAKqtC,EAAM7jB,OAASokB,IAErBjkB,EAASynB,EAAIznB,ORlOhB,IAAkBoc,EQoOrBqL,EAAIl+B,MAAM06B,EAAYA,GACtBwD,EAAIT,UAAUtD,EAAO,EAAG,GAExB+D,EAAIC,yBAA2B,WAC/BD,EAAIE,URvOe,iBADEvL,EQwOIz4C,KAAK4iD,QRtOvBnK,EAEF,GAASA,GQqOdqL,EAAIF,SAAS,EAAG,EAAGvnB,EAAOJ,MAAQqkB,EAAYjkB,EAAOH,OAASokB,GAE9DwD,EAAIC,yBAA2B,iBAC/BD,EAAIT,UAAUtD,EAAO,EAAG,GAExB//C,KAAK2iD,QAAQrC,GAAcjkB,CAC7B,CAKA,KAAA6lB,GAsBE,OArBKliD,KAAKijD,SACRjjD,KAAKijD,OAAS,IAAIxhD,SAASE,IACzB,GF5QE,IE6QA3B,KAAK6iD,aF5QN,IE6QC7iD,KAAK6iD,YAELlhD,QACK,CACL,MAAMsiD,EAAW,KFlRjB,IEoRIjkD,KAAK6iD,aFnRV,IEoRK7iD,KAAK6iD,cAEL7iD,KAAK2D,oBAAoB,EAAkBsgD,GAC3CtiD,IACF,EAEF3B,KAAK0C,iBAAiB,EAAkBuhD,EAC1C,MAGGjkD,KAAKijD,MACd,EAYK,SAAS,GAAIlD,EAAOmE,EAAU5C,EAAakB,EAAY/J,EAAOuJ,GACnE,IAAIF,OACW9iD,IAAbklD,OACIllD,EACA,GAAeS,IAAIykD,EAAU5C,EAAa7I,GAkBhD,OAjBKqJ,IACHA,EAAY,IAAIS,GACdxC,EACAA,GAAS,QAASA,EAAQA,EAAMC,UAAOhhD,EAAYklD,EACnD5C,EACAkB,EACA/J,GAEF,GAAe/xC,IAAIw9C,EAAU5C,EAAa7I,EAAOqJ,EAAWE,IAG5DA,GACAF,IACC,GAAeC,WAAWmC,EAAU5C,EAAa7I,IAElD,GAAe/xC,IAAIw9C,EAAU5C,EAAa7I,EAAOqJ,EAAWE,GAEvDF,CACT,CAEA,YC1SO,SAASqC,GAAY1L,GAC1B,OAAKA,EAGD1zC,MAAMC,QAAQyzC,GACT,GAASA,GAEG,iBAAVA,GAAsB,QAASA,EAW5C,SAAyBuJ,GACvB,IAAKA,EAAQ/sC,SAAW+sC,EAAQ7uC,KAC9B,OAAO,GAAU4uC,WAAWC,EAAQhC,IAAK,YAAagC,EAAQvJ,OAGhE,MAAMyL,EAAWlC,EAAQhC,IAAM,IAAMgC,EAAQ/sC,OAEvCmvC,EAAgB,GAAUrC,WAC9BmC,OACAllD,EACAgjD,EAAQvJ,OAEV,GAAI2L,EACF,OAAOA,EAGT,MAAMtC,EAAY,GAAUriD,IAAIuiD,EAAQhC,IAAK,YAAa,MAC1D,GH9DQ,IG8DJ8B,EAAUG,gBACZ,OAAO,KAET,MAAMoC,EAAuBroB,GAC3BgmB,EAAQ7uC,KAAK,GACb6uC,EAAQ7uC,KAAK,IAqBf,OAnBAkxC,EAAqBhB,UACnBvB,EAAUnB,SAAS,GACnBqB,EAAQ/sC,OAAO,GACf+sC,EAAQ/sC,OAAO,GACf+sC,EAAQ7uC,KAAK,GACb6uC,EAAQ7uC,KAAK,GACb,EACA,EACA6uC,EAAQ7uC,KAAK,GACb6uC,EAAQ7uC,KAAK,IAEf,GACEkxC,EAAqBhoB,OACrB6nB,OACAllD,EHnFM,EGqFNgjD,EAAQvJ,OACR,GAEK,GAAUsJ,WAAWmC,OAAUllD,EAAWgjD,EAAQvJ,MAC3D,CAtDW6L,CAAgB7L,GAElBA,EARE,IASX,CC4CO,MAMM8L,GAAmB,OAMnBC,GAAiB,QAkBjBC,GAAkB,QAyClBC,GAAe,IAAI,EC3IhC,MAAMC,GAIJ,WAAA5kD,CAAYoH,GAKVnH,KAAK4kD,SAAWz9C,EAAQglC,QAMxBnsC,KAAK6kD,gBAAkB19C,EAAQ29C,eAM/B9kD,KAAK+hC,UAAY56B,EAAQoO,SAMzBvV,KAAK+kD,OAAS59C,EAAQye,MAMtB5lB,KAAKglD,YAAcpL,GAAOzyC,EAAQye,OAMlC5lB,KAAKilD,cAAgB99C,EAAQ+9C,aAM7BllD,KAAKmlD,eAAiBh+C,EAAQi+C,aAChC,CAOA,KAAAtgC,GACE,MAAMc,EAAQ5lB,KAAKqlD,WACnB,OAAO,IAAIV,GAAW,CACpBxY,QAASnsC,KAAK4sC,aACdhnB,MAAO7gB,MAAMC,QAAQ4gB,GAASA,EAAMvG,QAAUuG,EAC9CrQ,SAAUvV,KAAKw0B,cACfswB,eAAgB9kD,KAAKslD,oBACrBJ,aAAcllD,KAAKulD,kBAAkBlmC,QACrC+lC,cAAeplD,KAAKwlD,oBAExB,CAOA,UAAA5Y,GACE,OAAO5sC,KAAK4kD,QACd,CAOA,iBAAAU,GACE,OAAOtlD,KAAK6kD,eACd,CAOA,WAAArwB,GACE,OAAOx0B,KAAK+hC,SACd,CAOA,QAAAsjB,GACE,OAAOrlD,KAAK+kD,MACd,CAMA,aAAAU,GACE,OAAOzlD,KAAKglD,WACd,CAOA,eAAAO,GACE,OAAOvlD,KAAKilD,aACd,CAOA,gBAAAO,GACE,OAAOxlD,KAAKmlD,cACd,CAQA,SAAAO,GACE,OAAO,GACT,CAQA,QAAA/E,CAASL,GACP,OAAO,GACT,CAMA,oBAAAqD,GACE,OAAO,GACT,CAOA,aAAA/C,CAAcN,GACZ,OAAO,CACT,CAMA,aAAA2B,GACE,OAAO,GACT,CAMA,YAAA0D,GACE,OAAO,GACT,CAOA,SAAAC,GACE,OAAO,GACT,CAOA,OAAAje,GACE,OAAO,GACT,CAQA,eAAAke,CAAgBX,GACdllD,KAAKilD,cAAgBC,CACvB,CAQA,UAAA7X,CAAWlB,GACTnsC,KAAK4kD,SAAWzY,CAClB,CAQA,iBAAA2Z,CAAkBhB,GAChB9kD,KAAK6kD,gBAAkBC,CACzB,CAQA,WAAApxB,CAAYne,GACVvV,KAAK+hC,UAAYxsB,CACnB,CAQA,QAAAwwC,CAASngC,GACP5lB,KAAK+kD,OAASn/B,EACd5lB,KAAKglD,YAAcpL,GAAOh0B,EAC5B,CAMA,iBAAAogC,CAAkBrjD,GAChB,GACF,CAMA,IAAAsO,GACE,GACF,CAMA,mBAAAg1C,CAAoBtjD,GAClB,GACF,CAKA,KAAAu/C,GACE,OAAOzgD,QAAQE,SACjB,EAGF,YCvPA,MAAMukD,WAAqB,GAIzB,WAAAnmD,CAAYoH,GACV9E,MAAM,CACJ8pC,QAAS,EACT2Y,oBAC6B9lD,IAA3BmI,EAAQ29C,gBAA+B39C,EAAQ29C,eACjDvvC,cAA+BvW,IAArBmI,EAAQoO,SAAyBpO,EAAQoO,SAAW,EAC9DqQ,WAAyB5mB,IAAlBmI,EAAQye,MAAsBze,EAAQye,MAAQ,EACrDs/B,kBAC2BlmD,IAAzBmI,EAAQ+9C,aAA6B/9C,EAAQ+9C,aAAe,CAAC,EAAG,GAClEE,cAAej+C,EAAQi+C,gBAOzBplD,KAAKmmD,oBAAsB,KAM3BnmD,KAAKomD,WAAyBpnD,IAAjBmI,EAAQk/C,KAAqBl/C,EAAQk/C,KAAO,KAMzDrmD,KAAKsmD,QAAU,CAAC,EAAG,GAMnBtmD,KAAKsjC,QAAUn8B,EAAQo/C,OAMvBvmD,KAAKyf,OAAStY,EAAQsY,OAMtBzf,KAAKwmD,SAAWr/C,EAAQs/C,QAMxBzmD,KAAKujC,YAA2BvkC,IAAlBmI,EAAQ2P,MAAsB3P,EAAQ2P,MAAQ,EAM5D9W,KAAK0mD,aAA6B1nD,IAAnBmI,EAAQw/C,OAAuBx/C,EAAQw/C,OAAS,KAM/D3mD,KAAK8iD,MAML9iD,KAAK4mD,eAKL5mD,KAAK6iD,YACH7iD,KAAKomD,OAASpmD,KAAKomD,MAAMS,UNjIpB,EACD,EADC,IMoIH7mD,KAAK6iD,aACP7iD,KAAKkiD,QAAQjC,MAAK,IAAOjgD,KAAK6iD,YNpI1B,IMsIN7iD,KAAKy9B,QACP,CAQA,KAAA3Y,GACE,MAAMc,EAAQ5lB,KAAKqlD,WACbhoB,EAAQ,IAAI6oB,GAAa,CAC7BG,KAAMrmD,KAAK8mD,UAAY9mD,KAAK8mD,UAAUhiC,aAAU9lB,EAChDunD,OAAQvmD,KAAK+mD,YACbtnC,OAAQzf,KAAKgnD,YACbP,QAASzmD,KAAKinD,aACdnwC,MAAO9W,KAAK6jC,WACZ8iB,OAAQ3mD,KAAKknD,YAAclnD,KAAKknD,YAAYpiC,aAAU9lB,EACtDuW,SAAUvV,KAAKw0B,cACfswB,eAAgB9kD,KAAKslD,oBACrB1/B,MAAO7gB,MAAMC,QAAQ4gB,GAASA,EAAMvG,QAAUuG,EAC9Cs/B,aAAcllD,KAAKulD,kBAAkBlmC,QACrC+lC,cAAeplD,KAAKwlD,qBAGtB,OADAnoB,EAAMgQ,WAAWrtC,KAAK4sC,cACfvP,CACT,CASA,SAAAqoB,GACE,MAAMvyC,EAAOnT,KAAK8iD,MACZoC,EAAellD,KAAKulD,kBACpB3/B,EAAQ5lB,KAAKylD,gBAGnB,MAAO,CACLtyC,EAAK,GAAK,EAAI+xC,EAAa,GAAKt/B,EAAM,GACtCzS,EAAK,GAAK,EAAI+xC,EAAa,GAAKt/B,EAAM,GAE1C,CAOA,QAAAie,GACE,OAAO7jC,KAAKujC,MACd,CAOA,OAAAujB,GACE,OAAO9mD,KAAKomD,KACd,CAOA,OAAAe,CAAQd,GACNrmD,KAAKomD,MAAQC,EACbrmD,KAAKy9B,QACP,CAMA,oBAAAkmB,GAME,OALK3jD,KAAKmmD,sBACRnmD,KAAKmmD,oBAAsBnmD,KAAKonD,0BAC9BpnD,KAAK4mD,iBAGF5mD,KAAKmmD,mBACd,CASA,QAAAxF,CAASL,GACP,MAAM+G,EAAUrnD,KAAKomD,OAAOn2C,SACtBi0C,EACJ,GAAG5D,KAActgD,KAAKujC,UAAUvjC,KAAKyf,UAAUzf,KAAKwmD,YAAYxmD,KAAKsjC,WAAW+jB,IAChF/nD,OAAOuG,OAAO7F,KAAK4mD,gBAAgB7qB,KAAK,KAC1C,IAAIgkB,EACF,GAAetgD,IAAIykD,EAAU,KAAM,OAAOvD,SAAS,GAErD,IAAKZ,EAAO,CACV,MAAMuH,EAAgBtnD,KAAK4mD,eACrBzzC,EAAO3F,KAAKkF,KAAK40C,EAAcn0C,KAAOmtC,GACtCzjB,EAAUb,GAAsB7oB,EAAMA,GAC5CnT,KAAKunD,MAAMD,EAAezqB,EAASyjB,GAEnCP,EAAQljB,EAAQR,OAChB,GAAe31B,IACbw9C,EACA,KACA,KACA,IAAI,GAAUnE,OAAO/gD,EAAW,KNxP9B,EMwPuD,MAE7D,CACA,OAAO+gD,CACT,CAQA,aAAAa,CAAcN,GACZ,OAAOA,CACT,CAMA,YAAAqF,GACE,OAAO3lD,KAAK8iD,KACd,CAMA,aAAAb,GACE,OAAOjiD,KAAK6iD,WACd,CAQA,SAAA+C,GACE,OAAO5lD,KAAKsmD,OACd,CAOA,SAAAS,GACE,OAAO/mD,KAAKsjC,OACd,CAOA,SAAA0jB,GACE,OAAOhnD,KAAKyf,MACd,CAOA,UAAAwnC,GACE,OAAOjnD,KAAKwmD,QACd,CAQA,OAAA7e,GACE,OAAO3nC,KAAK8iD,KACd,CAOA,SAAAoE,GACE,OAAOlnD,KAAK0mD,OACd,CAOA,SAAAc,CAAUb,GACR3mD,KAAK0mD,QAAUC,EACf3mD,KAAKy9B,QACP,CAMA,iBAAAuoB,CAAkBrjD,GAAW,CAM7B,IAAAsO,GAAQ,CAMR,mBAAAg1C,CAAoBtjD,GAAW,CAU/B,sBAAA8kD,CAAuBC,EAAUC,EAAaC,GAC5C,GACkB,IAAhBD,GACA3nD,KAAKsjC,UAAYv1B,KACH,UAAb25C,GAAqC,UAAbA,EAEzB,OAAOC,EAwBT,IAAIE,EAAK7nD,KAAKyf,OACVqoC,OAAuB9oD,IAAlBgB,KAAKwmD,SAAyBqB,EAAK7nD,KAAKwmD,SACjD,GAAIqB,EAAKC,EAAI,CACX,MAAM18B,EAAMy8B,EACZA,EAAKC,EACLA,EAAK18B,CACP,CACA,MAAMm7B,OACcvnD,IAAlBgB,KAAKwmD,SAAyBxmD,KAAKsjC,QAAyB,EAAftjC,KAAKsjC,QAC9C2V,EAAS,EAAIzrC,KAAK0E,GAAMq0C,EACxBlmD,EAAIynD,EAAKt6C,KAAKuI,IAAIkjC,GAElB/5C,EAAI2oD,EADAr6C,KAAK4N,KAAK0sC,EAAKA,EAAKznD,EAAIA,GAE5BojB,EAAIjW,KAAK4N,KAAK/a,EAAIA,EAAInB,EAAIA,GAC1B6oD,EAAatkC,EAAIpjB,EACvB,GAAiB,UAAbqnD,GAAwBK,GAAcH,EACxC,OAAOG,EAAaJ,EAetB,MAAM/gC,EAAI+gC,EAAc,EAAII,EACtBrR,EAAKiR,EAAc,GAAMzoD,EAAIukB,GAE7BukC,EADOx6C,KAAK4N,MAAMysC,EAAKjhC,IAAMihC,EAAKjhC,GAAK8vB,EAAIA,GACzBmR,EACxB,QAAsB7oD,IAAlBgB,KAAKwmD,UAAuC,UAAbkB,EACjC,OAAkB,EAAXM,EAIT,MAAMC,EAAKJ,EAAKr6C,KAAKuI,IAAIkjC,GAEnBiP,EAAKJ,EADAt6C,KAAK4N,KAAKysC,EAAKA,EAAKI,EAAKA,GAG9BE,EADK36C,KAAK4N,KAAK6sC,EAAKA,EAAKC,EAAKA,GACPD,EAC7B,GAAIE,GAAmBP,EAAY,CACjC,MAAMQ,EAAeD,EAAkBR,EAAe,EAAIG,EAAKD,EAC/D,OAAO,EAAIr6C,KAAK8D,IAAI02C,EAAUI,EAChC,CACA,OAAkB,EAAXJ,CACT,CAMA,mBAAAK,GACE,IAKIC,EALAC,EAAU/D,GACVkD,EAAWjD,GACXmD,EAAa,EACbY,EAAW,KACXC,EAAiB,EAEjBd,EAAc,EAEd3nD,KAAK0mD,UACP4B,EAAcnE,GAAYnkD,KAAK0mD,QAAQgC,YFxVX,QEyV5Bf,EAAc3nD,KAAK0mD,QAAQiC,YFjUD,EEkU1BH,EAAWxoD,KAAK0mD,QAAQkC,cACxBH,EAAiBzoD,KAAK0mD,QAAQmC,qBAAuB,EACrDnB,EAAW1nD,KAAK0mD,QAAQoC,eAAiBrE,GACzC8D,EAAUvoD,KAAK0mD,QAAQqC,cAAgBvE,GACvCoD,EAAa5nD,KAAK0mD,QAAQsC,iBFpWC,IEuW7B,MAAM5oB,EAAMpgC,KAAKynD,uBAAuBC,EAAUC,EAAaC,GACzDqB,EAAYz7C,KAAK8D,IAAItR,KAAKyf,OAAQzf,KAAKwmD,UAAY,GAGzD,MAAO,CACL8B,YAAaA,EACbX,YAAaA,EACbx0C,KALW3F,KAAKkF,KAAK,EAAIu2C,EAAY7oB,GAMrCmoB,QAASA,EACTC,SAAUA,EACVC,eAAgBA,EAChBf,SAAUA,EACVE,WAAYA,EAEhB,CAKA,MAAAnqB,GACEz9B,KAAK4mD,eAAiB5mD,KAAKqoD,sBAC3B,MAAMl1C,EAAOnT,KAAK4mD,eAAezzC,KACjCnT,KAAKmmD,oBAAsB,KAC3BnmD,KAAK8iD,MAAQ,CAAC3vC,EAAMA,EACtB,CAQA,KAAAo0C,CAAMD,EAAezqB,EAASyjB,GAO5B,GANAzjB,EAAQjX,MAAM06B,EAAYA,GAE1BzjB,EAAQ5W,UAAUqhC,EAAcn0C,KAAO,EAAGm0C,EAAcn0C,KAAO,GAE/DnT,KAAKkpD,YAAYrsB,GAEb78B,KAAKomD,MAAO,CACd,IAAI3N,EAAQz4C,KAAKomD,MAAMsC,WACT,OAAVjQ,IACFA,EAAQ8L,IAEV1nB,EAAQmnB,UAAYG,GAAY1L,GAChC5b,EAAQwpB,MACV,CACIiB,EAAcgB,cAChBzrB,EAAQyrB,YAAchB,EAAcgB,YACpCzrB,EAAQssB,UAAY7B,EAAcK,YAC9BL,EAAckB,WAChB3rB,EAAQusB,YAAY9B,EAAckB,UAClC3rB,EAAQ4rB,eAAiBnB,EAAcmB,gBAEzC5rB,EAAQ0rB,QAAUjB,EAAciB,QAChC1rB,EAAQ6qB,SAAWJ,EAAcI,SACjC7qB,EAAQ+qB,WAAaN,EAAcM,WACnC/qB,EAAQ8pB,SAEZ,CAOA,yBAAAS,CAA0BE,GACxB,IAAIzqB,EACJ,GAAI78B,KAAKomD,MAAO,CACd,IAAI3N,EAAQz4C,KAAKomD,MAAMsC,WAGnBvc,EAAU,EACO,iBAAVsM,IACTA,EAAQiB,GAAQjB,IAEJ,OAAVA,EACFtM,EAAU,EACDpnC,MAAMC,QAAQyzC,KACvBtM,EAA2B,IAAjBsM,EAAM73C,OAAe63C,EAAM,GAAK,GAE5B,IAAZtM,IAGFtP,EAAUb,GAAsBsrB,EAAcn0C,KAAMm0C,EAAcn0C,MAClEnT,KAAKqpD,wBAAwB/B,EAAezqB,GAEhD,CACA,OAAOA,EAAUA,EAAQR,OAASr8B,KAAK2gD,SAAS,EAClD,CAMA,WAAAuI,CAAYrsB,GACV,IAAI0pB,EAASvmD,KAAKsjC,QAClB,MAAM7jB,EAASzf,KAAKyf,OACpB,GAAI8mC,IAAWx4C,IACb8uB,EAAQysB,IAAI,EAAG,EAAG7pC,EAAQ,EAAG,EAAIjS,KAAK0E,QACjC,CACL,MAAMu0C,OAA4BznD,IAAlBgB,KAAKwmD,SAAyB/mC,EAASzf,KAAKwmD,cACtCxnD,IAAlBgB,KAAKwmD,WACPD,GAAU,GAEZ,MAAMgD,EAAavpD,KAAKujC,OAAS/1B,KAAK0E,GAAK,EACrCs3C,EAAQ,EAAIh8C,KAAK0E,GAAMq0C,EAC7B,IAAK,IAAI1lD,EAAI,EAAGA,EAAI0lD,EAAQ1lD,IAAK,CAC/B,MAAM4oD,EAASF,EAAa1oD,EAAI2oD,EAC1BE,EAAU7oD,EAAI,GAAM,EAAI4e,EAASgnC,EACvC5pB,EAAQ8sB,OAAOD,EAAUl8C,KAAKqI,IAAI4zC,GAASC,EAAUl8C,KAAKuI,IAAI0zC,GAChE,CACA5sB,EAAQ+sB,WACV,CACF,CAOA,uBAAAP,CAAwB/B,EAAezqB,GAErCA,EAAQ5W,UAAUqhC,EAAcn0C,KAAO,EAAGm0C,EAAcn0C,KAAO,GAE/DnT,KAAKkpD,YAAYrsB,GAEjBA,EAAQmnB,UAAYO,GACpB1nB,EAAQwpB,OACJiB,EAAcgB,cAChBzrB,EAAQyrB,YAAchB,EAAcgB,YACpCzrB,EAAQssB,UAAY7B,EAAcK,YAC9BL,EAAckB,WAChB3rB,EAAQusB,YAAY9B,EAAckB,UAClC3rB,EAAQ4rB,eAAiBnB,EAAcmB,gBAEzC5rB,EAAQ6qB,SAAWJ,EAAcI,SACjC7qB,EAAQ+qB,WAAaN,EAAcM,WACnC/qB,EAAQ8pB,SAEZ,CAKA,KAAAzE,GACE,OAAOliD,KAAKomD,MAAQpmD,KAAKomD,MAAMlE,QAAUzgD,QAAQE,SACnD,EAGF,YCnmBA,MAAM,WAAoB,GAIxB,WAAA5B,CAAYoH,GAGV9E,MAAM,CACJkkD,OAAQx4C,IACRs4C,MAJFl/C,EAAUA,GAAoB,CAACsY,OAAQ,IAIvB4mC,KACd5mC,OAAQtY,EAAQsY,OAChBknC,OAAQx/C,EAAQw/C,OAChB/gC,WAAyB5mB,IAAlBmI,EAAQye,MAAsBze,EAAQye,MAAQ,EACrDrQ,cAA+BvW,IAArBmI,EAAQoO,SAAyBpO,EAAQoO,SAAW,EAC9DuvC,oBAC6B9lD,IAA3BmI,EAAQ29C,gBAA+B39C,EAAQ29C,eACjDI,kBAC2BlmD,IAAzBmI,EAAQ+9C,aAA6B/9C,EAAQ+9C,aAAe,CAAC,EAAG,GAClEE,cAAej+C,EAAQi+C,eAE3B,CAQA,KAAAtgC,GACE,MAAMc,EAAQ5lB,KAAKqlD,WACbhoB,EAAQ,IAAI,GAAY,CAC5BgpB,KAAMrmD,KAAK8mD,UAAY9mD,KAAK8mD,UAAUhiC,aAAU9lB,EAChD2nD,OAAQ3mD,KAAKknD,YAAclnD,KAAKknD,YAAYpiC,aAAU9lB,EACtDygB,OAAQzf,KAAKgnD,YACbphC,MAAO7gB,MAAMC,QAAQ4gB,GAASA,EAAMvG,QAAUuG,EAC9CrQ,SAAUvV,KAAKw0B,cACfswB,eAAgB9kD,KAAKslD,oBACrBJ,aAAcllD,KAAKulD,kBAAkBlmC,QACrC+lC,cAAeplD,KAAKwlD,qBAGtB,OADAnoB,EAAMgQ,WAAWrtC,KAAK4sC,cACfvP,CACT,CAQA,SAAAwsB,CAAUpqC,GACRzf,KAAKyf,OAASA,EACdzf,KAAKy9B,QACP,EAGF,YC3DA,MAAM,GAIJ,WAAA19B,CAAYoH,GACVA,EAAUA,GAAW,CAAC,EAMtBnH,KAAK8pD,cAAgB,KAMrB9pD,KAAK4iD,OAAS,UACQ5jD,IAAlBmI,EAAQsxC,OACVz4C,KAAK+pD,SAAS5iD,EAAQsxC,MAE1B,CAOA,KAAA3zB,GACE,MAAM2zB,EAAQz4C,KAAK0oD,WACnB,OAAO,IAAI,GAAK,CACdjQ,MAAO1zC,MAAMC,QAAQyzC,GAASA,EAAMp5B,QAAUo5B,QAASz5C,GAE3D,CAOA,QAAA0pD,GACE,OAAO1oD,KAAK4iD,MACd,CAQA,QAAAmH,CAAStR,GACP,GAAc,OAAVA,GAAmC,iBAAVA,GAAsB,QAASA,EAAO,CACjE,MAAMuR,EAAe,GACnB,KACAvR,EAAMuH,IACN,iBACAhhD,EACAy5C,EAAMxjC,OAAS,KAAOwjC,EAAMA,MAAQA,EAAMA,MAAQ,OAChDA,EAAMxjC,QAAUwjC,EAAMtlC,OAE1B62C,EAAa9H,QAAQjC,MAAK,KACxBjgD,KAAK8pD,cAAgB,IAAI,IR5EzB,IQ8EEE,EAAa/H,iBACf+H,EAAa/4C,OR9EV,IQgFD+4C,EAAa/H,kBACfjiD,KAAK8pD,cAAgBE,EAEzB,CACAhqD,KAAK4iD,OAASnK,CAChB,CAKA,MAAAxoC,GACE,MAAMo2C,EAAOrmD,KAAK0oD,WAClB,OAAKrC,EAGEA,aAAgB4D,eAAiB5D,aAAgB6D,eACpD1kD,EAAO6gD,GACS,iBAATA,GAAqB,QAASA,EACnCA,EAAKrG,IAAM,IAAMqG,EAAKpxC,OACtBykC,GAAQ2M,GAAM3K,WANX,EAOX,CAKA,OAAAmL,GACE,QAAS7mD,KAAK8pD,aAChB,CAKA,KAAA5H,GACE,OAAOliD,KAAK8pD,cAAgB9pD,KAAK8pD,cAAc5H,QAAUzgD,QAAQE,SACnE,EAGF,YC/DA,SAASwoD,GAAeluB,EAAOC,EAAQkuB,EAAaC,GAClD,YAAoBrrD,IAAhBorD,QAA8CprD,IAAjBqrD,EACxB,CAACD,EAAcnuB,EAAOouB,EAAenuB,QAE1Bl9B,IAAhBorD,EACKA,EAAcnuB,OAEFj9B,IAAjBqrD,EACKA,EAAenuB,EAEjB,CACT,CAOA,MAAMouB,WAAa,GAIjB,WAAAvqD,CAAYoH,GAMV,MAAMglC,OAA8BntC,KALpCmI,EAAUA,GAAW,CAAC,GAKEglC,QAAwBhlC,EAAQglC,QAAU,EAK5D52B,OAAgCvW,IAArBmI,EAAQoO,SAAyBpO,EAAQoO,SAAW,EAK/DqQ,OAA0B5mB,IAAlBmI,EAAQye,MAAsBze,EAAQye,MAAQ,EAKtDk/B,OACuB9lD,IAA3BmI,EAAQ29C,gBAA+B39C,EAAQ29C,eAEjDziD,MAAM,CACJ8pC,QAASA,EACT52B,SAAUA,EACVqQ,MAAOA,EACPs/B,kBAC2BlmD,IAAzBmI,EAAQ+9C,aAA6B/9C,EAAQ+9C,aAAe,CAAC,EAAG,GAClEJ,eAAgBA,EAChBM,cAAej+C,EAAQi+C,gBAOzBplD,KAAKsrC,aAA6BtsC,IAAnBmI,EAAQwe,OAAuBxe,EAAQwe,OAAS,CAAC,GAAK,IAMrE3lB,KAAKuqD,kBAAoB,KAMzBvqD,KAAKwqD,mBACsBxrD,IAAzBmI,EAAQsjD,aAA6BtjD,EAAQsjD,aAAe,WAM9DzqD,KAAK0qD,mBACsB1rD,IAAzBmI,EAAQwjD,aAA6BxjD,EAAQwjD,aAAe,WAM9D3qD,KAAK4qD,mBACsB5rD,IAAzBmI,EAAQ0jD,aAA6B1jD,EAAQ0jD,aAAe,WAM9D7qD,KAAK0iD,kBACqB1jD,IAAxBmI,EAAQm6C,YAA4Bn6C,EAAQm6C,YAAc,KAE5D,MAAMvB,OAAwB/gD,IAAhBmI,EAAQ2jD,IAAoB3jD,EAAQ2jD,IAAM,KAExD,IAuBItI,EAvBA0B,EAAW/8C,EAAQ64C,IAwFvB,GAtFA,UACiBhhD,IAAbklD,GAA0BnE,GAC5B,8DAGgB/gD,IAAbklD,GAA8C,IAApBA,EAAStjD,SAAiBm/C,IACvDmE,EAA2C,EAAQlE,KAAOx6C,EAAOu6C,IAEnE,QACe/gD,IAAbklD,GAA0BA,EAAStjD,OAAS,EAC5C,6DAGF,WAEuB5B,IAAlBmI,EAAQ80B,YAA0Cj9B,IAAnBmI,EAAQ+0B,cACtBl9B,IAAlBmI,EAAQye,OAEV,qEAIkB5mB,IAAhBmI,EAAQ64C,IACVwC,ETlLE,OSmLiBxjD,IAAV+gD,IAGLyC,EAFA,aAAczC,EACZA,EAAM3qB,SACK2qB,EAAMC,ITpLnB,EAFF,EACG,EACD,GSiMNhgD,KAAK4iD,YAA2B5jD,IAAlBmI,EAAQsxC,MAAsBiB,GAAQvyC,EAAQsxC,OAAS,KAMrEz4C,KAAK+qD,WAAa,GAChBhL,EACsB,EACtB//C,KAAK0iD,aACLF,EACAxiD,KAAK4iD,QAOP5iD,KAAKgrD,aAA6BhsD,IAAnBmI,EAAQ8N,OAAuB9N,EAAQ8N,OAAS,CAAC,EAAG,GAKnEjV,KAAKirD,mBACsBjsD,IAAzBmI,EAAQ+jD,aAA6B/jD,EAAQ+jD,aAAe,WAM9DlrD,KAAKsmD,QAAU,KAMftmD,KAAK8iD,WAAyB9jD,IAAjBmI,EAAQgM,KAAqBhM,EAAQgM,KAAO,KAKzDnT,KAAKmrD,qBAKiBnsD,IAAlBmI,EAAQ80B,YAA0Cj9B,IAAnBmI,EAAQ+0B,OAAsB,CAC/D,IAAID,EAAOC,EACX,GAAI/0B,EAAQgM,MACT8oB,EAAOC,GAAU/0B,EAAQgM,SACrB,CACL,MAAM4sC,EAAQ//C,KAAK2gD,SAAS,GAC5B,GAAIZ,EAAM9jB,OAAS8jB,EAAM7jB,OACvBD,EAAQ8jB,EAAM9jB,MACdC,EAAS6jB,EAAM7jB,YACV,GAAI6jB,aAAiBe,iBAAkB,CAC5C9gD,KAAKmrD,gBAAkBhkD,EACvB,MAAMikD,EAAS,KAEb,GADAprD,KAAKimD,oBAAoBmF,IACpBprD,KAAKmrD,gBACR,OAEF,MAAME,EAAYrrD,KAAK+qD,WAAWpjB,UAClC3nC,KAAK+lD,SACHoE,GACEkB,EAAU,GACVA,EAAU,GACVlkD,EAAQ80B,MACR90B,EAAQ+0B,QAEX,EAGH,YADAl8B,KAAKgmD,kBAAkBoF,EAEzB,CACF,MACcpsD,IAAVi9B,GACFj8B,KAAK+lD,SACHoE,GAAeluB,EAAOC,EAAQ/0B,EAAQ80B,MAAO90B,EAAQ+0B,QAG3D,CACF,CAQA,KAAApX,GACE,IAAIc,EAAOqW,EAAOC,EAQlB,OAPIl8B,KAAKmrD,iBACPlvB,EAAQj8B,KAAKmrD,gBAAgBlvB,MAC7BC,EAASl8B,KAAKmrD,gBAAgBjvB,SAE9BtW,EAAQ5lB,KAAKqlD,WACbz/B,EAAQ7gB,MAAMC,QAAQ4gB,GAASA,EAAMvG,QAAUuG,GAE1C,IAAI0kC,GAAK,CACd3kC,OAAQ3lB,KAAKsrC,QAAQjsB,QACrBorC,aAAczqD,KAAKwqD,cACnBG,aAAc3qD,KAAK0qD,cACnBG,aAAc7qD,KAAK4qD,cACnBnS,MACEz4C,KAAK4iD,QAAU5iD,KAAK4iD,OAAOvjC,MACvBrf,KAAK4iD,OAAOvjC,QACZrf,KAAK4iD,aAAU5jD,EACrBsiD,YAAathD,KAAK0iD,aAClBztC,OAAQjV,KAAKgrD,QAAQ3rC,QACrB6rC,aAAclrD,KAAKirD,cACnB9e,QAASnsC,KAAK4sC,aACdkY,eAAgB9kD,KAAKslD,oBACrB/vC,SAAUvV,KAAKw0B,cACf5O,QACAqW,QACAC,SACA/oB,KAAqB,OAAfnT,KAAK8iD,MAAiB9iD,KAAK8iD,MAAMzjC,aAAUrgB,EACjDghD,IAAKhgD,KAAK6jD,SACVqB,aAAcllD,KAAKulD,kBAAkBlmC,QACrC+lC,cAAeplD,KAAKwlD,oBAExB,CASA,SAAAE,GACE,IAAI//B,EAAS3lB,KAAKuqD,kBAClB,IAAK5kC,EAAQ,CACXA,EAAS3lB,KAAKsrC,QACd,MAAMn4B,EAAOnT,KAAK2nC,UAClB,GACwB,YAAtB3nC,KAAK0qD,eACiB,YAAtB1qD,KAAK4qD,cACL,CACA,IAAKz3C,EACH,OAAO,KAETwS,EAAS3lB,KAAKsrC,QAAQjsB,QACI,YAAtBrf,KAAK0qD,gBACP/kC,EAAO,IAAMxS,EAAK,IAEM,YAAtBnT,KAAK4qD,gBACPjlC,EAAO,IAAMxS,EAAK,GAEtB,CAEA,GAA0B,YAAtBnT,KAAKwqD,cAA6B,CACpC,IAAKr3C,EACH,OAAO,KAELwS,IAAW3lB,KAAKsrC,UAClB3lB,EAAS3lB,KAAKsrC,QAAQjsB,SAGA,aAAtBrf,KAAKwqD,eACiB,gBAAtBxqD,KAAKwqD,gBAEL7kC,EAAO,IAAMA,EAAO,GAAKxS,EAAK,IAGR,eAAtBnT,KAAKwqD,eACiB,gBAAtBxqD,KAAKwqD,gBAEL7kC,EAAO,IAAMA,EAAO,GAAKxS,EAAK,GAElC,CACAnT,KAAKuqD,kBAAoB5kC,CAC3B,CACA,MAAMu/B,EAAellD,KAAKulD,kBACpB3/B,EAAQ5lB,KAAKylD,gBAGnB,MAAO,CACL9/B,EAAO,GAAKu/B,EAAa,GAAKt/B,EAAM,GACpCD,EAAO,GAAKu/B,EAAa,GAAKt/B,EAAM,GAExC,CASA,SAAA0lC,CAAU3lC,GACR3lB,KAAKsrC,QAAU3lB,EACf3lB,KAAKuqD,kBAAoB,IAC3B,CAOA,QAAA7B,GACE,OAAO1oD,KAAK4iD,MACd,CAUA,QAAAjC,CAASL,GACP,OAAOtgD,KAAK+qD,WAAWpK,SAASL,EAClC,CASA,aAAAM,CAAcN,GACZ,OAAOtgD,KAAK+qD,WAAWnK,cAAcN,EACvC,CAMA,YAAAqF,GACE,OAAO3lD,KAAK+qD,WAAWpjB,SACzB,CAMA,aAAAsa,GACE,OAAOjiD,KAAK+qD,WAAW9I,eACzB,CAMA,oBAAA0B,GACE,OAAO3jD,KAAK+qD,WAAWpH,sBACzB,CAQA,SAAAiC,GACE,GAAI5lD,KAAKsmD,QACP,OAAOtmD,KAAKsmD,QAEd,IAAIrxC,EAASjV,KAAKgrD,QAElB,GAA0B,YAAtBhrD,KAAKirD,cAA6B,CACpC,MAAM93C,EAAOnT,KAAK2nC,UACZ4jB,EAAgBvrD,KAAK+qD,WAAWpjB,UACtC,IAAKx0B,IAASo4C,EACZ,OAAO,KAETt2C,EAASA,EAAOoK,QAEQ,aAAtBrf,KAAKirD,eACiB,gBAAtBjrD,KAAKirD,gBAELh2C,EAAO,GAAKs2C,EAAc,GAAKp4C,EAAK,GAAK8B,EAAO,IAG1B,eAAtBjV,KAAKirD,eACiB,gBAAtBjrD,KAAKirD,gBAELh2C,EAAO,GAAKs2C,EAAc,GAAKp4C,EAAK,GAAK8B,EAAO,GAEpD,CAEA,OADAjV,KAAKsmD,QAAUrxC,EACRjV,KAAKsmD,OACd,CAOA,MAAAzC,GACE,OAAO7jD,KAAK+qD,WAAWlH,QACzB,CAQA,OAAAlc,GACE,OAAQ3nC,KAAK8iD,MAAoC9iD,KAAK8iD,MAAjC9iD,KAAK+qD,WAAWpjB,SACvC,CAOA,QAAAghB,GACE,MAAM/iC,EAAQ5lB,KAAKylD,gBACnB,OAAIzlD,KAAK8iD,MACA9iD,KAAK8iD,MAAM,GAAKl9B,EAAM,GT5fzB,GS8fF5lB,KAAK+qD,WAAW9I,gBACXjiD,KAAK+qD,WAAWpjB,UAAU,GAAK/hB,EAAM,QAD9C,CAIF,CAOA,SAAAvP,GACE,MAAMuP,EAAQ5lB,KAAKylD,gBACnB,OAAIzlD,KAAK8iD,MACA9iD,KAAK8iD,MAAM,GAAKl9B,EAAM,GT5gBzB,GS8gBF5lB,KAAK+qD,WAAW9I,gBACXjiD,KAAK+qD,WAAWpjB,UAAU,GAAK/hB,EAAM,QAD9C,CAIF,CASA,QAAAmgC,CAASngC,UACA5lB,KAAKmrD,gBACZ9oD,MAAM0jD,SAASngC,EACjB,CAMA,iBAAAogC,CAAkBrjD,GAChB3C,KAAK+qD,WAAWroD,iBAAiB,EAAkBC,EACrD,CAUA,IAAAsO,GACEjR,KAAK+qD,WAAW95C,MAClB,CAMA,mBAAAg1C,CAAoBtjD,GAClB3C,KAAK+qD,WAAWpnD,oBAAoB,EAAkBhB,EACxD,CAKA,KAAAu/C,GACE,OAAOliD,KAAK+qD,WAAW7I,OACzB,EAGF,YCrjBA,MAAM,GAIJ,WAAAniD,CAAYoH,GACVA,EAAUA,GAAW,CAAC,EAMtBnH,KAAK4iD,YAA2B5jD,IAAlBmI,EAAQsxC,MAAsBtxC,EAAQsxC,MAAQ,KAM5Dz4C,KAAKwrD,SAAWrkD,EAAQohD,QAMxBvoD,KAAKyrD,eAAiCzsD,IAArBmI,EAAQqhD,SAAyBrhD,EAAQqhD,SAAW,KAMrExoD,KAAK0rD,gBAAkBvkD,EAAQshD,eAM/BzoD,KAAK2rD,UAAYxkD,EAAQugD,SAMzB1nD,KAAK4rD,YAAczkD,EAAQygD,WAM3B5nD,KAAK6rD,OAAS1kD,EAAQ80B,KACxB,CAOA,KAAAnX,GACE,MAAM2zB,EAAQz4C,KAAK0oD,WACnB,OAAO,IAAI,GAAO,CAChBjQ,MAAO1zC,MAAMC,QAAQyzC,GAASA,EAAMp5B,QAAUo5B,QAASz5C,EACvDupD,QAASvoD,KAAK+oD,aACdP,SAAUxoD,KAAK4oD,cAAgB5oD,KAAK4oD,cAAcvpC,aAAUrgB,EAC5DypD,eAAgBzoD,KAAK6oD,oBACrBnB,SAAU1nD,KAAK8oD,cACflB,WAAY5nD,KAAKgpD,gBACjB/sB,MAAOj8B,KAAK2oD,YAEhB,CAOA,QAAAD,GACE,OAAO1oD,KAAK4iD,MACd,CAOA,UAAAmG,GACE,OAAO/oD,KAAKwrD,QACd,CAOA,WAAA5C,GACE,OAAO5oD,KAAKyrD,SACd,CAOA,iBAAA5C,GACE,OAAO7oD,KAAK0rD,eACd,CAOA,WAAA5C,GACE,OAAO9oD,KAAK2rD,SACd,CAOA,aAAA3C,GACE,OAAOhpD,KAAK4rD,WACd,CAOA,QAAAjD,GACE,OAAO3oD,KAAK6rD,MACd,CAQA,QAAA9B,CAAStR,GACPz4C,KAAK4iD,OAASnK,CAChB,CAQA,UAAAqT,CAAWvD,GACTvoD,KAAKwrD,SAAWjD,CAClB,CAQA,WAAAa,CAAYZ,GACVxoD,KAAKyrD,UAAYjD,CACnB,CAQA,iBAAAuD,CAAkBtD,GAChBzoD,KAAK0rD,gBAAkBjD,CACzB,CAQA,WAAAuD,CAAYtE,GACV1nD,KAAK2rD,UAAYjE,CACnB,CAQA,aAAAuE,CAAcrE,GACZ5nD,KAAK4rD,YAAchE,CACrB,CAQA,QAAAsE,CAASjwB,GACPj8B,KAAK6rD,OAAS5vB,CAChB,EAGF,YClEA,MAAMkwB,GAIJ,WAAApsD,CAAYoH,GACVA,EAAUA,GAAW,CAAC,EAMtBnH,KAAK4nC,UAAY,KAMjB5nC,KAAKosD,kBAAoBC,QAEArtD,IAArBmI,EAAQgyB,UACVn5B,KAAKssD,YAAYnlD,EAAQgyB,UAO3Bn5B,KAAKomD,WAAyBpnD,IAAjBmI,EAAQk/C,KAAqBl/C,EAAQk/C,KAAO,KAMzDrmD,KAAKygD,YAA2BzhD,IAAlBmI,EAAQ44C,MAAsB54C,EAAQ44C,MAAQ,KAM5D//C,KAAKovC,eAAiCpwC,IAArBmI,EAAQolD,SAAyBplD,EAAQolD,SAAW,KAMrEvsD,KAAKwsD,2BAC8BxtD,IAAjCmI,EAAQslD,qBACJtlD,EAAQslD,qBACR,KAMNzsD,KAAK0mD,aAA6B1nD,IAAnBmI,EAAQw/C,OAAuBx/C,EAAQw/C,OAAS,KAM/D3mD,KAAK0sD,WAAyB1tD,IAAjBmI,EAAQwlD,KAAqBxlD,EAAQwlD,KAAO,KAMzD3sD,KAAK4sD,QAAUzlD,EAAQilC,MACzB,CAOA,KAAAtnB,GACE,IAAIqU,EAAWn5B,KAAKyoC,cAMpB,OALItP,GAAgC,iBAAbA,IACrBA,EAAgE,EAE9DrU,SAEG,IAAIqnC,GAAM,CACfhzB,SAAUA,QAAYn6B,EACtBqnD,KAAMrmD,KAAK8mD,UAAY9mD,KAAK8mD,UAAUhiC,aAAU9lB,EAChD+gD,MAAO//C,KAAK2gD,WAAa3gD,KAAK2gD,WAAW77B,aAAU9lB,EACnDutD,SAAUvsD,KAAKqwC,oBAAiBrxC,EAChC2nD,OAAQ3mD,KAAKknD,YAAclnD,KAAKknD,YAAYpiC,aAAU9lB,EACtD2tD,KAAM3sD,KAAK6sD,UAAY7sD,KAAK6sD,UAAU/nC,aAAU9lB,EAChDotC,OAAQpsC,KAAK2sC,aAEjB,CAQA,WAAA0D,GACE,OAAOrwC,KAAKovC,SACd,CAQA,WAAA0d,CAAYP,GACVvsD,KAAKovC,UAAYmd,CACnB,CAQA,uBAAAQ,CAAwBR,GACtBvsD,KAAKwsD,sBAAwBD,CAC/B,CAQA,uBAAAS,GACE,OAAOhtD,KAAKwsD,qBACd,CASA,WAAA/jB,GACE,OAAOzoC,KAAK4nC,SACd,CAQA,mBAAAqlB,GACE,OAAOjtD,KAAKosD,iBACd,CAOA,OAAAtF,GACE,OAAO9mD,KAAKomD,KACd,CAOA,OAAAe,CAAQd,GACNrmD,KAAKomD,MAAQC,CACf,CAOA,QAAA1F,GACE,OAAO3gD,KAAKygD,MACd,CAOA,QAAAW,CAASrB,GACP//C,KAAKygD,OAASV,CAChB,CAOA,SAAAmH,GACE,OAAOlnD,KAAK0mD,OACd,CAOA,SAAAc,CAAUb,GACR3mD,KAAK0mD,QAAUC,CACjB,CAOA,OAAAkG,GACE,OAAO7sD,KAAK0sD,KACd,CAOA,OAAAQ,CAAQP,GACN3sD,KAAK0sD,MAAQC,CACf,CAOA,SAAAhgB,GACE,OAAO3sC,KAAK4sD,OACd,CAUA,WAAAN,CAAYnzB,GACc,mBAAbA,EACTn5B,KAAKosD,kBAAoBjzB,EACI,iBAAbA,EAChBn5B,KAAKosD,kBAAoB,SAAUe,GACjC,OACEA,EAAQ1tD,IAAI05B,EAEhB,EACUA,OAEYn6B,IAAbm6B,IACTn5B,KAAKosD,kBAAoB,WACvB,OAA4D,CAC9D,GAJApsD,KAAKosD,kBAAoBC,GAM3BrsD,KAAK4nC,UAAYzO,CACnB,CAQA,SAAAoU,CAAUnB,GACRpsC,KAAK4sD,QAAUxgB,CACjB,EAyCF,IAAIghB,GAAgB,KAOb,SAASC,GAAmBF,EAASj6C,GAM1C,IAAKk6C,GAAe,CAClB,MAAM/G,EAAO,IAAI,GAAK,CACpB5N,MAAO,0BAEHkO,EAAS,IAAI,GAAO,CACxBlO,MAAO,UACPxc,MAAO,OAETmxB,GAAgB,CACd,IAAIjB,GAAM,CACRpM,MAAO,IAAIuN,GAAY,CACrBjH,KAAMA,EACNM,OAAQA,EACRlnC,OAAQ,IAEV4mC,KAAMA,EACNM,OAAQA,IAGd,CACA,OAAOyG,EACT,CAqEA,SAASf,GAAwBc,GAC/B,OAAOA,EAAQ1kB,aACjB,CAEA,YCzfA,MAAM8kB,GAIJ,WAAAxtD,CAAYoH,GACVA,EAAUA,GAAW,CAAC,EAMtBnH,KAAKwtD,MAAQrmD,EAAQsmD,KAMrBztD,KAAK+hC,UAAY56B,EAAQoO,SAMzBvV,KAAK6kD,gBAAkB19C,EAAQ29C,eAM/B9kD,KAAK0tD,aAAevmD,EAAQwmD,YAM5B3tD,KAAK+kD,OAAS59C,EAAQye,MAMtB5lB,KAAKglD,YAAcpL,QAAyB56C,IAAlBmI,EAAQye,MAAsBze,EAAQye,MAAQ,GAMxE5lB,KAAK0sD,MAAQvlD,EAAQwlD,KAMrB3sD,KAAK4tD,WAAazmD,EAAQ0mD,UAM1B7tD,KAAK8tD,SAAW3mD,EAAQ4mD,QAMxB/tD,KAAKguD,QAAU7mD,EAAQ8mD,OAMvBjuD,KAAKkuD,cAAgB/mD,EAAQgnD,aAM7BnuD,KAAKomD,WACcpnD,IAAjBmI,EAAQk/C,KACJl/C,EAAQk/C,KACR,IAAI,GAAK,CAAC5N,MAjIO,SAuIvBz4C,KAAKouD,eACkBpvD,IAArBmI,EAAQknD,SAAyBlnD,EAAQknD,SAAW7gD,KAAK0E,GAAK,EAMhElS,KAAKsuD,gBACmBtvD,IAAtBmI,EAAQonD,UAA0BpnD,EAAQonD,UAAY,QAMxDvuD,KAAKwuD,YAAcrnD,EAAQsnD,SAM3BzuD,KAAK0mD,aAA6B1nD,IAAnBmI,EAAQw/C,OAAuBx/C,EAAQw/C,OAAS,KAM/D3mD,KAAK0uD,cAA+B1vD,IAApBmI,EAAQgtB,QAAwBhtB,EAAQgtB,QAAU,EAMlEn0B,KAAK2uD,cAA+B3vD,IAApBmI,EAAQitB,QAAwBjtB,EAAQitB,QAAU,EAMlEp0B,KAAK4uD,gBAAkBznD,EAAQ0nD,eAC3B1nD,EAAQ0nD,eACR,KAMJ7uD,KAAK8uD,kBAAoB3nD,EAAQ4nD,iBAC7B5nD,EAAQ4nD,iBACR,KAMJ/uD,KAAK4yB,cAA+B5zB,IAApBmI,EAAQ0rB,QAAwB,KAAO1rB,EAAQ0rB,QAM/D7yB,KAAKmlD,eAAiBh+C,EAAQi+C,aAChC,CAOA,KAAAtgC,GACE,MAAMc,EAAQ5lB,KAAKqlD,WACnB,OAAO,IAAIkI,GAAK,CACdE,KAAMztD,KAAKgvD,UACXT,UAAWvuD,KAAKivD,eAChBhB,OAAQjuD,KAAKkvD,YACbb,SAAUruD,KAAKmvD,cACfV,SAAUzuD,KAAKovD,cACf75C,SAAUvV,KAAKw0B,cACfswB,eAAgB9kD,KAAKslD,oBACrBqI,YAAa3tD,KAAKqvD,iBAClBzpC,MAAO7gB,MAAMC,QAAQ4gB,GAASA,EAAMvG,QAAUuG,EAC9C+mC,KAAM3sD,KAAK6sD,UACXgB,UAAW7tD,KAAKsvD,eAChBvB,QAAS/tD,KAAKuvD,aACdpB,aAAcnuD,KAAKwvD,kBACnBnJ,KAAMrmD,KAAK8mD,UAAY9mD,KAAK8mD,UAAUhiC,aAAU9lB,EAChD2nD,OAAQ3mD,KAAKknD,YAAclnD,KAAKknD,YAAYpiC,aAAU9lB,EACtDm1B,QAASn0B,KAAKyvD,aACdr7B,QAASp0B,KAAK0vD,aACdb,eAAgB7uD,KAAK2vD,oBACjB3vD,KAAK2vD,oBAAoB7qC,aACzB9lB,EACJ+vD,iBAAkB/uD,KAAK4vD,sBACnB5vD,KAAK4vD,sBAAsB9qC,aAC3B9lB,EACJ6zB,QAAS7yB,KAAK6vD,mBAAgB7wD,EAC9BomD,cAAeplD,KAAKwlD,oBAExB,CAOA,WAAA4J,GACE,OAAOpvD,KAAKwuD,SACd,CAOA,OAAAQ,GACE,OAAOhvD,KAAKwtD,KACd,CAOA,WAAA2B,GACE,OAAOnvD,KAAKouD,SACd,CAOA,YAAAa,GACE,OAAOjvD,KAAKsuD,UACd,CAOA,SAAAY,GACE,OAAOlvD,KAAKguD,OACd,CAOA,UAAAyB,GACE,OAAOzvD,KAAK0uD,QACd,CAOA,UAAAgB,GACE,OAAO1vD,KAAK2uD,QACd,CAOA,OAAA7H,GACE,OAAO9mD,KAAKomD,KACd,CAOA,iBAAAd,GACE,OAAOtlD,KAAK6kD,eACd,CAOA,cAAAwK,GACE,OAAOrvD,KAAK0tD,YACd,CAOA,WAAAl5B,GACE,OAAOx0B,KAAK+hC,SACd,CAOA,QAAAsjB,GACE,OAAOrlD,KAAK+kD,MACd,CAMA,aAAAU,GACE,OAAOzlD,KAAKglD,WACd,CAOA,SAAAkC,GACE,OAAOlnD,KAAK0mD,OACd,CAOA,OAAAmG,GACE,OAAO7sD,KAAK0sD,KACd,CAOA,YAAA4C,GACE,OAAOtvD,KAAK4tD,UACd,CAOA,UAAA2B,GACE,OAAOvvD,KAAK8tD,QACd,CAOA,eAAA0B,GACE,OAAOxvD,KAAKkuD,aACd,CAOA,iBAAAyB,GACE,OAAO3vD,KAAK4uD,eACd,CAOA,mBAAAgB,GACE,OAAO5vD,KAAK8uD,iBACd,CAOA,UAAAe,GACE,OAAO7vD,KAAK4yB,QACd,CAOA,gBAAA4yB,GACE,OAAOxlD,KAAKmlD,cACd,CAQA,WAAA2K,CAAYrB,GACVzuD,KAAKwuD,UAAYC,CACnB,CAQA,OAAAsB,CAAQtC,GACNztD,KAAKwtD,MAAQC,CACf,CAQA,WAAAuC,CAAY3B,GACVruD,KAAKouD,UAAYC,CACnB,CAQA,UAAA4B,CAAW97B,GACTn0B,KAAK0uD,SAAWv6B,CAClB,CAQA,UAAA+7B,CAAW97B,GACTp0B,KAAK2uD,SAAWv6B,CAClB,CAQA,YAAA+7B,CAAa5B,GACXvuD,KAAKsuD,WAAaC,CACpB,CAOA,SAAA6B,CAAUnC,GACRjuD,KAAKguD,QAAUC,CACjB,CAQA,iBAAAnI,CAAkBhB,GAChB9kD,KAAK6kD,gBAAkBC,CACzB,CAQA,cAAAuL,CAAe1C,GACb3tD,KAAK0tD,aAAeC,CACtB,CAQA,OAAAxG,CAAQd,GACNrmD,KAAKomD,MAAQC,CACf,CAQA,WAAA3yB,CAAYne,GACVvV,KAAK+hC,UAAYxsB,CACnB,CAQA,QAAAwwC,CAASngC,GACP5lB,KAAK+kD,OAASn/B,EACd5lB,KAAKglD,YAAcpL,QAAiB56C,IAAV4mB,EAAsBA,EAAQ,EAC1D,CAQA,SAAA4hC,CAAUb,GACR3mD,KAAK0mD,QAAUC,CACjB,CAQA,OAAAuG,CAAQP,GACN3sD,KAAK0sD,MAAQC,CACf,CAQA,YAAA2D,CAAazC,GACX7tD,KAAK4tD,WAAaC,CACpB,CAQA,UAAA0C,CAAWxC,GACT/tD,KAAK8tD,SAAWC,CAClB,CAQA,eAAAyC,CAAgBrC,GACdnuD,KAAKkuD,cAAgBC,CACvB,CAQA,iBAAAsC,CAAkBpK,GAChBrmD,KAAK4uD,gBAAkBvI,CACzB,CAQA,mBAAAqK,CAAoB/J,GAClB3mD,KAAK8uD,kBAAoBnI,CAC3B,CAQA,UAAAgK,CAAW99B,GACT7yB,KAAK4yB,SAAWC,CAClB,EAGF,YCnlBA,SAAS,GAAOgK,GACd,OAAO,CACT,CAUO,SAAS+zB,GAAqBC,GACnC,MAAMC,EAAiB3V,KACjB4V,EAuFD,SAAsBF,EAAOh0B,GAClC,MAAMj8B,EAASiwD,EAAMjwD,OAKfowD,EAAgB,IAAIjsD,MAAMnE,GAEhC,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAUC,EAAG,CAC/B,MAAMowD,EAAOJ,EAAMhwD,GACb41B,EACJ,WAAYw6B,EACRlT,GAAgBkT,EAAKx6B,OAAQqjB,GAAajd,GAC1C,GAKN,IAAIq0B,EACJ,GAAInsD,MAAMC,QAAQisD,EAAK5zB,OAAQ,CAC7B,MAAM8zB,EAAcF,EAAK5zB,MAAMz8B,OAC/BswD,EAAS,IAAInsD,MAAMosD,GACnB,IAAK,IAAIxqC,EAAI,EAAGA,EAAIwqC,IAAexqC,EACjCuqC,EAAOvqC,GAAKyqC,GAAWH,EAAK5zB,MAAM1W,GAAIkW,EAE1C,MACEq0B,EAAS,CAACE,GAAWH,EAAK5zB,MAAOR,IAGnCm0B,EAAcnwD,GAAK,CAAC41B,SAAQy6B,SAC9B,CAEA,OAAO,SAAUr0B,GAIf,MAAMq0B,EAAS,GAEf,IAAIG,GAAc,EAClB,IAAK,IAAIxwD,EAAI,EAAGA,EAAID,IAAUC,EAE5B,IAAKywD,EADmBN,EAAcnwD,GAAG41B,QACpBoG,MAGjBg0B,EAAMhwD,GAAG0wD,OAAQF,GAArB,CAGAA,GAAc,EACd,IAAK,MAAMG,KAAkBR,EAAcnwD,GAAGqwD,OAAQ,CACpD,MAAM7zB,EAAQm0B,EAAe30B,GACxBQ,GAGL6zB,EAAOnuD,KAAKs6B,EACd,CARA,CAWF,OAAO6zB,CACT,CACF,CAlJoBO,CAAaZ,EAAOC,GAChCY,EfzCC,CACLtW,UAAW,CAAC,EACZxqB,WAAY,CAAC,EACb1d,WAAY6Q,IACZs3B,UAAW,KACXC,aAAc,IeqChB,OAAO,SAAU6R,EAASj6C,GAGxB,GAFAw+C,EAAkB9gC,WAAau8B,EAAQhnD,wBACvCurD,EAAkBx+C,WAAaA,EAC3B49C,EAAezV,UAAW,CAC5B,MAAM1uC,EAAKwgD,EAAQwE,QAEjBD,EAAkBrW,eADTr8C,IAAP2N,EAC4BA,EAEA,IAElC,CAMA,OALImkD,EAAexV,eACjBoW,EAAkBpW,aAAesC,GAC/BuP,EAAQ1kB,gBAGLsoB,EAAUW,EACnB,CACF,CAUO,SAASE,GAA0BC,GACxC,MAAMf,EAAiB3V,KACjBv6C,EAASixD,EAAWjxD,OAKpBkxD,EAAa,IAAI/sD,MAAMnE,GAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAUC,EAC5BixD,EAAWjxD,GAAKuwD,GAAWS,EAAWhxD,GAAIiwD,GAE5C,MAAMY,EfjFC,CACLtW,UAAW,CAAC,EACZxqB,WAAY,CAAC,EACb1d,WAAY6Q,IACZs3B,UAAW,KACXC,aAAc,IeiFV4V,EAAS,IAAInsD,MAAMnE,GAEzB,OAAO,SAAUusD,EAASj6C,GAGxB,GAFAw+C,EAAkB9gC,WAAau8B,EAAQhnD,wBACvCurD,EAAkBx+C,WAAaA,EAC3B49C,EAAezV,UAAW,CAC5B,MAAM1uC,EAAKwgD,EAAQwE,QAEjBD,EAAkBrW,eADTr8C,IAAP2N,EAC4BA,EAEA,IAElC,CACA,IAAIolD,EAAe,EACnB,IAAK,IAAIlxD,EAAI,EAAGA,EAAID,IAAUC,EAAG,CAC/B,MAAMw8B,EAAQy0B,EAAWjxD,GAAG6wD,GACxBr0B,IACF6zB,EAAOa,GAAgB10B,EACvB00B,GAAgB,EAEpB,CAEA,OADAb,EAAOtwD,OAASmxD,EACTb,CACT,CACF,CAwFO,SAASE,GAAWY,EAAWn1B,GACpC,MAAMo1B,EAAeC,GAAUF,EAAW,GAAIn1B,GACxCs1B,EAAiBC,GAAYJ,EAAW,GAAIn1B,GAC5Cw1B,EAyNR,SAAmBL,EAAWn1B,GAC5B,MAAMy1B,EAAS,QAMTC,EAAgBC,GAAgBR,EAAWM,EAAS,QAASz1B,GACnE,IAAK01B,EACH,OAAO,KAGT,MAAMN,EAAeC,GAAUF,EAAWM,EAAQz1B,GAE5C41B,EAAyBP,GAC7BF,EACAM,EAAS,cACTz1B,GAGIs1B,EAAiBC,GAAYJ,EAAWM,EAAQz1B,GAEhD61B,EAA2BN,GAC/BJ,EACAM,EAAS,cACTz1B,GAGI81B,EAAeH,GAAgBR,EAAWM,EAAS,OAAQz1B,GAE3D+1B,EAAmBC,GACvBb,EACAM,EAAS,YACTz1B,GAGIi2B,EAAkBD,GACtBb,EACAM,EAAS,WACTz1B,GAGIk2B,EAAkBF,GACtBb,EACAM,EAAS,WACTz1B,GAGIm2B,EAAmBC,GACvBjB,EACAM,EAAS,WACTz1B,GAGIq2B,EAAoBV,GACxBR,EACAM,EAAS,YACTz1B,GAGIs2B,EAAiBN,GAAgBb,EAAWM,EAAS,SAAUz1B,GAE/Du2B,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASz1B,GAE/Dy2B,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTz1B,GAGI02B,EAAmBV,GACvBb,EACAM,EAAS,WACTz1B,GAGI22B,EAAgBhB,GAAgBR,EAAWM,EAAS,QAASz1B,GAE7D42B,EAAkBjB,GACtBR,EACAM,EAAS,UACTz1B,GAGI62B,EAAmBlB,GACvBR,EACAM,EAAS,WACTz1B,GAGI82B,EAAsBV,GAC1BjB,EACAM,EAAS,eACTz1B,GAGI+2B,EAAkBC,GACtB7B,EACAM,EAAS,UACTz1B,GAIIuoB,EAAgB0O,GACpB9B,EACAM,EAAS,kBAGL3F,EAAO,IAAI,GAAK,CAACvH,kBAEvB,OAAO,SAAUvoB,GAuCf,GAtCA8vB,EAAKO,QAAQqF,EAAc11B,IAEvBo1B,GACFtF,EAAKxF,QAAQ8K,EAAap1B,IAGxB41B,GACF9F,EAAK8D,kBAAkBgC,EAAuB51B,IAG5Cs1B,GACFxF,EAAKnF,UAAU2K,EAAet1B,IAG5B61B,GACF/F,EAAK+D,oBAAoBgC,EAAyB71B,IAGhD81B,GACFhG,EAAKoD,QAAQ4C,EAAa91B,IAGxB+1B,GACFjG,EAAKqD,YAAY4C,EAAiB/1B,IAGhCi2B,GACFnG,EAAKsD,WAAW6C,EAAgBj2B,IAG9Bk2B,GACFpG,EAAKuD,WAAW6C,EAAgBl2B,IAG9Bm2B,GACFrG,EAAKmD,YAAYkD,EAAiBn2B,IAGhCq2B,EAAmB,CACrB,MAAM3E,EAAY2E,EAAkBr2B,GACpC,GAAkB,UAAd0xB,GAAuC,SAAdA,EAC3B,MAAM,IAAIjpD,MAAM,6CAElBqnD,EAAKwD,aAAa5B,EACpB,CAkBA,GAhBI4E,GACFxG,EAAKyD,UAAU+C,EAAet2B,IAG5Bu2B,GACFzG,EAAK5G,SAASqN,EAAcv2B,IAG1By2B,GACF3G,EAAK7G,kBAAkBwN,EAAuBz2B,IAG5C02B,GACF5G,EAAKj5B,YAAY6/B,EAAiB12B,IAGhC22B,EAAe,CACjB,MAAM3F,EAAY2F,EAAc32B,GAChC,GACgB,SAAdgxB,GACc,WAAdA,GACc,UAAdA,GACc,QAAdA,GACc,UAAdA,EAEA,MAAM,IAAIvoD,MACR,8DAGJqnD,EAAK2D,aAAazC,EACpB,CAEA,GAAI4F,EAAiB,CACnB,MAAM1F,EAAU0F,EAAgB52B,GAChC,GAAgB,SAAZkxB,GAAkC,UAAZA,GAAmC,WAAZA,EAC/C,MAAM,IAAIzoD,MAAM,oDAElBqnD,EAAK4D,WAAWxC,EAClB,CAEA,GAAI2F,EAAkB,CACpB,MAAMvF,EAAeuF,EAAiB72B,GACtC,GACmB,WAAjBsxB,GACiB,QAAjBA,GACiB,WAAjBA,GACiB,eAAjBA,GACiB,YAAjBA,EAEA,MAAM,IAAI7oD,MACR,0EAGJqnD,EAAK6D,gBAAgBrC,EACvB,CAUA,OARIyF,GACFjH,EAAKgE,WAAWiD,EAAgB/2B,IAG9B82B,GACFhH,EAAK0D,eAAesD,EAAoB92B,IAGnC8vB,CACT,CACF,CAxbuBoH,CAAU/B,EAAWn1B,GACpCm3B,EAkcR,SAAoBhC,EAAWn1B,GAC7B,MAAI,aAAcm1B,EAoBpB,SAAmBA,EAAWn1B,GAC5B,MAAMy1B,EAAS,QAGT2B,EAAU3B,EAAS,MACnBtS,EAAMkU,GAAclC,EAAUiC,GAAUA,GAGxCE,EAAiBC,GACrBpC,EACAM,EAAS,SACTz1B,GAGIu2B,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASz1B,GAE/Dw3B,EAAkBxB,GACtBb,EACAM,EAAS,UACTz1B,GAGIy3B,EAAuBF,GAC3BpC,EACAM,EAAS,eACTz1B,GAGI02B,EAAmBV,GACvBb,EACAM,EAAS,WACTz1B,GAGIy2B,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTz1B,GAII4tB,EAAe8J,GAAmBvC,EAAWM,EAAS,iBACtD3H,EAAe6J,GACnBxC,EACAM,EAAS,kBAELzH,EAAe2J,GACnBxC,EACAM,EAAS,kBAEL7Z,EAqfR,SAA2BuZ,EAAWjwD,GACpC,MAAMy5C,EAAUwW,EAAUjwD,GAC1B,QAAgB/C,IAAZw8C,EAGJ,OAAOiZ,GAAiBjZ,EAASz5C,EACnC,CA3fgB2yD,CAAkB1C,EAAWM,EAAS,SAC9ChR,EA6ZR,SAAwB0Q,EAAWjwD,GACjC,MAAMy5C,EAAUwW,EAAUjwD,GAC1B,QAAgB/C,IAAZw8C,EAAJ,CAGA,GAAuB,iBAAZA,EACT,MAAM,IAAIl2C,MAAM,yBAAyBvD,KAE3C,OAAOy5C,CAJP,CAKF,CAtasBmZ,CAAe3C,EAAWM,EAAS,gBACjDr9C,EAmdR,SAA6B+8C,EAAWjwD,GACtC,MAAMy5C,EAAUwW,EAAUjwD,GAC1B,QAAgB/C,IAAZw8C,EAGJ,OAAOoZ,GAAmBpZ,EAASz5C,EACrC,CAzdiB8yD,CAAoB7C,EAAWM,EAAS,UACjDpH,EAAeqJ,GAAmBvC,EAAWM,EAAS,iBACtDr2B,EAAQ64B,GAAe9C,EAAWM,EAAS,SAC3Cp2B,EAAS44B,GAAe9C,EAAWM,EAAS,UAC5Cn/C,EA8XR,SAAsB6+C,EAAWjwD,GAC/B,MAAMy5C,EAAUwW,EAAUjwD,GAC1B,QAAgB/C,IAAZw8C,EAAJ,CAGA,GAAuB,iBAAZA,EACT,OAAO5B,GAAO4B,GAEhB,IAAKz2C,MAAMC,QAAQw2C,GACjB,MAAM,IAAIl2C,MAAM,uCAAuCvD,KAEzD,GACqB,IAAnBy5C,EAAQ56C,QACc,iBAAf46C,EAAQ,IACO,iBAAfA,EAAQ,GAEf,MAAM,IAAIl2C,MAAM,uCAAuCvD,KAEzD,OAAOy5C,CAdP,CAeF,CAjZeuZ,CAAa/C,EAAWM,EAAS,QACxClN,EAAgB0O,GACpB9B,EACAM,EAAS,kBAGL0C,EAAO,IAAI,GAAK,CACpBhV,MACAyK,eACAE,eACAE,eACApS,QACA6I,cACArsC,SACAi2C,eACAhvB,SACAD,QACA9oB,OACAiyC,kBAGF,OAAO,SAAUvoB,GAwBf,OAvBIw3B,GACFW,EAAK3nB,WAAWgnB,EAAgBx3B,IAG9By3B,GACFU,EAAKnP,gBAAgByO,EAAqBz3B,IAGxC02B,GACFyB,EAAKthC,YAAY6/B,EAAiB12B,IAGhCy2B,GACF0B,EAAKlP,kBAAkBwN,EAAuBz2B,IAG5Cu2B,GACF4B,EAAKjP,SAASqN,EAAcv2B,IAG1Bs3B,GACFa,EAAK1J,UAAU6I,EAAet3B,IAEzBm4B,CACT,CACF,CA1HWC,CAAUjD,EAAWn1B,GAG1B,iBAAkBm1B,EA8HxB,SAAoBA,EAAWn1B,GAC7B,MAAMy1B,EAAS,SAGT4C,EAAa5C,EAAS,SACtB6C,EAAa7C,EAAS,SACtB/L,EAAS6O,GAAcpD,EAAUkD,GAAaA,GAC9Cz1C,EAAS21C,GAAcpD,EAAUmD,GAAaA,GAG9ClD,EAAeC,GAAUF,EAAWM,EAAQz1B,GAC5Cs1B,EAAiBC,GAAYJ,EAAWM,EAAQz1B,GAChDu2B,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASz1B,GAC/Dy3B,EAAuBF,GAC3BpC,EACAM,EAAS,eACTz1B,GAEI02B,EAAmBV,GACvBb,EACAM,EAAS,WACTz1B,GAEIy2B,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTz1B,GAII4pB,EAAUqO,GAAe9C,EAAWM,EAAS,WAC7Cx7C,EAAQg+C,GAAe9C,EAAWM,EAAS,SAC3ClN,EAAgB0O,GACpB9B,EACAM,EAAS,kBAGL+C,EAAQ,IAAI,GAAa,CAC7B9O,SACA9mC,SACAgnC,UACA3vC,QACAsuC,kBAGF,OAAO,SAAUvoB,GAoBf,OAnBIo1B,GACFoD,EAAMlO,QAAQ8K,EAAap1B,IAEzBs1B,GACFkD,EAAM7N,UAAU2K,EAAet1B,IAE7By3B,GACFe,EAAMxP,gBAAgByO,EAAqBz3B,IAEzC02B,GACF8B,EAAM3hC,YAAY6/B,EAAiB12B,IAEjCy2B,GACF+B,EAAMvP,kBAAkBwN,EAAuBz2B,IAE7Cu2B,GACFiC,EAAMtP,SAASqN,EAAcv2B,IAGxBw4B,CACT,CACF,CAhMWC,CAAWtD,EAAWn1B,GAG3B,kBAAmBm1B,EAoMzB,SAAqBA,EAAWn1B,GAC9B,MAAMy1B,EAAS,UAGTL,EAAeC,GAAUF,EAAWM,EAAQz1B,GAC5Cs1B,EAAiBC,GAAYJ,EAAWM,EAAQz1B,GAChD04B,EAAiB1C,GAAgBb,EAAWM,EAAS,SAAUz1B,GAC/Du2B,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASz1B,GAC/Dy3B,EAAuBF,GAC3BpC,EACAM,EAAS,eACTz1B,GAEI02B,EAAmBV,GACvBb,EACAM,EAAS,WACTz1B,GAEIy2B,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTz1B,GAIIuoB,EAAgB0O,GACpB9B,EACAM,EAAS,kBAGLkD,EAAS,IAAIlI,GAAO,CACxB7tC,OAAQ,EACR2lC,kBAGF,OAAO,SAAUvoB,GAuBf,OAtBI04B,GACFC,EAAO3L,UAAU0L,EAAe14B,IAE9Bo1B,GACFuD,EAAOrO,QAAQ8K,EAAap1B,IAE1Bs1B,GACFqD,EAAOhO,UAAU2K,EAAet1B,IAE9By3B,GACFkB,EAAO3P,gBAAgByO,EAAqBz3B,IAE1C02B,GACFiC,EAAO9hC,YAAY6/B,EAAiB12B,IAElCy2B,GACFkC,EAAO1P,kBAAkBwN,EAAuBz2B,IAE9Cu2B,GACFoC,EAAOzP,SAASqN,EAAcv2B,IAGzB24B,CACT,CACF,CA/PWC,CAAYzD,EAAWn1B,GAGzB,IACT,CAhdwB64B,CAAW1D,EAAWn1B,GACtC84B,EAAiB9C,GAAgBb,EAAW,UAAWn1B,GAE7D,KACGo1B,GACAE,GACAE,GACA2B,GACA,EAAQhC,IAIT,MAAM,IAAI1sD,MACR,mEACEu3C,KAAKC,UAAUkV,IAIrB,MAAM30B,EAAQ,IAAI,GAClB,OAAO,SAAUR,GACf,IAAI+4B,GAAQ,EACZ,GAAI3D,EAAc,CAChB,MAAM5L,EAAO4L,EAAap1B,GACtBwpB,IACFuP,GAAQ,GAEVv4B,EAAM8pB,QAAQd,EAChB,CACA,GAAI8L,EAAgB,CAClB,MAAMxL,EAASwL,EAAet1B,GAC1B8pB,IACFiP,GAAQ,GAEVv4B,EAAMmqB,UAAUb,EAClB,CACA,GAAI0L,EAAc,CAChB,MAAM1F,EAAO0F,EAAax1B,GACtB8vB,IACFiJ,GAAQ,GAEVv4B,EAAM6vB,QAAQP,EAChB,CACA,GAAIqH,EAAe,CACjB,MAAMjU,EAAQiU,EAAcn3B,GACxBkjB,IACF6V,GAAQ,GAEVv4B,EAAM+jB,SAASrB,EACjB,CAIA,OAHI4V,GACFt4B,EAAMkQ,UAAUooB,EAAe94B,IAE7B+4B,EACK,KAEFv4B,CACT,CACF,CAYA,SAAS60B,GAAUF,EAAWM,EAAQz1B,GACpC,IAAIg5B,EACJ,GAAIvD,EAAS,qBAAsBN,EACjC6D,EAqqBJ,SAA0B7D,EAAWM,EAAQz1B,GAC3C,MAAMi5B,EAAetD,GACnBR,EACAM,EAAS,cACTz1B,GAEIk5B,EAAkBC,GACtBhE,EACAM,EAAS,iBACTz1B,GAEIo5B,EAAuBD,GAC3BhE,EACAM,EAAS,eACTz1B,GAEIq5B,EAAiBC,GACrBnE,EACAM,EAAS,QACTz1B,GAEF,OAAO,SAAUA,GACf,MAAO,CACLmjB,IAAK8V,EAAaj5B,GAClB5nB,OAAQ8gD,GAAmBA,EAAgBl5B,GAC3C1pB,KAAM8iD,GAAwBA,EAAqBp5B,GACnD4b,MAAOyd,GAAkBA,EAAer5B,GAE5C,CACF,CAlsBoBu5B,CAAiBpE,EAAWM,EAAS,QAASz1B,OACzD,CACL,GAAyC,SAArCm1B,EAAUM,EAAS,cAErB,OAAQz1B,GAAY,KAGtBg5B,EAAgBM,GACdnE,EACAM,EAAS,aACTz1B,EAEJ,CACA,IAAKg5B,EACH,OAAO,KAGT,MAAMxP,EAAO,IAAI,GACjB,OAAO,SAAUxpB,GACf,MAAM4b,EAAQod,EAAch5B,GAC5B,OAAI4b,IAAUH,GACL,MAET+N,EAAK0D,SAAStR,GACP4N,EACT,CACF,CAYA,SAAS+L,GAAYJ,EAAWM,EAAQz1B,GACtC,MAAMw5B,EAAgBxD,GACpBb,EACAM,EAAS,eACTz1B,GAGIg5B,EAAgBM,GACpBnE,EACAM,EAAS,eACTz1B,GAGF,IAAKw5B,IAAkBR,EACrB,OAAO,KAGT,MAAMS,EAAkB9D,GACtBR,EACAM,EAAS,kBACTz1B,GAGI05B,EAAmB/D,GACvBR,EACAM,EAAS,mBACTz1B,GAGI25B,EAAmB3C,GACvB7B,EACAM,EAAS,mBACTz1B,GAGI45B,EAAyB5D,GAC7Bb,EACAM,EAAS,0BACTz1B,GAGI65B,EAAqB7D,GACzBb,EACAM,EAAS,qBACTz1B,GAGI8pB,EAAS,IAAI,GACnB,OAAO,SAAU9pB,GACf,GAAIg5B,EAAe,CACjB,MAAMpd,EAAQod,EAAch5B,GAC5B,GAAI4b,IAAUH,GACZ,OAAO,KAETqO,EAAOoD,SAAStR,EAClB,CAMA,GAJI4d,GACF1P,EAAOuF,SAASmK,EAAcx5B,IAG5By5B,EAAiB,CACnB,MAAM/N,EAAU+N,EAAgBz5B,GAChC,GAAgB,SAAZ0rB,GAAkC,UAAZA,GAAmC,WAAZA,EAC/C,MAAM,IAAIjjD,MAAM,4CAElBqhD,EAAOmF,WAAWvD,EACpB,CAEA,GAAIgO,EAAkB,CACpB,MAAM7O,EAAW6O,EAAiB15B,GAClC,GACe,UAAb6qB,GACa,UAAbA,GACa,UAAbA,EAEA,MAAM,IAAIpiD,MAAM,6CAElBqhD,EAAOqF,YAAYtE,EACrB,CAcA,OAZI8O,GACF7P,EAAOyC,YAAYoN,EAAiB35B,IAGlC45B,GACF9P,EAAOoF,kBAAkB0K,EAAuB55B,IAG9C65B,GACF/P,EAAOsF,cAAcyK,EAAmB75B,IAGnC8pB,CACT,CACF,CAsgBA,SAASkM,GAAgBb,EAAW5b,EAAMvZ,GACxC,KAAMuZ,KAAQ4b,GACZ,OAEF,MAAMjB,EAAYhT,GAAgBiU,EAAU5b,GAAO2D,GAAYld,GAC/D,OAAO,SAAUA,GACf,OAAOu4B,GAAcrE,EAAUl0B,GAAUuZ,EAC3C,CACF,CAQA,SAASoc,GAAgBR,EAAW5b,EAAMvZ,GACxC,KAAMuZ,KAAQ4b,GACZ,OAAO,KAET,MAAMjB,EAAYhT,GAAgBiU,EAAU5b,GAAO4D,GAAYnd,GAC/D,OAAO,SAAUA,GACf,OAAOq3B,GAAcnD,EAAUl0B,GAAUuZ,EAC3C,CACF,CAuCA,SAAS6c,GAAiBjB,EAAW5b,EAAMvZ,GACzC,KAAMuZ,KAAQ4b,GACZ,OAAO,KAET,MAAMjB,EAAYhT,GAAgBiU,EAAU5b,GAAO0D,GAAajd,GAChE,OAAO,SAAUA,GACf,MAAMt7B,EAAQwvD,EAAUl0B,GACxB,GAAqB,kBAAVt7B,EACT,MAAM,IAAI+D,MAAM,0BAA0B8wC,KAE5C,OAAO70C,CACT,CACF,CAQA,SAAS40D,GAAmBnE,EAAW5b,EAAMvZ,GAC3C,KAAMuZ,KAAQ4b,GACZ,OAAO,KAET,MAAMjB,EAAYhT,GAAgBiU,EAAU5b,GAAO6D,GAAWpd,GAC9D,OAAO,SAAUA,GACf,OAAO43B,GAAiB1D,EAAUl0B,GAAUuZ,EAC9C,CACF,CAQA,SAASyd,GAAqB7B,EAAW5b,EAAMvZ,GAC7C,KAAMuZ,KAAQ4b,GACZ,OAAO,KAET,MAAMjB,EAAYhT,GAAgBiU,EAAU5b,GAAO8D,GAAiBrd,GACpE,OAAO,SAAUA,GACf,OAAO+3B,GAAmB7D,EAAUl0B,GAAUuZ,EAChD,CACF,CAQA,SAASge,GAAoBpC,EAAW5b,EAAMvZ,GAC5C,KAAMuZ,KAAQ4b,GACZ,OAAO,KAET,MAAMjB,EAAYhT,GAAgBiU,EAAU5b,GAAO8D,GAAiBrd,GACpE,OAAO,SAAUA,GACf,MAAM31B,EAAQ0tD,GAAmB7D,EAAUl0B,GAAUuZ,GACrD,GAAqB,IAAjBlvC,EAAMtG,OACR,MAAM,IAAI0E,MAAM,4BAA4B8wC,KAE9C,OAAOlvC,CACT,CACF,CAQA,SAAS8uD,GAAchE,EAAW5b,EAAMvZ,GACtC,KAAMuZ,KAAQ4b,GACZ,OAAO,KAET,MAAMjB,EAAYhT,GAAgBiU,EAAU5b,GAAO8D,GAAiBrd,GACpE,OAAO,SAAUA,GACf,OAAO85B,GAAY5F,EAAUl0B,GAAUuZ,EACzC,CACF,CAQA,SAASid,GAAkBrB,EAAW5b,EAAMvZ,GAC1C,KAAMuZ,KAAQ4b,GACZ,OAAO,KAET,MAAMjB,EAAYhT,GAChBiU,EAAU5b,GACV8D,GAAkBH,GAClBld,GAEF,OAAO,SAAUA,GACf,OA+NqBt7B,EA/NEwvD,EAAUl0B,GA+NL96B,EA/Neq0C,EAgOxB,iBAAV70C,EACFA,EAEFo1D,GAAYp1D,EAAOQ,GAJ5B,IAAyBR,EAAOQ,CA9N9B,CACF,CAOA,SAAS+yD,GAAe9C,EAAWjwD,GACjC,MAAMR,EAAQywD,EAAUjwD,GACxB,QAAc/C,IAAVuC,EAAJ,CAGA,GAAqB,iBAAVA,EACT,MAAM,IAAI+D,MAAM,yBAAyBvD,KAE3C,OAAOR,CAJP,CAKF,CAiDA,SAASgzD,GAAmBvC,EAAWjwD,GACrC,MAAMy5C,EAAUwW,EAAUjwD,GAC1B,QAAgB/C,IAAZw8C,EAAJ,CAGA,GACc,gBAAZA,GACY,iBAAZA,GACY,aAAZA,GACY,cAAZA,EAEA,MAAM,IAAIl2C,MACR,kEAAkEvD,KAGtE,OAAOy5C,CAXP,CAYF,CAOA,SAASgZ,GAAwBxC,EAAWjwD,GAC1C,MAAMy5C,EAAUwW,EAAUjwD,GAC1B,QAAgB/C,IAAZw8C,EAAJ,CAGA,GAAgB,WAAZA,GAAoC,aAAZA,EAC1B,MAAM,IAAIl2C,MAAM,mCAAmCvD,KAErD,OAAOy5C,CAJP,CAKF,CAoBA,SAASsY,GAAsB9B,EAAWjwD,GACxC,MAAMy5C,EAAUwW,EAAUjwD,GAC1B,QAAgB/C,IAAZw8C,EAAJ,CAGA,GAAuB,iBAAZA,EACT,MAAM,IAAIl2C,MAAM,yBAAyBvD,KAE3C,GAAgB,cAAZy5C,GAAuC,aAAZA,GAAsC,SAAZA,EACvD,MAAM,IAAIl2C,MAAM,6CAA6CvD,KAE/D,OAAOy5C,CAPP,CAQF,CAoBA,SAASoZ,GAAmBrzD,EAAOQ,GACjC,IAAKgD,MAAMC,QAAQzD,GACjB,MAAM,IAAI+D,MAAM,yBAAyBvD,KAE3C,MAAMnB,EAASW,EAAMX,OACrB,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAUC,EAC5B,GAAwB,iBAAbU,EAAMV,GACf,MAAM,IAAIyE,MAAM,oCAAoCvD,KAGxD,OAAOR,CACT,CAOA,SAAS2yD,GAAc3yD,EAAOQ,GAC5B,GAAqB,iBAAVR,EACT,MAAM,IAAI+D,MAAM,yBAAyBvD,KAE3C,OAAOR,CACT,CAOA,SAAS6zD,GAAc7zD,EAAOQ,GAC5B,GAAqB,iBAAVR,EACT,MAAM,IAAI+D,MAAM,yBAAyBvD,KAE3C,OAAOR,CACT,CAOA,SAASkzD,GAAiBlzD,EAAOQ,GAC/B,GAAqB,iBAAVR,EACT,OAAOA,EAET,MAAM2F,EAAQ0tD,GAAmBrzD,EAAOQ,GAClCnB,EAASsG,EAAMtG,OACrB,GAAIA,EAAS,GAAKA,EAAS,EACzB,MAAM,IAAI0E,MAAM,2CAA2CvD,KAE7D,OAAOmF,CACT,CAOA,SAASyvD,GAAYp1D,EAAOQ,GAC1B,MAAMoR,EAAOyhD,GAAmBrzD,EAAOQ,GACvC,GAAoB,IAAhBoR,EAAKvS,OACP,MAAM,IAAI0E,MAAM,wCAAwCvD,KAE1D,OAAOoR,CACT,CC/uCA,MAAM,GACU,cA2RhB,GA3QA,cAA8B,GAI5B,WAAApT,CAAYoH,GACVA,EAAUA,GAAoB,CAAC,EAE/B,MAAMymC,EAActuC,OAAO4G,OAAO,CAAC,EAAGiB,UAE/BymC,EAAYvQ,aACZuQ,EAAYgpB,oBACZhpB,EAAYipB,4BACZjpB,EAAYkpB,uBACnBz0D,MAAMurC,GAMN5tC,KAAK+2D,WAAa5vD,EAAQ6vD,UAAYtxD,OAAOyB,EAAQ6vD,gBAAah4D,EAMlEgB,KAAKi3D,mBACsBj4D,IAAzBmI,EAAQyvD,aAA6BzvD,EAAQyvD,aAAe,IAO9D52D,KAAKk3D,OAAS,KAOdl3D,KAAKm3D,oBAAiBn4D,EAEtBgB,KAAKo3D,SAASjwD,EAAQk2B,OAMtBr9B,KAAKq3D,2BAC8Br4D,IAAjCmI,EAAQ0vD,sBACJ1vD,EAAQ0vD,qBAOd72D,KAAKs3D,6BACgCt4D,IAAnCmI,EAAQ2vD,wBACJ3vD,EAAQ2vD,sBAEhB,CAMA,YAAArmB,GACE,OAAOzwC,KAAK+2D,UACd,CAiBA,WAAAnnB,CAAY7mC,GACV,OAAO1G,MAAMutC,YAAY7mC,EAC3B,CAKA,eAAAwuD,GACE,OAAOv3D,KAAKi3D,aACd,CAKA,cAAAO,GACE,OACEx3D,KAAKP,IAAI,GAEb,CAQA,QAAAg4D,GACE,OAAOz3D,KAAKk3D,MACd,CAOA,gBAAAQ,GACE,OAAO13D,KAAKm3D,cACd,CAMA,uBAAAQ,GACE,OAAO33D,KAAKq3D,qBACd,CAMA,yBAAAO,GACE,OAAO53D,KAAKs3D,uBACd,CAQA,eAAA5mB,CAAgBjoC,EAAYsmC,GAC1B,MAAM8oB,EAAiB73D,KAAKywC,eACxBonB,KAAkBpvD,EAAWuuD,WAAc,IAC7CvuD,EAAWuuD,UAAUa,GAAkB,IAAIpmB,GAAM,IAEnDzxC,KAAKqwC,cAAcK,gBAAgBjoC,EAAYsmC,EACjD,CAMA,cAAA+oB,CAAeC,GACb/3D,KAAK0G,IAAI,GAAuBqxD,EAClC,CAuBA,QAAAX,CAAS/5B,GACPr9B,KAAKk3D,YAAmBl4D,IAAVq+B,EAAsBgwB,GAAqBhwB,EACzD,MAAM26B,EAuBV,SAAqB36B,GACnB,QAAcr+B,IAAVq+B,EACF,OAAOgwB,GAET,IAAKhwB,EACH,OAAO,KAET,GAAqB,mBAAVA,EACT,OAAOA,EAET,GAAIA,aAAiB,GACnB,OAAOA,EAET,IAAKt4B,MAAMC,QAAQq4B,GACjB,OAAOu0B,GAA0B,CAACv0B,IAEpC,GAAqB,IAAjBA,EAAMz8B,OACR,MAAO,GAGT,MAAMA,EAASy8B,EAAMz8B,OACf4oB,EAAQ6T,EAAM,GAEpB,GAAI7T,aAAiB,GAAO,CAI1B,MAAM0nC,EAAS,IAAInsD,MAAMnE,GACzB,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAUC,EAAG,CAC/B,MAAMC,EAAYu8B,EAAMx8B,GACxB,KAAMC,aAAqB,IACzB,MAAM,IAAIwE,MAAM,sCAElB4rD,EAAOrwD,GAAKC,CACd,CACA,OAAOowD,CACT,CAEA,GAAI,UAAW1nC,EAAO,CAIpB,MAAMqnC,EAAQ,IAAI9rD,MAAMnE,GACxB,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAUC,EAAG,CAC/B,MAAMC,EAAYu8B,EAAMx8B,GACxB,KAAM,UAAWC,GACf,MAAM,IAAIwE,MAAM,kDAElBurD,EAAMhwD,GAAKC,CACb,CACA,OAAO8vD,GAAqBC,EAC9B,CAIA,OAAOe,GADsD,EAE/D,CA/EsBqG,CAAY56B,GAC9Br9B,KAAKm3D,eACO,OAAV95B,OAAiBr+B,EHkKhB,SAAoBU,GACzB,IAAIw4D,EAEJ,GAAmB,mBAARx4D,EACTw4D,EAAgBx4D,MACX,CAIL,IAAIwxD,EACAnsD,MAAMC,QAAQtF,GAChBwxD,EAASxxD,GAET,GACgD,mBAArB,EAAe,UACxC,8CAGFwxD,EAAS,CAD0B,IAGrCgH,EAAgB,WACd,OAAOhH,CACT,CACF,CACA,OAAOgH,CACT,CG3LmC,CAAgBF,GAC/Ch4D,KAAK4E,SACP,CAMA,YAAAuzD,CAAanB,GACXh3D,KAAK+2D,WAAaC,EAAYtxD,OAAOsxD,QAAah4D,EAClDgB,KAAK4E,SACP,GCvPF,GArCA,cAA0BxB,EAQxB,WAAArD,CAAYiC,EAAMo2D,EAAuB3vD,EAAYo0B,GACnDx6B,MAAML,GAQNhC,KAAKo4D,sBAAwBA,EAO7Bp4D,KAAKyI,WAAaA,EASlBzI,KAAK68B,QAAUA,CACjB,GCsMF,SAASw7B,GAAgB7vD,EAAKC,GAC5B,GAAeo5C,QACjB,CAEA,SAzNA,cAA0B,EAIxB,WAAA9hD,CAAYyI,GACVnG,QAMArC,KAAKmL,KAAO3C,CACd,CAOA,mBAAA8vD,CAAoBt2D,EAAMyG,GACxB,GACF,CAMA,mBAAA8vD,CAAoB9vD,GAClB,MAAMqwB,EAAYrwB,EAAWqwB,UACvB0/B,EAA6B/vD,EAAW+vD,2BACxCC,EAA6BhwD,EAAWgwD,2BAE9C11C,GACEy1C,EACA/vD,EAAW0K,KAAK,GAAK,EACrB1K,EAAW0K,KAAK,GAAK,EACrB,EAAI2lB,EAAU5lB,YACb,EAAI4lB,EAAU5lB,YACd4lB,EAAUvjB,UACVujB,EAAU7lB,OAAO,IACjB6lB,EAAU7lB,OAAO,IAGpBqQ,GAAYm1C,EAA4BD,EAC1C,CAiBA,0BAAAE,CACEzvD,EACAR,EACAkwD,EACAC,EACA5uC,EACA7lB,EACA00D,EACAC,GAEA,IAAIlqC,EACJ,MAAMkK,EAAYrwB,EAAWqwB,UAS7B,SAAS4/B,EAA2BhsB,EAASygB,EAASjtB,EAAO/G,GAC3D,OAAOnP,EAASlqB,KAAKqE,EAASgpD,EAASzgB,EAAUxM,EAAQ,KAAM/G,EACjE,CAEA,MAAMnZ,EAAa8Y,EAAU9Y,WAEvB+4C,E7FySH,SAAe9vD,EAAY+W,GAChC,GAAIA,EAAWrH,WAAY,CACzB,MAAMqgD,EAAa,GAASh5C,EAAWnH,aACjCogD,EAaH,SAAuBhwD,EAAY+W,EAAYk5C,GACpD,MAAMC,EAAmBn5C,EAAWnH,YACpC,IAAIogD,EAAa,EAUjB,OAREj5C,EAAWrH,aACV1P,EAAW,GAAKkwD,EAAiB,IAAMlwD,EAAW,GAAKkwD,EAAiB,MAEzED,EAAoBA,GAAqB,GAASC,GAClDF,EAAazrD,KAAKmkB,OACf1oB,EAAW,GAAKkwD,EAAiB,IAAMD,IAGrCD,CACT,CA1BuB,CAAchwD,EAAY+W,EAAYg5C,GACrDC,IACFhwD,EAAW,IAAMgwD,EAAaD,EAElC,CACA,OAAO/vD,CACT,C6FlTiC,CAAMA,EAAWoW,QAASW,GACjDo5C,EAAU,CAAC,CAAC,EAAG,IACrB,GAAIp5C,EAAWrH,YAAcigD,EAAc,CACzC,MACMI,EAAa,GADMh5C,EAAWnH,aAEpCugD,EAAQr2D,KAAK,EAAEi2D,EAAY,GAAI,CAACA,EAAY,GAC9C,CAEA,MAAMK,EAAc5wD,EAAWunC,iBACzBspB,EAAYD,EAAYz4D,OAExB24D,EAA4C,GAC5CC,EAAW,GACjB,IAAK,IAAI34D,EAAI,EAAGA,EAAIu4D,EAAQx4D,OAAQC,IAClC,IAAK,IAAI8lB,EAAI2yC,EAAY,EAAG3yC,GAAK,IAAKA,EAAG,CACvC,MAAMooB,EAAasqB,EAAY1yC,GACzBuZ,EAAQ6O,EAAW7O,MACzB,GACEA,EAAM+Q,eACNjC,GAAOD,EAAYjW,IACnB+/B,EAAY/4D,KAAKg5D,EAAU54B,GAC3B,CACA,MAAMkQ,EAAgBlQ,EAAMmQ,cACtBxpC,EAASq5B,EAAMI,YACrB,GAAI8P,GAAiBvpC,EAAQ,CAC3B,MAAMqN,EAAcrN,EAAO4yD,WACvBV,EACA9vD,EACE+gB,EAAW0uC,EAA2Bp0D,KAC1C,KACAyqC,EAAWrC,SAEb8sB,EAAS,GAAKtlD,EAAY,GAAKklD,EAAQv4D,GAAG,GAC1C24D,EAAS,GAAKtlD,EAAY,GAAKklD,EAAQv4D,GAAG,GAC1C+tB,EAASwhB,EAAcsoB,2BACrBc,EACA/wD,EACAkwD,EACA3uC,EACAuvC,EAEJ,CACA,GAAI3qC,EACF,OAAOA,CAEX,CACF,CAEF,GAAuB,IAAnB2qC,EAAQ34D,OACV,OAEF,MAAM84D,EAAQ,EAAIH,EAAQ34D,OAM1B,OALA24D,EAAQ3xD,SAAQ,CAAC6W,EAAG5d,IAAO4d,EAAEk7C,YAAc94D,EAAI64D,IAC/CH,EAAQlsC,MAAK,CAAChtB,EAAGC,IAAMD,EAAEs5D,WAAar5D,EAAEq5D,aACxCJ,EAAQl5B,MAAM5hB,GACJmQ,EAASnQ,EAAEuL,SAASvL,EAAE0uC,QAAS1uC,EAAEyhB,MAAOzhB,EAAE0a,YAE7CvK,CACT,CAeA,sBAAAgrC,CACE3wD,EACAR,EACAkwD,EACAC,EACAC,EACA10D,GAaA,YAAsBnF,IAXHgB,KAAK04D,2BACtBzvD,EACAR,EACAkwD,EACAC,EACAz3D,EACAnB,KACA64D,EACA10D,EAIJ,CAKA,MAAAw5B,GACE,OAAO39B,KAAKmL,IACd,CAOA,WAAAolC,CAAY9nC,GACV,GACF,CAMA,uBAAAoxD,CAAwBpxD,GAClB,GAAem5C,kBACjBn5C,EAAWqxD,oBAAoB/2D,KAAKs1D,GAExC,GC/CF,GArKA,cAAmC0B,GAIjC,WAAAh6D,CAAYyI,GACVnG,MAAMmG,GAMNxI,KAAKg6D,uBAAyB91D,EAC5BwgD,GACAn+C,EACAiC,EAAIyxD,WACJzxD,GAOFxI,KAAK6L,SAAW0wB,SAASC,cAAc,OACvC,MAAMa,EAAQr9B,KAAK6L,SAASwxB,MAC5BA,EAAM1N,SAAW,WACjB0N,EAAMpB,MAAQ,OACdoB,EAAMnB,OAAS,OACfmB,EAAM+O,OAAS,IAEfpsC,KAAK6L,SAAS8yB,UAAYhD,GAAqB,aAE/C,MAAMu+B,EAAY1xD,EAAIkD,cACtBwuD,EAAUC,aAAan6D,KAAK6L,SAAUquD,EAAUE,YAAc,MAM9Dp6D,KAAKq6D,UAAY,GAMjBr6D,KAAK2/B,kBAAmB,CAC1B,CAOA,mBAAA24B,CAAoBt2D,EAAMyG,GACxB,MAAMD,EAAMxI,KAAK29B,SACjB,GAAIn1B,EAAI3E,YAAY7B,GAAO,CACzB,MAAMiB,EAAQ,IAAI,GAAYjB,OAAMhD,EAAWyJ,GAC/CD,EAAIxF,cAAcC,EACpB,CACF,CAKA,eAAA9C,GACE,EAAcH,KAAKg6D,wBACnBh6D,KAAK6L,SAASzD,SACd/F,MAAMlC,iBACR,CAOA,WAAAowC,CAAY9nC,GACV,IAAKA,EAKH,YAJIzI,KAAK2/B,mBACP3/B,KAAK6L,SAASwxB,MAAMsD,QAAU,OAC9B3gC,KAAK2/B,kBAAmB,IAK5B3/B,KAAKu4D,oBAAoB9vD,GACzBzI,KAAKs4D,oBAAoB,GAA4B7vD,GAErD,MAAMunC,EAAmBvnC,EAAWunC,iBAAiB3iB,MACnD,CAAChtB,EAAGC,IAAMD,EAAE+rC,OAAS9rC,EAAE8rC,SAEP4D,EAAiB3P,MAChC0O,GACCA,EAAW7O,iBAAiBo6B,IAC5BvrB,EAAW7O,MAAMuQ,mBAInBhoC,EAAWuuD,UAAY,CAAC,GAE1B,MAAMl+B,EAAYrwB,EAAWqwB,UAE7B94B,KAAKq6D,UAAUz5D,OAAS,EAExB,MAAM25D,EAAsB,GAC5B,IAAIC,EAAkB,KACtB,IAAK,IAAI35D,EAAI,EAAG2C,EAAKwsC,EAAiBpvC,OAAQC,EAAI2C,IAAM3C,EAAG,CACzD,MAAMkuC,EAAaiB,EAAiBnvC,GACpC4H,EAAWgyD,WAAa55D,EAExB,MAAMq/B,EAAQ6O,EAAW7O,MACnBw6B,EAAcx6B,EAAM+M,iBAC1B,IACG+B,GAAOD,EAAYjW,IACJ,SAAf4hC,GAAyC,aAAfA,EAC3B,CACAx6B,EAAMsQ,WACN,QACF,CAEA,MAAMvpC,EAAUi5B,EAAMzC,OAAOh1B,EAAY+xD,GACpCvzD,IAGDA,IAAYuzD,IACdx6D,KAAKq6D,UAAUt3D,KAAKkE,GACpBuzD,EAAkBvzD,GAGpBszD,EAAoBx3D,KAAKgsC,GAC3B,CAEA/uC,KAAKg3D,UAAUvuD,EAAY8xD,G1D7BxB,SAAyBx5B,EAAMmR,GACpC,MAAMyoB,EAAc55B,EAAK65B,WAEzB,IAAK,IAAI/5D,EAAI,KAAWA,EAAG,CACzB,MAAMg6D,EAAWF,EAAY95D,GACvBi6D,EAAW5oB,EAASrxC,GAG1B,IAAKg6D,IAAaC,EAChB,MAIED,IAAaC,IAKZD,EAMAC,EAOL/5B,EAAKo5B,aAAaW,EAAUD,IAN1B95B,EAAKuH,YAAYuyB,KACfh6D,GAPFkgC,EAAKjD,YAAYg9B,GAarB,CACF,C0DFIC,CAAgB/6D,KAAK6L,SAAU7L,KAAKq6D,WAEpCr6D,KAAKs4D,oBjCnHM,ciCmH2C7vD,GAEjDzI,KAAK2/B,mBACR3/B,KAAK6L,SAASwxB,MAAMsD,QAAU,GAC9B3gC,KAAK2/B,kBAAmB,GAG1B3/B,KAAK65D,wBAAwBpxD,EAC/B,CAMA,SAAAuuD,CAAUvuD,EAAY4wD,GACpB,GAAK5wD,EAAWuuD,UAAhB,CAGA,IAAK,IAAIn2D,EAAIw4D,EAAYz4D,OAAS,EAAGC,GAAK,IAAKA,EAAG,CAChD,MAAMkuC,EAAasqB,EAAYx4D,GACzBq/B,EAAQ6O,EAAW7O,MACrBA,EAAMuQ,gBACRvQ,EAAMwQ,gBAAgBjoC,EAAYsmC,EAEtC,CACAsqB,EAAYzxD,SAASmnC,GACnBA,EAAW7O,MAAMyQ,eAAeloC,IATlC,CAWF,GCnBF,SAASuyD,GAAuB96B,GAC1BA,aAAiB,GACnBA,EAAM0Q,eAAe,MAGnB1Q,aAAiB,IACnBA,EAAMgO,YAAYtmC,QAAQozD,GAE9B,CAMA,SAASC,GAAoB/6B,EAAO13B,GAClC,GAAI03B,aAAiB,GACnBA,EAAM0Q,eAAepoC,QAGvB,GAAI03B,aAAiB,GAAY,CAC/B,MAAML,EAASK,EAAMgO,YAAYpmC,WACjC,IAAK,IAAIjH,EAAI,EAAG2C,EAAKq8B,EAAOj/B,OAAQC,EAAI2C,IAAM3C,EAC5Co6D,GAAoBp7B,EAAOh/B,GAAI2H,EAEnC,CACF,CAyoDA,MCnsDA,GAtHA,MACE,WAAAzI,GAKEC,KAAKk7D,cAAgB,GAIrBl7D,KAAKosC,OAAS,EAKdpsC,KAAKgrD,QAAU,EAMfhrD,KAAKm7D,SAA6C,IAC5CC,MAAMz+B,KAA4B,CACpCl9B,IAAK,CAACgB,EAAQsB,KACZ,GAEE,mBAD0B46B,KAA4B56B,GAUxD,OAJK/B,KAAKk7D,cAAcl7D,KAAKosC,OAASpsC,KAAKgrD,WACzChrD,KAAKk7D,cAAcl7D,KAAKosC,OAASpsC,KAAKgrD,SAAW,IAEnDhrD,KAAKk7D,cAAcl7D,KAAKosC,OAASpsC,KAAKgrD,SAASjoD,KAAKhB,GAC7C/B,KAAKq7D,eAAe,EAE7B30D,IAAK,CAACjG,EAAQsB,EAAUR,KACjBvB,KAAKk7D,cAAcl7D,KAAKosC,OAASpsC,KAAKgrD,WACzChrD,KAAKk7D,cAAcl7D,KAAKosC,OAASpsC,KAAKgrD,SAAW,IAEnDhrD,KAAKk7D,cAAcl7D,KAAKosC,OAASpsC,KAAKgrD,SAASjoD,KAAKhB,EAAUR,IACvD,IAIf,CAOA85D,gBAAkB,IAAI7jD,KACpBxX,KAAKk7D,cAAcl7D,KAAKosC,OAASpsC,KAAKgrD,SAASjoD,KAAKyU,GAC7CxX,MAOT,YAAAs7D,CAAa79B,GACXz9B,KAAKk7D,cAAcl7D,KAAKosC,OAASpsC,KAAKgrD,SAASjoD,KAAK06B,EACtD,CASA,UAAAhB,GACE,OAAOz8B,KAAKm7D,QACd,CAKA,IAAAI,CAAK1+B,GACH78B,KAAKk7D,cAActzD,SAAS4zD,IAC1B,IAAK,IAAI36D,EAAI,EAAG2C,EAAKg4D,EAAoB56D,OAAQC,EAAI2C,IAAM3C,EAAG,CAC5D,MAAMkB,EAAWy5D,EAAoB36D,GACrC,GAAwB,mBAAbkB,EAAyB,CAClCA,EAAS86B,GACT,QACF,CACA,MAAM4+B,EAAqBD,IAAsB36D,GACjD,GAAsD,mBAAzB,EAAUkB,GACpB,EAAUA,MAAa05D,OACnC,CACL,GAAkC,mBAAvBA,EAAmC,CAC3B,EAAU15D,GAAY05D,EAAmB5+B,GAC1D,QACF,CACiB,EAAU96B,GAAY05D,CACzC,CACF,IAEJ,CAEA,KAAA55D,GACE7B,KAAKk7D,cAAct6D,OAAS,EAC5BZ,KAAKosC,OAAS,EACdpsC,KAAKgrD,QAAU,CACjB,CAMA,MAAA/1C,GACEjV,KAAKgrD,QAAUhrD,KAAKk7D,cAAct6D,OAClCZ,KAAKosC,OAAS,CAChB,GCsEF,GAvLA,cAA4B,EAI1B,WAAArsC,CAAYmgC,GACV79B,QAMArC,KAAKkiD,OAAQ,EAGbliD,KAAK07D,wBAA0B17D,KAAK27D,mBAAmBr3D,KAAKtE,MAM5DA,KAAK47D,OAAS17B,EAMdlgC,KAAK67D,WAAa,IAAI92D,MAMtB/E,KAAK87D,aArCY,CAsCnB,CAKA,YAAAC,GACE,OAAO/7D,KAAK67D,UACd,CAKA,eAAAG,CAAgB58D,GACdY,KAAK67D,WAAWI,QAAQ78D,GACpBY,KAAK67D,WAAWj7D,OAASZ,KAAK87D,eAChC97D,KAAK67D,WAAWj7D,OAASZ,KAAK87D,aAElC,CAQA,WAAAlsB,CAAY7mC,GACV,OAAO,GACT,CAMA,OAAA8mC,CAAQ9mC,GACN,OAAO,IACT,CAQA,YAAAunC,CAAa7nC,GACX,OAAO,GACT,CASA,WAAA8nC,CAAY9nC,EAAYhI,GACtB,OAAO,GACT,CAYA,0BAAAi4D,CACEzvD,EACAR,EACAkwD,EACA3uC,EACAuvC,GAGF,CAKA,QAAA2C,GACE,OAAOl8D,KAAK47D,MACd,CAMA,kBAAAO,GAAsB,CAOtB,kBAAAR,CAAmB14D,GACjB,MAAM88C,EAAsD98C,EAAY,OpBrIlE,IoBuIJ88C,EAAMpvC,YpBtIH,IoBuIHovC,EAAMpvC,YAEN3Q,KAAKo8D,yBAET,CASA,SAAAC,CAAUtc,GACR,IAAIyC,EAAazC,EAAMpvC,WAQvB,OpB9JM,GoBuJF6xC,GpBtJC,GoBsJkCA,GACrCzC,EAAMr9C,iBAAiB,EAAkB1C,KAAK07D,yBpB1J5C,GoB4JAlZ,IACFzC,EAAM9uC,OACNuxC,EAAazC,EAAMpvC,YpB5Jf,GoB8JC6xC,CACT,CAKA,uBAAA4Z,GACE,MAAMl8B,EAAQlgC,KAAKk8D,WACfh8B,GAASA,EAAM2M,cAA2C,UAA3B3M,EAAM+M,kBACvC/M,EAAMt7B,SAEV,CAKA,cAAA+rC,CAAeloC,GAAa,CAM5B,eAAAtI,UACSH,KAAK47D,OACZv5D,MAAMlC,iBACR,GC/JF,IAAIm8D,GAAe,KAqYnB,SAxXA,cAAkC,GAIhC,WAAAv8D,CAAYmgC,GACV79B,MAAM69B,GAMNlgC,KAAKk6D,UAAY,KAMjBl6D,KAAKu8D,mBAQLv8D,KAAKw8D,ctFrCA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GsF6CrBx8D,KAAKy8D,etF7CA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GsFqDrBz8D,KAAKo4D,sBtFrDA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GsF0DrBp4D,KAAK68B,QAAU,KAMf78B,KAAK08D,iBAAmB,KAKxB18D,KAAK28D,iBAAkB,EAMvB38D,KAAKyI,WAAa,IACpB,CAQA,YAAA66C,CAAavD,EAAO6c,EAAKC,GAMvB,IAAI5wC,EALCqwC,KAnFPA,GAAetgC,GAAsB,EAAG,OAAGh9B,EAAW,CACpDokD,oBAAoB,KAqFpBkZ,GAAax/B,UAAU,EAAG,EAAG,EAAG,GAGhC,IACEw/B,GAAajZ,UAAUtD,EAAO6c,EAAKC,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GACvD5wC,EAAOqwC,GAAahZ,aAAa,EAAG,EAAG,EAAG,GAAGr3B,IAC/C,CAAE,MAEA,OADAqwC,GAAe,KACR,IACT,CACA,OAAOrwC,CACT,CAMA,aAAAsgB,CAAc9jC,GAEZ,IAAIyjC,EADUlsC,KAAKk8D,WACI3vB,gBAIvB,MAH0B,mBAAfL,IACTA,EAAaA,EAAWzjC,EAAWqwB,UAAU5lB,aAExCg5B,QAAcltC,CACvB,CAQA,YAAA89D,CAAar8D,EAAQ2hB,EAAW26C,GAC9B,MAAMC,EAAiBh9D,KAAKk8D,WAAW1vB,eACvC,IAAI0tB,EAAWr9B,EACf,GACEp8B,GACAA,EAAOk+B,YAAcq+B,KACnBD,GACCt8D,GACCA,EAAO48B,MAAM0/B,iBACbh8D,EACE24C,GAAQj5C,EAAO48B,MAAM0/B,iBACrBrjB,GAAQqjB,KAEd,CACA,MAAM1gC,EAAS57B,EAAOw8D,kBAClB5gC,aAAkB2kB,oBACpBnkB,EAAUR,EAAOI,WAAW,MAEhC,CAcA,GAbII,GAAWA,EAAQR,OAAOgB,MAAMjb,YAAcA,GAEhDpiB,KAAKk6D,UAAYz5D,EACjBT,KAAK68B,QAAUA,EACf78B,KAAK28D,iBAAkB,GACd38D,KAAK28D,iBAEd38D,KAAKk6D,UAAY,KACjBl6D,KAAK68B,QAAU,KACf78B,KAAK28D,iBAAkB,GACd38D,KAAKk6D,YACdl6D,KAAKk6D,UAAU78B,MAAM0/B,gBAAkB,OAEpC/8D,KAAKk6D,UAAW,CACnBA,EAAY39B,SAASC,cAAc,OACnC09B,EAAUv7B,UAAYq+B,EACtB,IAAI3/B,EAAQ68B,EAAU78B,MACtBA,EAAM1N,SAAW,WACjB0N,EAAMpB,MAAQ,OACdoB,EAAMnB,OAAS,OACfW,EAAUb,KACV,MAAMK,EAASQ,EAAQR,OACvB69B,EAAUp8B,YAAYzB,GACtBgB,EAAQhB,EAAOgB,MACfA,EAAM1N,SAAW,WACjB0N,EAAM8K,KAAO,IACb9K,EAAM6/B,gBAAkB,WACxBl9D,KAAKk6D,UAAYA,EACjBl6D,KAAK68B,QAAUA,CACjB,CAEG78B,KAAK28D,kBACNI,GACC/8D,KAAKk6D,UAAU78B,MAAM0/B,kBAEtB/8D,KAAKk6D,UAAU78B,MAAM0/B,gBAAkBA,EAE3C,CAQA,aAAAI,CAActgC,EAASp0B,EAAYqK,GACjC,MAAMsqD,EAAU3mD,GAAW3D,GACrBuqD,EAAW3mD,GAAY5D,GACvBwqD,EAAchoD,GAAexC,GAC7ByqD,EAAaloD,GAAcvC,GAEjC9C,GAAevH,EAAW+vD,2BAA4B4E,GACtDptD,GAAevH,EAAW+vD,2BAA4B6E,GACtDrtD,GAAevH,EAAW+vD,2BAA4B8E,GACtDttD,GAAevH,EAAW+vD,2BAA4B+E,GAEtD,MAAMC,EAAWx9D,KAAKo4D,sBACtBpoD,GAAewtD,EAAUJ,GACzBptD,GAAewtD,EAAUH,GACzBrtD,GAAewtD,EAAUF,GACzBttD,GAAewtD,EAAUD,GAEzB1gC,EAAQ4gC,OACR5gC,EAAQ6gC,YACR7gC,EAAQ8gC,OAAOnwD,KAAKiF,MAAM2qD,EAAQ,IAAK5vD,KAAKiF,MAAM2qD,EAAQ,KAC1DvgC,EAAQ8sB,OAAOn8C,KAAKiF,MAAM4qD,EAAS,IAAK7vD,KAAKiF,MAAM4qD,EAAS,KAC5DxgC,EAAQ8sB,OAAOn8C,KAAKiF,MAAM6qD,EAAY,IAAK9vD,KAAKiF,MAAM6qD,EAAY,KAClEzgC,EAAQ8sB,OAAOn8C,KAAKiF,MAAM8qD,EAAW,IAAK/vD,KAAKiF,MAAM8qD,EAAW,KAChE1gC,EAAQ+gC,MACV,CAOA,gBAAAC,CAAiBp1D,EAAYhI,GAC3B,MAAMqS,EAASrK,EAAWqK,OACpBI,EAAazK,EAAWqwB,UAAU5lB,WAClCqC,EAAW9M,EAAWqwB,UAAUvjB,SAChC+qC,EAAa73C,EAAW63C,WACxBrkB,EAAQzuB,KAAKiF,MAAO,GAASK,GAAUI,EAAcotC,GACrDpkB,EAAS1uB,KAAKiF,MAAO4D,GAAUvD,GAAUI,EAAcotC,GAE7Dv9B,GACE/iB,KAAKy8D,eACLh0D,EAAW0K,KAAK,GAAK,EACrB1K,EAAW0K,KAAK,GAAK,EACrB,EAAImtC,EACJ,EAAIA,EACJ/qC,GACC0mB,EAAQ,GACRC,EAAS,GAEZ5Y,GAAYtjB,KAAKo4D,sBAAuBp4D,KAAKy8D,gBAE7C,MAAMqB,EtFSN,UsFT0C99D,KAAKy8D,etFW5Cj0D,KACC,CAACjH,EAAOV,IACN2M,KAAKiF,MAAMlR,EAAQqiB,GAAgB/iB,IAAM+iB,GAAgB/iB,KAE5Dk7B,KAAK,MACR,IsFbA,GAFA/7B,KAAK88D,aAAar8D,EAAQq9D,EAAiB99D,KAAKusC,cAAc9jC,KAEzDzI,KAAK28D,gBAAiB,CACzB,MAAMtgC,EAASr8B,KAAK68B,QAAQR,OACxBA,EAAOJ,OAASA,GAASI,EAAOH,QAAUA,GAC5CG,EAAOJ,MAAQA,EACfI,EAAOH,OAASA,GAEhBl8B,KAAK68B,QAAQC,UAAU,EAAG,EAAGb,EAAOC,GAElC4hC,IAAoBzhC,EAAOgB,MAAMjb,YACnCia,EAAOgB,MAAMjb,UAAY07C,EAE7B,CACF,CAQA,oBAAAC,CAAqB/7D,EAAM66B,EAASp0B,GAClC,MAAMy3B,EAAQlgC,KAAKk8D,WACnB,GAAIh8B,EAAMr8B,YAAY7B,GAAO,CAC3B,MAAMiB,EAAQ,IAAI,GAChBjB,EACAhC,KAAKo4D,sBACL3vD,EACAo0B,GAEFqD,EAAMl9B,cAAcC,EACtB,CACF,CAOA,SAAA+6D,CAAUnhC,EAASp0B,GACjBzI,KAAKyI,WAAaA,EACdA,EAAWuuD,WAGfh3D,KAAK+9D,qBAAqB,GAA2BlhC,EAASp0B,EAChE,CAOA,UAAAw1D,CAAWphC,EAASp0B,GACdA,EAAWuuD,WAGfh3D,KAAK+9D,qBAAqB,GAA4BlhC,EAASp0B,EACjE,CAKA,sBAAAy1D,CAAuBz1D,GAAa,CAMpC,gBAAA01D,CAAiB11D,GAIf,OAHIA,EAAWuuD,YAAch3D,KAAK08D,mBAChC18D,KAAK08D,iBAAmB,IAAI,IAEvBj0D,EAAWuuD,UACdh3D,KAAK08D,iBAAiBjgC,aACtBz8B,KAAK68B,OACX,CAMA,cAAA8T,CAAeloC,GACRA,EAAWuuD,YAGhBh3D,KAAK+9D,qBACH,GACA/9D,KAAK68B,QACLp0B,GAEEA,EAAWuuD,WAAah3D,KAAK08D,mBAC/B18D,KAAK08D,iBAAiBnB,KAAKv7D,KAAK68B,SAChC78B,KAAK08D,iBAAiB76D,SAExB7B,KAAKk+D,uBAAuBz1D,GAC5BzI,KAAK+9D,qBACH,GACA/9D,KAAK68B,QACLp0B,GAEJ,CAcA,kBAAA21D,CACEnrD,EACAC,EACAqC,EACA+qC,EACArkB,EACAC,EACA/H,GAEA,MAAMnR,EAAMiZ,EAAQ,EACdhZ,EAAMiZ,EAAS,EACfhZ,EAAKo9B,EAAaptC,EAClBiQ,GAAMD,EACNE,GAAOnQ,EAAO,GAAKkhB,EACnB9Q,GAAOpQ,EAAO,GACpB,OAAO8P,GACL/iB,KAAKw8D,cACLx5C,EACAC,EACAC,EACAC,GACC5N,EACD6N,EACAC,EAEJ,CAMA,eAAAljB,UACSH,KAAKyI,WACZpG,MAAMlC,iBACR,GCpLF,GAtNA,cAAuC,GAIrC,WAAAJ,CAAYs+D,GACVh8D,MAAMg8D,GAMNr+D,KAAK+/C,MAAQ,IACf,CAKA,QAAAY,GACE,OAAQ3gD,KAAK+/C,MAAe//C,KAAK+/C,MAAMY,WAAlB,IACvB,CAQA,YAAArQ,CAAa7nC,GACX,MAAMsmC,EAAatmC,EAAWunC,iBAAiBvnC,EAAWgyD,YACpDna,EAAa73C,EAAW63C,WACxBxnB,EAAYrwB,EAAWqwB,UACvBwlC,EAAiBxlC,EAAU5lB,WAE3BqrD,EAAcv+D,KAAKk8D,WAAW57B,YAE9BjJ,EAAQ5uB,EAAW+1D,UAEzB,IAAIC,EAAiBh2D,EAAWqK,OAQhC,QAP0B9T,IAAtB+vC,EAAWj8B,SACb2rD,EAAiBnoD,GACfmoD,EACA97C,GAAeosB,EAAWj8B,OAAQgmB,EAAU9Y,eAK7CqX,EjEhEM,KiEiENA,EjEhEQ,KiEiER,GAAQonC,GAET,GAAIF,EAAa,CACf,MAAMv+C,EAAa8Y,EAAU9Y,WACvB+/B,EAAQwe,EAAY5d,SACxB8d,EACAH,EACAhe,EACAtgC,GAEE+/B,IACE//C,KAAKq8D,UAAUtc,GACjB//C,KAAK+/C,MAAQA,EtB1EhB,IsB2EYA,EAAMpvC,aACf3Q,KAAK+/C,MAAQ,MAGnB,MACE//C,KAAK+/C,MAAQ,KAIjB,QAAS//C,KAAK+/C,KAChB,CAOA,OAAAlQ,CAAQ9mC,GACN,MAAMN,EAAazI,KAAKyI,WACxB,IAAKA,EACH,OAAO,KAGT,MAAMy3B,EAAQlgC,KAAKk8D,WACbjzD,EAAa+G,GACjBvH,EAAWgwD,2BACX1vD,EAAMsW,SAGF8wB,EAAcjQ,EAAMrnB,YAC1B,GAAIs3B,IACG97B,GAAmB87B,EAAalnC,GACnC,OAAO,KAIX,MAAMy1D,EAAc1+D,KAAK+/C,MAAMlnC,YACzBiyC,EAAM9qD,KAAK+/C,MAAMY,WAEjBge,EAAgB,GAASD,GACzB9B,EAAMpvD,KAAKmkB,MACfm5B,EAAI7uB,QAAUhzB,EAAW,GAAKy1D,EAAY,IAAMC,IAElD,GAAI/B,EAAM,GAAKA,GAAO9R,EAAI7uB,MACxB,OAAO,KAGT,MAAM2iC,EAAiBvoD,GAAUqoD,GAC3B7B,EAAMrvD,KAAKmkB,MACfm5B,EAAI5uB,SAAWwiC,EAAY,GAAKz1D,EAAW,IAAM21D,IAEnD,OAAI/B,EAAM,GAAKA,GAAO/R,EAAI5uB,OACjB,KAGFl8B,KAAKsjD,aAAawH,EAAK8R,EAAKC,EACrC,CASA,WAAAtsB,CAAY9nC,EAAYhI,GACtB,MAAMs/C,EAAQ//C,KAAK+/C,MACb2e,EAAc3e,EAAMlnC,YACpBgmD,EAAkB9e,EAAM7rB,iBACvB4qC,EAAkBC,GAAoBh6D,MAAMC,QAAQ65D,GACvDA,EACA,CAACA,EAAiBA,GAChBG,EAAkBjf,EAAMa,gBACxB7R,EAAatmC,EAAWunC,iBAAiBvnC,EAAWgyD,YACpDna,EAAa73C,EAAW63C,WACxBxnB,EAAYrwB,EAAWqwB,UACvBmmC,EAAanmC,EAAU7lB,OACvBqrD,EAAiBxlC,EAAU5lB,WAC3BgsD,EACH5e,EAAawe,GAAqBR,EAAiBU,GAChDG,EACH7e,EAAaye,GAAqBT,EAAiBU,GAEtDh/D,KAAK69D,iBAAiBp1D,EAAYhI,GAGlC,MAAMw7B,EAAQj8B,KAAK68B,QAAQR,OAAOJ,MAC5BC,EAASl8B,KAAK68B,QAAQR,OAAOH,OAE7BW,EAAU78B,KAAKm+D,iBAAiB11D,GAGtC,IAAI22D,GAAU,EACV3hC,GAAS,EACb,GAAIsR,EAAWj8B,OAAQ,CACrB,MAAMq9B,EAAcxtB,GAClBosB,EAAWj8B,OACXgmB,EAAU9Y,YAEZyd,EAASjnB,GAAiB25B,EAAa1nC,EAAWqK,QAClDssD,EAAU3hC,IAAWlpB,GAAe47B,EAAa1nC,EAAWqK,QACxDssD,GACFp/D,KAAKm9D,cAActgC,EAASp0B,EAAY0nC,EAE5C,CAEA,MAAM2a,EAAM/K,EAAMY,WAEZv+B,EAAYW,GAChB/iB,KAAKw8D,cACLvgC,EAAQ,EACRC,EAAS,EACTgjC,EACAC,EACA,EACCH,GAAmBN,EAAY,GAAKO,EAAW,IAAOH,EACtDE,GAAmBC,EAAW,GAAKP,EAAY,IAAOK,GAGzD/+D,KAAKu8D,mBAAsBwC,EAAmBze,EAAc0e,EAE5D,MAAMK,EAAKvU,EAAI7uB,MAAQ7Z,EAAU,GAC3Bk9C,EAAKxU,EAAI5uB,OAAS9Z,EAAU,GAOlC,GALKpiB,KAAKk8D,WAAW57B,YAAYi/B,mBAC/B1iC,EAAQ2iC,uBAAwB,GAGlCx/D,KAAKg+D,UAAUnhC,EAASp0B,GACpBg1B,GAAU4hC,GAAM,IAAOC,GAAM,GAAK,CACpC,MAAMxtD,EAAKsQ,EAAU,GACfrQ,EAAKqQ,EAAU,GACf+pB,EAAU4C,EAAW5C,QACX,IAAZA,IACFtP,EAAQ4gC,OACR5gC,EAAQ4iC,YAActzB,GAExBtP,EAAQwmB,UAAUyH,EAAK,EAAG,GAAIA,EAAI7uB,OAAQ6uB,EAAI5uB,OAAQpqB,EAAIC,EAAIstD,EAAIC,GAClD,IAAZnzB,GACFtP,EAAQ6iC,SAEZ,CAQA,OAPA1/D,KAAKi+D,WAAWj+D,KAAK68B,QAASp0B,GAE1B22D,GACFviC,EAAQ6iC,UAEV7iC,EAAQ2iC,uBAAwB,EAEzBx/D,KAAKk6D,SACd,GCrLF,GAVA,cAA6B,GAI3B,WAAAn6D,CAAYoH,GAEV9E,MADA8E,EAAUA,GAAoB,CAAC,EAEjC,GCpCF,IAAIw4D,GAKG,MAAM,GAAa,GAY1B,SAASC,GAAiB9b,EAAK+b,EAAIC,EAAIC,EAAIC,GACzClc,EAAI4Z,YACJ5Z,EAAI6Z,OAAO,EAAG,GACd7Z,EAAI6F,OAAOkW,EAAIC,GACfhc,EAAI6F,OAAOoW,EAAIC,GACflc,EAAI8F,YACJ9F,EAAI2Z,OACJ3Z,EAAI8Z,OACJ9Z,EAAIF,SAAS,EAAG,EAAGp2C,KAAK8D,IAAIuuD,EAAIE,GAAM,EAAGvyD,KAAK8D,IAAIwuD,EAAIE,IACtDlc,EAAI4b,SACN,CAUA,SAASO,GAA8Bh0C,EAAMhX,GAE3C,OACEzH,KAAKC,IAAIwe,EAAc,EAAThX,GAAc,KAAO,GACnCzH,KAAKC,IAAIwe,EAAc,EAAThX,EAAa,GAAK,QAAc,CAElD,CChDO,SAASirD,GAAmBhtD,GACjC,OAAInO,MAAMC,QAAQkO,GACT1F,KAAK6D,OAAO6B,GAEdA,CACT,CCkfA,SA7cA,MAUE,WAAAnT,CACEqmB,EACA+5C,EACAC,EACAC,EACAC,EACAC,EACAC,GAMAxgE,KAAKygE,YAAcr6C,EAMnBpmB,KAAK0gE,YAAcP,EAGnB,IAAIQ,EAAoB,CAAC,EACzB,MAAMC,EAAeJ,G5FqR8BK,E4FpRP3hD,GACtClP,GACEwwD,EACAp+C,GAAUlD,EAAOlf,KAAK0gE,YAAa1gE,KAAKygE,c5FkR3C,SAQKvhD,EAAOC,EAAQC,EAAWjK,GAClC,MAAMvU,EAASse,EAAMte,OACrBwe,OAA0BpgB,IAAdogB,EAA0BA,EAAY,EAClDjK,EAASA,GAAUiK,EACnBD,OAAoBngB,IAAXmgB,EAAuBA,EAAS,IAAIpa,MAAMnE,GACnD,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAKsU,EAAQ,CACvC,MAAMiF,EAAQymD,EAAe3hD,EAAMG,MAAMxe,EAAGA,EAAIue,IAC1C0hD,EAAc1mD,EAAMxZ,OAC1B,IAAK,IAAI+lB,EAAI,EAAG+F,EAAKvX,EAAQwR,EAAI+F,IAAM/F,EACrCxH,EAAOte,EAAI8lB,GAAKA,GAAKm6C,EAAc5hD,EAAMre,EAAI8lB,GAAKvM,EAAMuM,EAE5D,CACA,OAAOxH,CAEX,G4FrSMgD,GAAaniB,KAAK0gE,YAAa1gE,KAAKygE,a5F8QrC,IAAgDI,E4FvQnD7gE,KAAK+gE,cAAgB,SAAU9jD,GAC7B,MAAM7d,EAAM6d,EAAE,GAAK,IAAMA,EAAE,GAI3B,OAHK0jD,EAAkBvhE,KACrBuhE,EAAkBvhE,GAAOwhE,EAAa3jD,IAEjC0jD,EAAkBvhE,EAC3B,EAMAY,KAAKghE,iBAAmBX,EAMxBrgE,KAAKihE,uBAAyBX,EAAiBA,EAM/CtgE,KAAKkhE,WAAa,GAOlBlhE,KAAKmhE,iBAAkB,EAMvBnhE,KAAKohE,kBACHphE,KAAKygE,YAAY9nD,cACf0nD,KACArgE,KAAKygE,YAAY5nD,aACnB,GAASwnD,IAAoB,GAASrgE,KAAKygE,YAAY5nD,aAMzD7Y,KAAKqhE,kBAAoBrhE,KAAKygE,YAAY5nD,YACtC,GAAS7Y,KAAKygE,YAAY5nD,aAC1B,KAMJ7Y,KAAKshE,kBAAoBthE,KAAK0gE,YAAY7nD,YACtC,GAAS7Y,KAAK0gE,YAAY7nD,aAC1B,KAEJ,MAAM0oD,EAAqB9qD,GAAW2pD,GAChCoB,EAAsB9qD,GAAY0pD,GAClCqB,EAAyBnsD,GAAe8qD,GACxCsB,EAAwBrsD,GAAc+qD,GACtCuB,EAAgB3hE,KAAK+gE,cAAcQ,GACnCK,EAAiB5hE,KAAK+gE,cAAcS,GACpCK,EAAoB7hE,KAAK+gE,cAAcU,GACvCK,EAAmB9hE,KAAK+gE,cAAcW,GAYtCK,EA9Ic,IAgJjBxB,EACG/yD,KAAK8D,IACH,EACA9D,KAAKkF,KACHlF,KAAKw0D,KzGoQZ,SAAiBlvD,GACtB,IAAIyZ,EAAO,EAIX,OAHK,GAAQzZ,KACXyZ,EAAO,GAASzZ,GAAUuD,GAAUvD,IAE/ByZ,CACT,CyGzQgBnD,CAAQg3C,IACLG,EAAwBA,EAAwB,IAAM,QAI/D,GAcN,GAZAvgE,KAAKiiE,SACHV,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGE/hE,KAAKmhE,gBAAiB,CACxB,IAAIe,EAAYn0D,IAChB/N,KAAKkhE,WAAWt5D,SAAQ,SAAUu6D,EAAUthE,EAAGL,GAC7C0hE,EAAY10D,KAAK6D,IACf6wD,EACAC,EAASt7D,OAAO,GAAG,GACnBs7D,EAASt7D,OAAO,GAAG,GACnBs7D,EAASt7D,OAAO,GAAG,GAEvB,IAIA7G,KAAKkhE,WAAWt5D,SAASu6D,IACvB,GACE30D,KAAK8D,IACH6wD,EAASt7D,OAAO,GAAG,GACnBs7D,EAASt7D,OAAO,GAAG,GACnBs7D,EAASt7D,OAAO,GAAG,IAEnBq7D,EACFliE,KAAKqhE,kBAAoB,EACzB,CACA,MAAMe,EAAc,CAClB,CAACD,EAASt7D,OAAO,GAAG,GAAIs7D,EAASt7D,OAAO,GAAG,IAC3C,CAACs7D,EAASt7D,OAAO,GAAG,GAAIs7D,EAASt7D,OAAO,GAAG,IAC3C,CAACs7D,EAASt7D,OAAO,GAAG,GAAIs7D,EAASt7D,OAAO,GAAG,KAEzCu7D,EAAY,GAAG,GAAKF,EAAYliE,KAAKqhE,kBAAoB,IAC3De,EAAY,GAAG,IAAMpiE,KAAKqhE,mBAExBe,EAAY,GAAG,GAAKF,EAAYliE,KAAKqhE,kBAAoB,IAC3De,EAAY,GAAG,IAAMpiE,KAAKqhE,mBAExBe,EAAY,GAAG,GAAKF,EAAYliE,KAAKqhE,kBAAoB,IAC3De,EAAY,GAAG,IAAMpiE,KAAKqhE,mBAM5B,MAAM3tD,EAAOlG,KAAK6D,IAChB+wD,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEJ50D,KAAK8D,IAChB8wD,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEN1uD,EAAO1T,KAAKqhE,kBAAoB,IACzCc,EAASt7D,OAASu7D,EAEtB,IAEJ,CAEAzB,EAAoB,CAAC,CACvB,CAYA,YAAA0B,CAAahiE,EAAGC,EAAG2c,EAAGqlD,EAAMC,EAAMC,GAChCxiE,KAAKkhE,WAAWn+D,KAAK,CACnB8D,OAAQ,CAACy7D,EAAMC,EAAMC,GACrB/hE,OAAQ,CAACJ,EAAGC,EAAG2c,IAEnB,CAkBA,QAAAglD,CAAS5hE,EAAGC,EAAG2c,EAAG/d,EAAGojE,EAAMC,EAAMC,EAAMC,EAAMV,GAC3C,MAAMW,EAAmBzuD,GAAe,CAACquD,EAAMC,EAAMC,EAAMC,IACrDE,EAAkB3iE,KAAKqhE,kBACzB,GAASqB,GAAoB1iE,KAAKqhE,kBAClC,KACEuB,EAA0C5iE,KAAsB,kBAIhE6iE,EACJ7iE,KAAKygE,YAAY9nD,YACjBgqD,EAAkB,IAClBA,EAAkB,EAEpB,IAAIG,GAAmB,EAgBvB,GAdIf,EAAiB,IACf/hE,KAAK0gE,YAAYxnD,YAAclZ,KAAKshE,oBAItCwB,EADE,GAFuB7uD,GAAe,CAAC5T,EAAGC,EAAG2c,EAAG/d,KAEnBc,KAAKshE,kBAhRjB,KAkRuBwB,IAEvCD,GAAU7iE,KAAKygE,YAAYvnD,YAAcypD,IAC5CG,EACEH,EAtRiB,KAsRuBG,KAIzCA,GAAoB9iE,KAAKghE,kBAE1B+B,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,MAErBlsD,GAAWksD,EAAkB1iE,KAAKghE,kBAErC,OAKN,IAAIgC,EAAc,EAElB,KAAKF,GAEAC,SAAST,EAAK,KACdS,SAAST,EAAK,KACdS,SAASR,EAAK,KACdQ,SAASR,EAAK,KACdQ,SAASP,EAAK,KACdO,SAASP,EAAK,KACdO,SAASN,EAAK,KACdM,SAASN,EAAK,KAEf,GAAIV,EAAiB,EACnBe,GAAmB,OASnB,GALAE,GACID,SAAST,EAAK,KAAQS,SAAST,EAAK,IAAU,EAAJ,IAC1CS,SAASR,EAAK,KAAQQ,SAASR,EAAK,IAAU,EAAJ,IAC1CQ,SAASP,EAAK,KAAQO,SAASP,EAAK,IAAU,EAAJ,IAC1CO,SAASN,EAAK,KAAQM,SAASN,EAAK,IAAU,EAAJ,GAE7B,GAAfO,GACe,GAAfA,GACe,GAAfA,GACe,GAAfA,EAEA,OAMR,GAAIjB,EAAiB,EAAG,CACtB,IAAKe,EAAkB,CACrB,MAAM7vD,EAAS,EAAE5S,EAAE,GAAK4c,EAAE,IAAM,GAAI5c,EAAE,GAAK4c,EAAE,IAAM,GAC7CgmD,EAAYjjE,KAAK+gE,cAAc9tD,GAErC,IAAInB,EAMFA,EALE+wD,GAEC,GAAOP,EAAK,GAAIM,GACf,GAAOJ,EAAK,GAAII,IAClB,EACqB,GAAOK,EAAU,GAAIL,IAEtCN,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE3C,MAAMlxD,GAAMuwD,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE/CH,EAD8BhxD,EAAKA,EAAKC,EAAKA,EACF/R,KAAKihE,sBAClD,CACA,GAAI6B,EAAkB,CACpB,GAAIt1D,KAAKC,IAAIpN,EAAE,GAAK4c,EAAE,KAAOzP,KAAKC,IAAIpN,EAAE,GAAK4c,EAAE,IAAK,CAElD,MAAMimD,EAAK,EAAE5iE,EAAE,GAAK2c,EAAE,IAAM,GAAI3c,EAAE,GAAK2c,EAAE,IAAM,GACzCkmD,EAAQnjE,KAAK+gE,cAAcmC,GAC3BE,EAAK,EAAElkE,EAAE,GAAKmB,EAAE,IAAM,GAAInB,EAAE,GAAKmB,EAAE,IAAM,GACzCgjE,EAAQrjE,KAAK+gE,cAAcqC,GAEjCpjE,KAAKiiE,SACH5hE,EACAC,EACA4iE,EACAE,EACAd,EACAC,EACAY,EACAE,EACAtB,EAAiB,GAEnB/hE,KAAKiiE,SACHmB,EACAF,EACAjmD,EACA/d,EACAmkE,EACAF,EACAX,EACAC,EACAV,EAAiB,EAErB,KAAO,CAEL,MAAMuB,EAAK,EAAEjjE,EAAE,GAAKC,EAAE,IAAM,GAAID,EAAE,GAAKC,EAAE,IAAM,GACzCijE,EAAQvjE,KAAK+gE,cAAcuC,GAC3BE,EAAK,EAAEvmD,EAAE,GAAK/d,EAAE,IAAM,GAAI+d,EAAE,GAAK/d,EAAE,IAAM,GACzCukE,EAAQzjE,KAAK+gE,cAAcyC,GAEjCxjE,KAAKiiE,SACH5hE,EACAijE,EACAE,EACAtkE,EACAojE,EACAiB,EACAE,EACAhB,EACAV,EAAiB,GAEnB/hE,KAAKiiE,SACHqB,EACAhjE,EACA2c,EACAumD,EACAD,EACAhB,EACAC,EACAiB,EACA1B,EAAiB,EAErB,CACA,MACF,CACF,CAEA,GAAIc,EAAQ,CACV,IAAK7iE,KAAKohE,kBACR,OAEFphE,KAAKmhE,iBAAkB,CACzB,CAMmB,GAAd6B,GACHhjE,KAAKqiE,aAAahiE,EAAG4c,EAAG/d,EAAGojE,EAAME,EAAMC,GAEtB,GAAdO,GACHhjE,KAAKqiE,aAAahiE,EAAG4c,EAAG3c,EAAGgiE,EAAME,EAAMD,GAErCS,IAEiB,GAAdA,GACHhjE,KAAKqiE,aAAa/hE,EAAGpB,EAAGmB,EAAGkiE,EAAME,EAAMH,GAEtB,EAAdU,GACHhjE,KAAKqiE,aAAa/hE,EAAGpB,EAAG+d,EAAGslD,EAAME,EAAMD,GAG7C,CAOA,qBAAAkB,GACE,MAAM5wD,EzG3SD,CAAC/E,IAAUA,KAAU,KAAW,KyGoTrC,OAPA/N,KAAKkhE,WAAWt5D,SAAQ,SAAUu6D,EAAUthE,EAAGL,GAC7C,MAAMw/C,EAAMmiB,EAASt7D,OACrBsN,GAAiBrB,EAAQktC,EAAI,IAC7B7rC,GAAiBrB,EAAQktC,EAAI,IAC7B7rC,GAAiBrB,EAAQktC,EAAI,GAC/B,IAEOltC,CACT,CAKA,YAAA6wD,GACE,OAAO3jE,KAAKkhE,UACd,GC1PF,GAtOA,cAA0B,GAWxB,WAAAnhE,CACEqmB,EACA+5C,EACAC,EACA7wC,EACA+wB,EACAsjB,EACAC,GAEA,IAAIxD,EAAkBj6C,EAAWvN,YAC7BwnD,GAAmBj6C,EAAWzN,aAChC0nD,EAAkBA,EAAgBhhD,QAClCghD,EAAgB,IAAK,IACrBA,EAAgB,GAAKtyD,KAEvB,IAAI+1D,EAAkB3D,EAAWtnD,YAC7BirD,GAAmB3D,EAAWxnD,aAChCmrD,EAAkBA,EAAgBzkD,QAClCykD,EAAgB,IAAK,IACrBA,EAAgB,GAAK/1D,KAGvB,MAAMg2D,EAAsBD,EACxBxtD,GAAgB8pD,EAAc0D,GAC9B1D,EAGE9wC,EHiCH,SACLlJ,EACA+5C,EACA9wC,EACAE,GAEA,MAAMH,EAAehN,GAAUiN,EAAc8wC,EAAY/5C,GAGzD,IAAIkJ,EAAmB/W,GACrB4nD,EACA5wC,EACAF,GAGF,MAAM20C,EAAsB7D,EAAWpnD,wBACX/Z,IAAxBglE,IACF10C,GAAoB00C,GAEtB,MAAMC,EAAsB79C,EAAWrN,wBACX/Z,IAAxBilE,IACF30C,GAAoB20C,GAOtB,MAAMC,EAAe99C,EAAWvN,YAChC,IAAKqrD,GAAgB7vD,GAAmB6vD,EAAc90C,GAAe,CACnE,MAAM+0C,EACJ5rD,GAAmB6N,EAAYkJ,EAAkBF,GACjDE,EACEyzC,SAASoB,IAAuBA,EAAqB,IACvD70C,GAAoB60C,EAExB,CAEA,OAAO70C,CACT,CGxE6B80C,CACvBh+C,EACA+5C,EAHmB,GAAU4D,GAK7Bx0C,GAKI80C,EAAgB,IAAI,GACxBj+C,EACA+5C,EACA4D,EACA1D,EC1EyB,GD2EzB/wC,EACAC,GAGI20C,EAAeG,EAAcX,wBAC7BY,EAAc,GAAQJ,GACxB,KACAN,EAAiBM,EAAc50C,EAAkBgxB,GAC/C5vC,EAAQ4zD,E3BpFV,EAIC,E2BiFCC,EAAmBD,EAAcA,EAAY1jB,gBAAkB,EAErEv+C,MAAM+9D,EAAc7wC,EAAkBg1C,EAAkB7zD,GAMxD1Q,KAAK0gE,YAAcP,EAMnBngE,KAAKghE,iBAAmBX,EAMxBrgE,KAAKwkE,eAAiBH,EAMtBrkE,KAAKowB,kBAAoBb,EAMzBvvB,KAAKykE,cAAgBrE,EAMrBpgE,KAAK0kE,aAAeJ,EAMpBtkE,KAAK2kE,kBAAoBJ,EAMzBvkE,KAAK4kE,aAAef,EAMpB7jE,KAAK2iD,QAAU,KAMf3iD,KAAK6kE,mBAAqB,IAC5B,CAMA,eAAA1kE,G3BzJS,G2B0JHH,KAAK0Q,OACP1Q,KAAK8kE,kBAEPziE,MAAMlC,iBACR,CAMA,QAAAwgD,GACE,OAAO3gD,KAAK2iD,OACd,CAKA,aAAA7tB,GACE,OAAO90B,KAAK0gE,WACd,CAKA,UAAAqE,GACE,MAAMrK,EAAc16D,KAAK0kE,aAAa/zD,WACtC,G3BnLM,G2BmLF+pD,EAAkC,CACpC,MAAMz+B,EAAQ,GAASj8B,KAAKykE,eAAiBzkE,KAAKowB,kBAC5C8L,EAAS7lB,GAAUrW,KAAKykE,eAAiBzkE,KAAKowB,kBACpDpwB,KAAK2iD,QHmBJ,SACL1mB,EACAC,EACAokB,EACAhxB,EACA40C,EACA30C,EACA6wC,EACAiE,EACAW,EACAC,EACAC,EACArB,EACAsB,EACAC,GAEA,MAAMvoC,EAAUb,GACdxuB,KAAKiF,MAAM6tC,EAAarkB,GACxBzuB,KAAKiF,MAAM6tC,EAAapkB,GACxB,IAOF,GAJK2nC,IACHhnC,EAAQ2iC,uBAAwB,GAGX,IAAnBwF,EAAQpkE,OACV,OAAOi8B,EAAQR,OAKjB,SAASgpC,EAAW9jE,GAClB,OAAOiM,KAAKiF,MAAMlR,EAAQ++C,GAAcA,CAC1C,CAJAzjB,EAAQjX,MAAM06B,EAAYA,GAM1BzjB,EAAQknB,yBAA2B,UAEnC,MAAMuhB,EvGrDC,CAACv3D,IAAUA,KAAU,KAAW,KuG0DvC,IAAIw3D,EAJJP,EAAQp9D,SAAQ,SAAUo4C,EAAKn/C,EAAGL,GvGmE7B,IAAgBgU,EAASC,EAATD,EuGlEZ8wD,GvGkEqB7wD,EuGlEHurC,EAAIltC,QvGmEnB,GAAK0B,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,GuG5EvB,IAGA,MAAM+wD,EAAcllB,EAAahxB,EAE3Bm2C,GAAgB5B,EAAc,EAAI,EAAIr2D,KAAKgF,IAAI,GAAI,KAAOgzD,EAEhE,IAAKL,GAAiC,IAAnBH,EAAQpkE,QAA2B,IAAXqkE,EAAc,CAUvD,GATAM,EAAgBvpC,GACdxuB,KAAKiF,MAAM,GAAS6yD,GAAoBE,GACxCh4D,KAAKiF,MAAM4D,GAAUivD,GAAoBE,GACzC,IAGG3B,IACH0B,EAAc/F,uBAAwB,GAEpC0E,GAAgBkB,EAAY,CAC9B,MAAMM,GAAQxB,EAAa,GAAKoB,EAAiB,IAAME,EACjDG,IAASzB,EAAa,GAAKoB,EAAiB,IAAME,EAClDvpC,EAAQ,GAASioC,GAAgBsB,EACjCtpC,EAAS7lB,GAAU6tD,GAAgBsB,EACzCD,EAAcK,KAAKF,EAAMC,EAAM1pC,EAAOC,GACtCqpC,EAAc3H,MAChB,CAEAoH,EAAQp9D,SAAQ,SAAUo4C,EAAKn/C,EAAGL,GAEhC,GAAIw/C,EAAID,MAAM9jB,MAAQ,GAAK+jB,EAAID,MAAM7jB,OAAS,EAAG,CAC/C,GAAI8jB,EAAIolB,WAAY,CAClBG,EAAc9H,OACd,MAAMiI,GAAQ1lB,EAAIolB,WAAW,GAAKE,EAAiB,IAAME,EACnDG,IAAS3lB,EAAIolB,WAAW,GAAKE,EAAiB,IAAME,EACpDvpC,EAAQ,GAAS+jB,EAAIolB,YAAcI,EACnCtpC,EAAS7lB,GAAU2pC,EAAIolB,YAAcI,EAC3CD,EAAcK,KACZ/B,EAAc6B,EAAOl4D,KAAKiF,MAAMizD,GAChC7B,EAAc8B,EAAOn4D,KAAKiF,MAAMkzD,GAChC9B,EAAc5nC,EAAQzuB,KAAKiF,MAAMizD,EAAOzpC,GAASzuB,KAAKiF,MAAMizD,GAC5D7B,EAAc3nC,EAAS1uB,KAAKiF,MAAMkzD,EAAOzpC,GAAU1uB,KAAKiF,MAAMkzD,IAEhEJ,EAAc3H,MAChB,CAEA,MAAM8H,GAAQ1lB,EAAIltC,OAAO,GAAKwyD,EAAiB,IAAME,EAC/CG,IAAS3lB,EAAIltC,OAAO,GAAKwyD,EAAiB,IAAME,EAChDK,EAAW,GAAS7lB,EAAIltC,QAAU0yD,EAClCM,EAAYzvD,GAAU2pC,EAAIltC,QAAU0yD,EAC1CD,EAAcliB,UACZrD,EAAID,MACJklB,EACAA,EACAjlB,EAAID,MAAM9jB,MAAQ,EAAIgpC,EACtBjlB,EAAID,MAAM7jB,OAAS,EAAI+oC,EACvBpB,EAAc6B,EAAOl4D,KAAKiF,MAAMizD,GAChC7B,EAAc8B,EAAOn4D,KAAKiF,MAAMkzD,GAChC9B,EACIgC,EACAr4D,KAAKiF,MAAMizD,EAAOG,GAAYr4D,KAAKiF,MAAMizD,GAC7C7B,EACIiC,EACAt4D,KAAKiF,MAAMkzD,EAAOG,GAAat4D,KAAKiF,MAAMkzD,IAG5C3lB,EAAIolB,YACNG,EAAc7F,SAElB,CACF,GACF,CACA,MAAMqG,EAAgBtvD,GAAW2pD,GAqKjC,OAnKAiE,EAAcV,eAAe/7D,SAAQ,SAAUu6D,EAAUthE,EAAGL,GAqB1D,MAAMqG,EAASs7D,EAASt7D,OAClBpG,EAAS0hE,EAAS1hE,OACxB,IAAI+U,EAAK3O,EAAO,GAAG,GACjB4O,EAAK5O,EAAO,GAAG,GACb6K,EAAK7K,EAAO,GAAG,GACjB8K,EAAK9K,EAAO,GAAG,GACb+K,EAAK/K,EAAO,GAAG,GACjBgL,EAAKhL,EAAO,GAAG,GAEjB,MAAMm/D,EAAKX,GAAY5kE,EAAO,GAAG,GAAKslE,EAAc,IAAMx2C,GACpD02C,EAAKZ,IACP5kE,EAAO,GAAG,GAAKslE,EAAc,IAAMx2C,GAEjCswC,EAAKwF,GAAY5kE,EAAO,GAAG,GAAKslE,EAAc,IAAMx2C,GACpDuwC,EAAKuF,IACP5kE,EAAO,GAAG,GAAKslE,EAAc,IAAMx2C,GAEjCwwC,EAAKsF,GAAY5kE,EAAO,GAAG,GAAKslE,EAAc,IAAMx2C,GACpDywC,EAAKqF,IACP5kE,EAAO,GAAG,GAAKslE,EAAc,IAAMx2C,GAMjC22C,EAAwB1wD,EACxB2wD,EAAwB1wD,EAC9BD,EAAK,EACLC,EAAK,EACL/D,GAAMw0D,EACNv0D,GAAMw0D,EACNv0D,GAAMs0D,EACNr0D,GAAMs0D,EAEN,MAMMC,EzGjUH,SAA2B5iD,GAChC,MAAM7iB,EAAI6iB,EAAI5iB,OAEd,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAGE,IAAK,CAE1B,IAAIwlE,EAASxlE,EACTylE,EAAQ94D,KAAKC,IAAI+V,EAAI3iB,GAAGA,IAC5B,IAAK,IAAIuR,EAAIvR,EAAI,EAAGuR,EAAIzR,EAAGyR,IAAK,CAC9B,MAAMm0D,EAAW/4D,KAAKC,IAAI+V,EAAIpR,GAAGvR,IAC7B0lE,EAAWD,IACbA,EAAQC,EACRF,EAASj0D,EAEb,CAEA,GAAc,IAAVk0D,EACF,OAAO,KAIT,MAAMl7C,EAAM5H,EAAI6iD,GAChB7iD,EAAI6iD,GAAU7iD,EAAI3iB,GAClB2iB,EAAI3iB,GAAKuqB,EAGT,IAAK,IAAIzE,EAAI9lB,EAAI,EAAG8lB,EAAIhmB,EAAGgmB,IAAK,CAC9B,MAAM6/C,GAAQhjD,EAAImD,GAAG9lB,GAAK2iB,EAAI3iB,GAAGA,GACjC,IAAK,IAAI+lB,EAAI/lB,EAAG+lB,EAAIjmB,EAAI,EAAGimB,IACrB/lB,GAAK+lB,EACPpD,EAAImD,GAAGC,GAAK,EAEZpD,EAAImD,GAAGC,IAAM4/C,EAAOhjD,EAAI3iB,GAAG+lB,EAGjC,CACF,CAGA,MAAMpV,EAAI,IAAIzM,MAAMpE,GACpB,IAAK,IAAI+1C,EAAI/1C,EAAI,EAAG+1C,GAAK,EAAGA,IAAK,CAC/BllC,EAAEklC,GAAKlzB,EAAIkzB,GAAG/1C,GAAK6iB,EAAIkzB,GAAGA,GAC1B,IAAK,IAAIj4B,EAAIi4B,EAAI,EAAGj4B,GAAK,EAAGA,IAC1B+E,EAAI/E,GAAG9d,IAAM6iB,EAAI/E,GAAGi4B,GAAKllC,EAAEklC,EAE/B,CACA,OAAOllC,CACT,CyGmRwBi1D,CANI,CACtB,CAAC/0D,EAAIC,EAAI,EAAG,EAAGkuD,EAAKmG,GACpB,CAACp0D,EAAIC,EAAI,EAAG,EAAGkuD,EAAKiG,GACpB,CAAC,EAAG,EAAGt0D,EAAIC,EAAImuD,EAAKmG,GACpB,CAAC,EAAG,EAAGr0D,EAAIC,EAAImuD,EAAKiG,KAGtB,IAAKG,EACH,OAMF,GAHAvpC,EAAQ4gC,OACR5gC,EAAQ6gC,YA/TZ,WACE,QAAiC1+D,IAA7B2gE,GAAwC,CAC1C,MAAM7b,EAAM9nB,GAAsB,EAAG,EAAG,IACxC8nB,EAAIC,yBAA2B,UAC/BD,EAAIE,UAAY,wBAChB4b,GAAiB9b,EAAK,EAAG,EAAG,EAAG,GAC/B8b,GAAiB9b,EAAK,EAAG,EAAG,EAAG,GAC/B,MAAM73B,EAAO63B,EAAIR,aAAa,EAAG,EAAG,EAAG,GAAGr3B,KAC1C0zC,GACEM,GAA8Bh0C,EAAM,IACpCg0C,GAA8Bh0C,EAAM,IACpCg0C,GAA8Bh0C,EAAM,GACtC2Q,GAAcknB,GACd,GAAW/gD,KAAK+gD,EAAIznB,OACtB,CAEA,OAAOsjC,EACT,CAgTQ+G,KAAgC7C,EAAa,CAE/ChnC,EAAQ8gC,OAAOkC,EAAIC,GAEnB,MAAM6G,EAAQ,EACRC,EAAKZ,EAAKnG,EACVgH,EAAKZ,EAAKnG,EAChB,IAAK,IAAItW,EAAO,EAAGA,EAAOmd,EAAOnd,IAE/B3sB,EAAQ8sB,OACNkW,EAAKwF,GAAa7b,EAAO,GAAKod,EAAMD,GACpC7G,EAAKuF,EAAY7b,EAAOqd,GAAOF,EAAQ,KAGrCnd,GAAQmd,EAAQ,GAClB9pC,EAAQ8sB,OACNkW,EAAKwF,GAAa7b,EAAO,GAAKod,EAAMD,GACpC7G,EAAKuF,GAAa7b,EAAO,GAAKqd,GAAOF,EAAQ,KAKnD9pC,EAAQ8sB,OAAOoW,EAAIC,EACrB,MACEnjC,EAAQ8gC,OAAOkC,EAAIC,GACnBjjC,EAAQ8sB,OAAOqc,EAAIC,GACnBppC,EAAQ8sB,OAAOoW,EAAIC,GAmBrB,IAAIjgB,EACJ,GAjBAljB,EAAQ+gC,OAER/gC,EAAQza,UACNgkD,EAAY,GACZA,EAAY,GACZA,EAAY,GACZA,EAAY,GACZJ,EACAC,GAGFppC,EAAQ5W,UACNq/C,EAAiB,GAAKY,EACtBZ,EAAiB,GAAKa,GAIpBZ,EACFxlB,EAAQwlB,EAAclpC,OACtBQ,EAAQjX,MAAM6/C,GAAeA,OACxB,CACL,MAAM5+D,EAASm+D,EAAQ,GACjBlyD,EAASjM,EAAOiM,OACtBitC,EAAQl5C,EAAOk5C,MACfljB,EAAQjX,MACN,GAAS9S,GAAUitC,EAAM9jB,OACxB5lB,GAAUvD,GAAUitC,EAAM7jB,OAE/B,CAEAW,EAAQwmB,UAAUtD,EAAO,EAAG,GAC5BljB,EAAQ6iC,SACV,IAEI6F,IACF3oC,GAAc2oC,GACd,GAAWxiE,KAAKwiE,EAAclpC,SAG5B6oC,IACFroC,EAAQ4gC,OAER5gC,EAAQknB,yBAA2B,cACnClnB,EAAQyrB,YAAc,QACtBzrB,EAAQssB,UAAY,EAEpBkb,EAAcV,eAAe/7D,SAAQ,SAAUu6D,EAAUthE,EAAGL,GAC1D,MAAMC,EAAS0hE,EAAS1hE,OAClBulE,GAAMvlE,EAAO,GAAG,GAAKslE,EAAc,IAAMx2C,EACzC02C,IAAOxlE,EAAO,GAAG,GAAKslE,EAAc,IAAMx2C,EAC1CswC,GAAMp/D,EAAO,GAAG,GAAKslE,EAAc,IAAMx2C,EACzCuwC,IAAOr/D,EAAO,GAAG,GAAKslE,EAAc,IAAMx2C,EAC1CwwC,GAAMt/D,EAAO,GAAG,GAAKslE,EAAc,IAAMx2C,EACzCywC,IAAOv/D,EAAO,GAAG,GAAKslE,EAAc,IAAMx2C,EAEhDsN,EAAQ6gC,YACR7gC,EAAQ8gC,OAAOkC,EAAIC,GACnBjjC,EAAQ8sB,OAAOqc,EAAIC,GACnBppC,EAAQ8sB,OAAOoW,EAAIC,GACnBnjC,EAAQ+sB,YACR/sB,EAAQ8pB,QACV,IAEA9pB,EAAQ6iC,WAEH7iC,EAAQR,MACjB,CGxSqBoB,CACbxB,EACAC,EACAl8B,KAAK2kE,kBACLzE,GAAmBlgE,KAAK0kE,aAAaxwC,iBACrCl0B,KAAKghE,iBACLhhE,KAAKowB,kBACLpwB,KAAKykE,cACLzkE,KAAKwkE,eACL,CACE,CACE1xD,OAAQ9S,KAAK0kE,aAAa7rD,YAC1BknC,MAAO//C,KAAK0kE,aAAa/jB,aAG7B,OACA3hD,EACAgB,KAAK4kE,cACL,EAEJ,CACA5kE,KAAK0Q,MAAQgqD,EACb16D,KAAK4E,SACP,CAMA,IAAAqM,GACE,G3BtNI,G2BsNAjR,KAAK0Q,MAA0B,CACjC1Q,KAAK0Q,M3BtNA,E2BuNL1Q,KAAK4E,UAEL,MAAM81D,EAAc16D,KAAK0kE,aAAa/zD,W3BxNlC,G2ByNA+pD,G3BxND,G2BwNqCA,EACtC16D,KAAK+kE,cAEL/kE,KAAK6kE,mBAAqB3gE,EACxBlE,KAAK0kE,aACL,GACCjhD,IACC,MAAMi3C,EAAc16D,KAAK0kE,aAAa/zD,W3BhOxC,G2BkOI+pD,G3BjOL,G2BkOKA,IAEA16D,KAAK8kE,kBACL9kE,KAAK+kE,aACP,IAGJ/kE,KAAK0kE,aAAazzD,OAEtB,CACF,CAKA,eAAA6zD,GACE,EAEI9kE,KACF,oBAEFA,KAAK6kE,mBAAqB,IAC5B,GErCF,SAASiC,GAAkBC,GACzB,OAAKA,EAG0B,mBAApBA,EACFA,GAEJhiE,MAAMC,QAAQ+hE,KACjBA,EAAkB,CAACA,IAEbt+D,GAAes+D,GARd,IASX,CAEA,SAzLA,cAAqB,EAInB,WAAAhnE,CAAYoH,GACV9E,QAMArC,KAAKggB,WAAa,GAAc7Y,EAAQ6Y,YAMxChgB,KAAKy+B,cAAgBqoC,GAAkB3/D,EAAQu3B,cAM/C1+B,KAAKgnE,yBAA2B7/D,EAAQ8/D,0BAA2B,EAOnEjnE,KAAK6mD,SAAU,EAMf7mD,KAAKssC,YAA2BttC,IAAlBmI,EAAQuJ,MAAsBvJ,EAAQuJ,MAAQ,QAM5D1Q,KAAKknE,YAA2BloE,IAAlBmI,EAAQggE,OAAsBhgE,EAAQggE,MAMpDnnE,KAAK4kE,eAAiBz9D,EAAQ08D,YAM9B7jE,KAAKonE,aAAe,KAMpBpnE,KAAKqnE,aAAe,KAEpB,MAAM1oE,EAAOqB,KAKbA,KAAKsnE,aAAe,IAAI7lE,SAAQ,SAAUE,EAASD,GACjD/C,EAAKyoE,aAAezlE,EACpBhD,EAAK0oE,aAAe3lE,CACtB,GACF,CAOA,eAAAy+B,GACE,OAAOngC,KAAKy+B,aACd,CAMA,0BAAA8B,GACE,OAAOvgC,KAAKgnE,wBACd,CAOA,aAAAlyC,GACE,OAAO90B,KAAKggB,UACd,CAMA,cAAAkY,CAAelY,GACb,OAAO,IACT,CAKA,OAAAkiB,GACE,OAAOliC,KAAKsnE,YACd,CAOA,QAAA32D,GACE,OAAO3Q,KAAKssC,MACd,CAKA,QAAAmtB,GACE,OAAOz5D,KAAKknE,MACd,CAKA,cAAA3H,GACE,OAAOv/D,KAAK4kE,YACd,CAMA,OAAA2C,GACEvnE,KAAK4E,SACP,CASA,eAAA4iE,CAAgB9oC,GACd1+B,KAAKy+B,cAAgBqoC,GAAkBpoC,GACvC1+B,KAAK4E,SACP,CAMA,QAAA6iE,CAAS/2D,GACP1Q,KAAKssC,OAAS57B,EACd1Q,KAAK4E,SACP,GC5JK,MAAM8iE,WAAyBtkE,EAKpC,WAAArD,CAAYiC,EAAM+9C,GAChB19C,MAAML,GAONhC,KAAK+/C,MAAQA,CACf,EA8RK,SAAS4nB,GAAiB70D,EAAQI,EAAYotC,EAAYxsC,GAC/D,MAAM+qD,EAAkB3rD,EAAaotC,EAC/BrtC,EAAS,GAAUH,GACnBQ,EAAYZ,GAAK,GAASI,GAAU+rD,EC3VpB,GD4VhBtrD,EAAab,GAAK2D,GAAUvD,GAAU+rD,EC5VtB,GDiWtB,OAAO,GAAkB5rD,EAAQ4rD,EAAiB,EAAG,CAHhCvrD,EAAY,EADbZ,IAAOoB,EAAQ,GAAKR,EAAa,EC7V/B,GDgWAC,EAAa,EADdb,IAAOoB,EAAQ,GAAKP,EAAc,EC/VjC,IDqWxB,CEpWO,SAAS,GAAaq0D,EAAKC,GAEhC,MAAMC,EAAY,GAElBxoE,OAAOwE,KAAK+jE,GAAQjgE,SAAQ,SAAUgf,GAClB,OAAdihD,EAAOjhD,SAA6B5nB,IAAd6oE,EAAOjhD,IAC/BkhD,EAAU/kE,KAAK6jB,EAAI,IAAMmhD,mBAAmBF,EAAOjhD,IAEvD,IACA,MAAMohD,EAAKF,EAAU/rC,KAAK,KAK1B,OAHA6rC,EAAMA,EAAIpnD,QAAQ,QAAS,KAE3BonD,GAAOA,EAAI9kE,SAAS,KAAO,IAAM,KACpBklE,CACf,CCrBA,MAoBA,GApBW,CACPl1D,OAAQ,CACJmkB,UAAS,IAEbiJ,MAAO,CACHv1B,MCIR,cAAyBs9D,GAIvB,WAAAloE,CAAYoH,GACV9E,MAAM8E,EACR,CAKA,cAAA6pC,GACE,OAAO,IAAI,GAAyBhxC,KACtC,CAkBA,OAAA6vC,CAAQ9mC,GACN,OAAO1G,MAAMwtC,QAAQ9mC,EACvB,IDnCElC,OAAQ,CACJ8D,MHuFR,cAA0B,GAIxB,WAAA5K,CAAYoH,GACV9E,MAAM,CACJq8B,aAAcv3B,EAAQu3B,aACtB1e,WAAY7Y,EAAQ6Y,WACpBtP,MAAOvJ,EAAQuJ,MACfmzD,iBAC0B7kE,IAAxBmI,EAAQ08D,aAA4B18D,EAAQ08D,cAMhD7jE,KAAKyE,GAKLzE,KAAKoE,KAKLpE,KAAK0E,GAML1E,KAAK0gD,OAASv5C,EAAQu5C,QAAU,KAMhC1gD,KAAK2yB,kBACqB3zB,IAAxBmI,EAAQoqB,YAA4BpqB,EAAQoqB,YAAc,KAM5DvxB,KAAKkoE,kBAAoB,KAMzBloE,KAAKmoE,qBAAuB,EAM5BnoE,KAAK+/C,MAAQ,KAMb//C,KAAKooE,cAMLpoE,KAAKqoE,kBAMLroE,KAAKsoE,UAAUnhE,EAAQu5C,QAAmC,IAA1Bv5C,EAAQu5C,OAAO9/C,OAM/CZ,KAAKuoE,kBAAoB,IAC3B,CAMA,cAAArwC,GACE,OAAOl4B,KAAK2yB,YACd,CAKA,cAAA61C,CAAej3C,GACbvxB,KAAK2yB,aAAepB,CACtB,CAOA,qBAAAk3C,CAAsBv1D,GACpB,MAAMqe,EAAcvxB,KAAKk4B,iBAKzB,OAJI3G,IAEFre,EAAaqe,EADDhxB,EAAkBgxB,EAAare,EAAY,KAGlDA,CACT,CASA,QAAAytC,CAAS7tC,EAAQI,EAAYotC,EAAYtgC,GACvC,MAAMwC,EAAmBxiB,KAAK80B,gBAC9B,IACGtS,IACAxC,GACDoB,GAAWoB,EAAkBxC,GAM7B,OAJIwC,IACFxC,EAAawC,GAGRxiB,KAAK0oE,iBAAiB51D,EAAQI,EAAYotC,EAAYtgC,GAE/D,GAAIhgB,KAAKkoE,kBAAmB,CAC1B,GACEloE,KAAKmoE,sBAAwBnoE,KAAK6E,eAClCuc,GAAWphB,KAAKkoE,kBAAkBpzC,gBAAiB9U,IACnDhgB,KAAKkoE,kBAAkBh0C,iBAAmBhhB,GAC1C,GAAOlT,KAAKkoE,kBAAkBrvD,YAAa/F,GAE3C,OAAO9S,KAAKkoE,kBAEdloE,KAAKkoE,kBAAkBhoE,UACvBF,KAAKkoE,kBAAoB,IAC3B,CAcA,OAZAloE,KAAKkoE,kBAAoB,IAAI,GAC3B1lD,EACAxC,EACAlN,EACAI,EACAotC,GACA,CAACxtC,EAAQI,EAAYotC,IACnBtgD,KAAK0oE,iBAAiB51D,EAAQI,EAAYotC,EAAY99B,IACxDxiB,KAAKu/D,kBAEPv/D,KAAKmoE,qBAAuBnoE,KAAK6E,cAE1B7E,KAAKkoE,iBACd,CAWA,gBAAAQ,CAAiB51D,EAAQI,EAAYotC,EAAYtgC,GAC/C,GAAIhgB,KAAK0gD,OAAQ,CACf,MAAMioB,EAAgBhB,GAAiB70D,EAAQI,EAAYotC,EAAY,GACjEO,EAAoB7gD,KAAKyoE,sBAAsBv1D,GACrD,GACElT,KAAK+/C,QACJ//C,KAAKsoE,SACHtoE,KAAKuoE,oBAAsBvoD,IACxBhgB,KAAKooE,eACL7zD,GAAevU,KAAKooE,cAAeO,IACnCp0D,GAAevU,KAAK+/C,MAAMlnC,YAAa8vD,MACvC3oE,KAAKqoE,mBACLnI,GAAmBlgE,KAAKqoE,qBACtBxnB,GACFqf,GAAmBlgE,KAAK+/C,MAAM7rB,mBAC5B2sB,IAER,OAAO7gD,KAAK+/C,MAEd//C,KAAKuoE,kBAAoBvoD,EACzBhgB,KAAKooE,cAAgBO,EACrB3oE,KAAKqoE,kBAAoBxnB,EACzB7gD,KAAK+/C,MAAQ,IAAI,GACf4oB,EACA9nB,EACAP,EACAtgD,KAAK0gD,QAEP1gD,KAAK+/C,MAAMr9C,iBACT,EACA1C,KAAK4oE,kBAAkBtkE,KAAKtE,MAEhC,CACA,OAAOA,KAAK+/C,KACd,CAOA,iBAAA6oB,CAAkB3lE,GAChB,MAAM88C,EAAsD98C,EAAY,OACxE,IAAIjB,EACJ,OAAQ+9C,EAAMpvC,YACZ,K9BtTK,E8BuTH3Q,KAAK6mD,SAAU,EACf7kD,EAjSU,iBAkSV,MACF,K9BzTI,E8B0TFhC,KAAK6mD,SAAU,EACf7kD,EA9RQ,eA+RR,MACF,K9B5TG,E8B6TDhC,KAAK6mD,SAAU,EACf7kD,EA3RU,iBA4RV,MACF,QACE,OAEAhC,KAAK6D,YAAY7B,IACnBhC,KAAKgD,cAAc,IAAI0kE,GAAiB1lE,EAAM+9C,GAElD,GG9TM8oB,UAAW,CACPC,aEuCL,SAAsB3hE,GAC3B,MAAM8J,EAAO9J,EAAQ8J,MAAQrG,GACvBkJ,EAAQ3M,EAAQ2M,OAAS,EACzBwtC,EAAcn6C,EAAQm6C,aAAe,KAG3C,OAAO,SAAUxuC,EAAQI,EAAYotC,GACnC,MAAMP,EAAQ,IAAIp1C,MAClBo1C,EAAMuB,YAAcA,EAEpB,MAAMrlB,EAAQ,GADdnpB,EAAS60D,GAAiB70D,EAAQI,EAAYotC,EAAYxsC,IACzBZ,EAC3BgpB,EAAS7lB,GAAUvD,GAAUI,EAC7BC,EAAO,CAAC8oB,EAAQqkB,EAAYpkB,EAASokB,GACrCN,EAzCV,SAAgB+oB,EAASlB,EAAQ/0D,EAAQK,GACvC,MAAM8oB,EAAQzuB,KAAKiF,MAAMU,EAAK,IACxB+oB,EAAS1uB,KAAKiF,MAAMU,EAAK,IACzB61D,EAAU,GAAG/sC,KAASC,IACtB+sC,EAAS,GAAGn2D,EAAO,MAAMA,EAAO,MAAMA,EAAO,MAAMA,EAAO,KAE1Do2D,EAAa,CACjBC,KAAM,MACNC,cAAe,MACfC,OAAQJ,EACRK,OAAQL,EACRM,SAAUP,EACVQ,KAAMvtC,EAAQ,EACdwtC,KAAMvtC,EAAS,EACfwtC,MAAOV,GAGT,OADA1pE,OAAO4G,OAAOgjE,EAAYrB,GACnB,GAAakB,EAASG,EAC/B,CAuBgBS,CAAOxiE,EAAQyiE,IAAKziE,EAAQ0gE,OAAQ/0D,EAAQK,GACxD,OAAOlC,EAAK8uC,EAAOC,GAAKC,MAAMF,IAAU,CAAEA,QAAOjtC,SAAQwtC,gBAC3D,CACF,GFrDQupB,IAAK,CACDf,aG0IL,SAAsB3hE,GAC3B,MAAM2iE,OAA0B9qE,IAAlBmI,EAAQ2iE,OAA6B3iE,EAAQ2iE,MACrD9pD,EAAa,GAAc7Y,EAAQ6Y,YAAc,aACjDlM,EAAQ3M,EAAQ2M,OAAS,IACzB7C,EAAO9J,EAAQ8J,MAAQrG,GACvB02C,EAAcn6C,EAAQm6C,aAAe,KAE3C,MAAO,CAACxuC,EAAQI,EAAYotC,KAC1BxtC,EAAS60D,GAAiB70D,EAAQI,EAAYotC,EAAYxsC,GACxC,GAAdwsC,GAAqBwpB,QAAgC9qE,IAAvBmI,EAAQ4iE,aACxCzpB,EAAa,GAEf,MAAMN,EAxGH,SACLltC,EACAI,EACAotC,EACAtgC,EACA4pD,EACA/B,EACAkC,GAEAlC,EAASvoE,OAAO4G,OAAO,CAAC8jE,QAAS,UAAWnC,GAE5C,MAAMhJ,EAAkB3rD,EAAaotC,EAE/B+K,EAAY,CAChB54C,GAAM,GAASK,GAAU+rD,ELrEL,GKsEpBpsD,GAAM4D,GAAUvD,GAAU+rD,ELtEN,IKyEtB,GAAkB,GAAdve,EACF,OAAQypB,GACN,IAAK,YACH,MAAME,EAAO,GAAK3pB,EAAa,GAAO,EAClC,mBAAoBunB,EACtBA,EAAuB,gBAAK,QAAUoC,EAEtCpC,EAAuB,eAAI,OAASoC,EAEtC,MACF,IAAK,YACHpC,EAAuB,eAAI,GAAKvnB,EAChC,MACF,IAAK,iBACL,IAAK,OACHunB,EAAY,IAAI,GAAKvnB,EACrB,MACF,QACE,MAAM,IAAIh7C,MAAM,mCAKtB,OAnEK,SAAuByjE,EAASj2D,EAAQK,EAAM6M,EAAY6nD,GAC/DA,EAAc,MAAI10D,EAAK,GACvB00D,EAAe,OAAI10D,EAAK,GAExB,MAAM+E,EAAkB8H,EAAW/G,qBAC7BixD,ECtBD,SAAyBpK,GAC9B,MAAMqK,GAAM,GAAKrK,GAAIxmB,MAAM,KACrB8wB,EDoByC,MCpB1B9wB,MAAM,KAE3B,IAAK,IAAIz4C,EAAI,EAAGA,EAAI2M,KAAK8D,IAAI64D,EAAGvpE,OAAQwpE,EAAGxpE,QAASC,IAAK,CACvD,MAAMwpE,EAAKtrD,SAASorD,EAAGtpE,IAAM,IAAK,IAC5BypE,EAAKvrD,SAASqrD,EAAGvpE,IAAM,IAAK,IAElC,GAAIwpE,EAAKC,EACP,OAAO,EAET,GAAIA,EAAKD,EACP,OAAQ,CAEZ,CAEA,OAAO,CACT,CDKc,CAAgBxC,EAAgB,UAAa,EACzDA,EAAOqC,EAAM,MAAQ,OAASlqD,EAAWpH,UACzC,MAAMm5B,EACJm4B,GAAOhyD,EAAgB2P,WAAW,MAC9B,CAAC/U,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,IACzCA,EAGN,OAFA+0D,EAAa,KAAI91B,EAAKhW,KAAK,KAEpB,GAAagtC,EAASlB,EAC/B,CAoDc0C,CAAcX,EAAK92D,EAAQu4C,EAAWrrC,EAAY6nD,EAEhE,CA8DgB2C,CACV13D,EACAI,EACAotC,EACAtgC,EACA7Y,EAAQyiE,KA5DmB/B,EA6DV1gE,EAAQ0gE,OA7DU4C,EA6DF,SA5D9BnrE,OAAO4G,OACZ,CACE,QAAWukE,EACX,QAAW,MACX,QA1GyB,QA2GzB,OAAU,YACV,OAAU,GACV,YAAe,QAEjB5C,IAoDE1gE,EAAQ4iE,YAEJhqB,EAAQ,IAAIp1C,MAhEf,IAA0Bk9D,EAAQ4C,EAkErC,OADA1qB,EAAMuB,YAAcA,EACbrwC,EAAK8uC,EAAOC,GAAKC,MAAMF,IAAU,CAAEA,QAAOjtC,SAAQwtC,gBAAa,CAE1E,IHhKIyZ,IfuNJ,cAAkB,EAIhB,WAAAh6D,CAAYoH,GACV9E,QAEA8E,EAAUA,GAAW,CAAC,EAKtBnH,KAAKyE,GAKLzE,KAAKoE,KAKLpE,KAAK0E,GAEL,MAAMgmE,EAo+CV,SAA+BvjE,GAI7B,IAAIwjE,EAAsB,UACU3rE,IAAhCmI,EAAQwjE,sBACVA,EACyC,iBAAhCxjE,EAAQwjE,oBACXpuC,SAAS0B,eAAe92B,EAAQwjE,qBAChCxjE,EAAQwjE,qBAMhB,MAAM9kE,EAAS,CAAC,EAEV+kE,EACJzjE,EAAQ04B,QACiD,mBAA/B14B,EAAc,OAAW,UACpBA,EAAc,OACzC,IAAI,GAAW,CACb04B,OAEI14B,EACF,SAUV,IAAI0jE,EAcAC,EAeAC,EAeJ,OApDAllE,EAAOmlE,IAA0BJ,EAEjC/kE,EAAOmlE,IAAsB7jE,EAAQ1G,OAErCoF,EAAOmlE,IACL7jE,EAAQ86B,gBAAgB,GAAO96B,EAAQ86B,KAAO,IAAI,QAI3BjjC,IAArBmI,EAAQ0jE,WACN9lE,MAAMC,QAAQmC,EAAQ0jE,UACxBA,EAAW,IAAI,EAAW1jE,EAAQ0jE,SAASxrD,UAE3C,GAC4D,mBAAhClY,EAAgB,SAAU,SACpD,+DAEF0jE,EAAW1jE,EAAQ0jE,gBAMM7rE,IAAzBmI,EAAQ2jE,eACN/lE,MAAMC,QAAQmC,EAAQ2jE,cACxBA,EAAe,IAAI,EAAW3jE,EAAQ2jE,aAAazrD,UAEnD,GAEI,mBADwBlY,EAAoB,aAAU,SAExD,mEAEF2jE,EAAe3jE,EAAQ2jE,oBAMF9rE,IAArBmI,EAAQ4jE,SACNhmE,MAAMC,QAAQmC,EAAQ4jE,UACxBA,EAAW,IAAI,EAAW5jE,EAAQ4jE,SAAS1rD,UAE3C,GAC4D,mBAAhClY,EAAgB,SAAU,SACpD,+DAEF4jE,EAAW5jE,EAAQ4jE,UAGrBA,EAAW,IAAI,EAGV,CACLF,SAAUA,EACVC,aAAcA,EACdH,oBAAqBA,EACrBI,SAAUA,EACVllE,OAAQA,EAEZ,CA1jD4BolE,CAAsB9jE,GAM9CnH,KAAKkrE,iBAAkB,EAMvBlrE,KAAKmrE,SAAU,EAGfnrE,KAAKorE,yBAA2BprE,KAAKqrE,mBAAmB/mE,KAAKtE,MAM7DA,KAAKsrE,sBACyBtsE,IAA5BmI,EAAQokE,gBAAgCpkE,EAAQokE,gBAAkB,GAMpEvrE,KAAKwgD,iBACoBxhD,IAAvBmI,EAAQm5C,WACJn5C,EAAQm5C,WACRh2C,EAMNtK,KAAKwrE,yBAMLxrE,KAAKyrE,mBAKLzrE,KAAK0rE,gBAAkB1rE,KAAK0rE,gBAAgBpnE,KAAKtE,MAMjDA,KAAK2rE,4BnF5RA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GmFkSrB3rE,KAAK4rE,4BnFlSA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GmFwSrB5rE,KAAK6rE,YAAc,EAMnB7rE,KAAK8rE,YAAc,KAOnB9rE,KAAK+rE,gBAAkB,KAMvB/rE,KAAKgsE,yBAA2B,KAMhChsE,KAAKisE,uBAAyB,KAM9BjsE,KAAKksE,gCAAkC,KAMvClsE,KAAKmsE,UAAY5vC,SAASC,cAAc,OACxCx8B,KAAKmsE,UAAUxtC,UACb,eAAiB,iBAAkB1zB,OAAS,YAAc,IAC5DjL,KAAKmsE,UAAU9uC,MAAM1N,SAAW,WAChC3vB,KAAKmsE,UAAU9uC,MAAMoxB,SAAW,SAChCzuD,KAAKmsE,UAAU9uC,MAAMpB,MAAQ,OAC7Bj8B,KAAKmsE,UAAU9uC,MAAMnB,OAAS,OAM9Bl8B,KAAKosE,kBAAoB7vC,SAASC,cAAc,OAChDx8B,KAAKosE,kBAAkB/uC,MAAM1N,SAAW,WACxC3vB,KAAKosE,kBAAkB/uC,MAAM+O,OAAS,IACtCpsC,KAAKosE,kBAAkB/uC,MAAMpB,MAAQ,OACrCj8B,KAAKosE,kBAAkB/uC,MAAMnB,OAAS,OACtCl8B,KAAKosE,kBAAkB/uC,MAAMC,cAAgB,OAC7Ct9B,KAAKosE,kBAAkBztC,UAAY,sBACnC3+B,KAAKmsE,UAAUruC,YAAY99B,KAAKosE,mBAMhCpsE,KAAKqsE,2BAA6B9vC,SAASC,cAAc,OACzDx8B,KAAKqsE,2BAA2BhvC,MAAM1N,SAAW,WACjD3vB,KAAKqsE,2BAA2BhvC,MAAM+O,OAAS,IAC/CpsC,KAAKqsE,2BAA2BhvC,MAAMpB,MAAQ,OAC9Cj8B,KAAKqsE,2BAA2BhvC,MAAMnB,OAAS,OAC/Cl8B,KAAKqsE,2BAA2BhvC,MAAMC,cAAgB,OACtDt9B,KAAKqsE,2BAA2B1tC,UAAY,gCAC5C3+B,KAAKmsE,UAAUruC,YAAY99B,KAAKqsE,4BAMhCrsE,KAAKssE,wBAA0B,KAM/BtsE,KAAKwL,eAAiBrE,EAAQ+D,cAM9BlL,KAAKusE,qBAAuB7B,EAAgBC,oBAM5C3qE,KAAKwsE,yBAA2B,KAMhCxsE,KAAKysE,eAAiB,KAMtBzsE,KAAK0sE,gBAAkB,IAAIC,gBAAe,IAAM3sE,KAAK4sE,eAMrD5sE,KAAK6qE,SAAWH,EAAgBG,UoBtZ7B,SAAkB1jE,GACvBA,EAAUA,GAAoB,CAAC,EAG/B,MAAM0jE,EAAW,IAAI,EAkBrB,YAhBqC7rE,IAAjBmI,EAAQ0sB,MAAqB1sB,EAAQ0sB,OAEvDg3C,EAAS9nE,KAAK,IAAI,GAAKoE,EAAQ0lE,oBAGQ7tE,IAAnBmI,EAAQ0P,QAAuB1P,EAAQ0P,SAE3Dg0D,EAAS9nE,KAAK,IAAI,GAAOoE,EAAQ2lE,sBAIT9tE,IAAxBmI,EAAQ05B,aAA4B15B,EAAQ05B,cAE5CgqC,EAAS9nE,KAAK,IAAI,GAAYoE,EAAQ4lE,qBAGjClC,CACT,CpB+XgD,GAM5C7qE,KAAK8qE,aACHJ,EAAgBI,cqBnYf,SAAkB3jE,GACvBA,EAAUA,GAAoB,CAAC,EAG/B,MAAM2jE,EAAe,IAAI,EAEnBjkC,EAAU,IAAI,IAAS,KAAO,IAAM,KA8E1C,YA3EiC7nC,IAA/BmI,EAAQ6lE,oBACJ7lE,EAAQ6lE,qBAGZlC,EAAa/nE,KAAK,IAAI,UAIM/D,IAA5BmI,EAAQ8lE,iBAAgC9lE,EAAQ8lE,kBAEhDnC,EAAa/nE,KACX,IAAI,GAAgB,CAClByyB,MAAOruB,EAAQ+lE,UACf73C,SAAUluB,EAAQgmE,sBAKYnuE,IAApBmI,EAAQimE,SAAwBjmE,EAAQimE,UAEtDtC,EAAa/nE,KACX,IAAI,GAAQ,CACVokC,YAAahgC,EAAQggC,YACrBN,QAASA,WAMW7nC,IAAxBmI,EAAQkmE,aAA4BlmE,EAAQkmE,cAE5CvC,EAAa/nE,KAAK,IAAI,UAGgB/D,IAAtBmI,EAAQmmE,WAA0BnmE,EAAQmmE,YAE1DxC,EAAa/nE,KACX,IAAI,GAAU,CACZsyB,SAAUluB,EAAQgmE,sBAKcnuE,IAArBmI,EAAQomE,UAAyBpmE,EAAQomE,YAExDzC,EAAa/nE,KAAK,IAAI,IACtB+nE,EAAa/nE,KACX,IAAI,GAAa,CACfyyB,MAAOruB,EAAQ+lE,UACf73C,SAAUluB,EAAQgmE,uBAMKnuE,IAA3BmI,EAAQqmE,gBAA+BrmE,EAAQqmE,iBAE/C1C,EAAa/nE,KACX,IAAI,GAAe,CACjBokC,YAAahgC,EAAQggC,YACrB9R,SAAUluB,EAAQgmE,sBAMInuE,IAA1BmI,EAAQsmE,eAA8BtmE,EAAQsmE,gBAE9C3C,EAAa/nE,KACX,IAAI,GAAS,CACXsyB,SAAUluB,EAAQgmE,gBAKjBrC,CACT,CrB+SM,CAAoB,CAClB3jC,aAAa,IAOjBnnC,KAAK0tE,UAAYhD,EAAgBK,SAOjC/qE,KAAK2tE,gBAAkB,CAAC,EAMxB3tE,KAAKovC,UAAY,KAMjBpvC,KAAK4tE,qBAAuB,GAM5B5tE,KAAK6tE,WAAa,IAAI,GACpB7tE,KAAK8tE,gBAAgBxpE,KAAKtE,MAC1BA,KAAK+tE,kBAAkBzpE,KAAKtE,OAG9BA,KAAKwG,kBACHwkE,GACAhrE,KAAKguE,0BAEPhuE,KAAKwG,kBAAkBwkE,GAAkBhrE,KAAKiuE,oBAC9CjuE,KAAKwG,kBAAkBwkE,GAAkBhrE,KAAKkuE,oBAC9CluE,KAAKwG,kBAAkBwkE,GAAoBhrE,KAAKmuE,sBAIhDnuE,KAAK+F,cAAc2kE,EAAgB7kE,QAEnC,MAAM2C,EAAMxI,MACRmH,EAAQ86B,MAAU96B,EAAQ86B,gBAAgB,IAC5C96B,EAAQ86B,KAAKge,MAAK,SAAUmuB,GAC1B5lE,EAAI6lE,QAAQ,IAAI,GAAKD,GACvB,IAGFpuE,KAAK6qE,SAASnoE,iBACZwF,GAICjF,IACCA,EAAMgE,QAAQ22B,OAAO59B,KAAK,IAI9BA,KAAK6qE,SAASnoE,iBACZwF,GAICjF,IACCA,EAAMgE,QAAQ22B,OAAO,KAAK,IAI9B59B,KAAK8qE,aAAapoE,iBAChBwF,GAICjF,IACCA,EAAMgE,QAAQ22B,OAAO59B,KAAK,IAI9BA,KAAK8qE,aAAapoE,iBAChBwF,GAICjF,IACCA,EAAMgE,QAAQ22B,OAAO,KAAK,IAI9B59B,KAAK0tE,UAAUhrE,iBACbwF,GAICjF,IACCjD,KAAKsuE,oBAAoBrrE,EAAMgE,QAAQ,IAI3CjH,KAAK0tE,UAAUhrE,iBACbwF,GAICjF,IACC,MAAM0J,EAAK1J,EAAMgE,QAAQ0qD,aACd3yD,IAAP2N,UACK3M,KAAK2tE,gBAAgBhhE,EAAG+uC,YAEjCz4C,EAAMgE,QAAQ22B,OAAO,KAAK,IAI9B59B,KAAK6qE,SAASjjE,SAIX2mE,IACCA,EAAQ3wC,OAAO59B,KAAK,IAIxBA,KAAK8qE,aAAaljE,SAIf4mE,IACCA,EAAY5wC,OAAO59B,KAAK,IAI5BA,KAAK0tE,UAAU9lE,QAAQ5H,KAAKsuE,oBAAoBhqE,KAAKtE,MACvD,CAOA,UAAAyuE,CAAWF,GACTvuE,KAAK0uE,cAAc3rE,KAAKwrE,EAC1B,CAWA,cAAAI,CAAeH,GACbxuE,KAAK4uE,kBAAkB7rE,KAAKyrE,EAC9B,CASA,QAAAK,CAAS3uC,GACQlgC,KAAKiwC,gBAAgB/B,YAC7BnrC,KAAKm9B,EACd,CAMA,eAAA4uC,CAAgB7rE,GACdg4D,GAAoBh4D,EAAMi9B,MAAOlgC,KACnC,CAOA,UAAA+uE,CAAWC,GACThvE,KAAKivE,cAAclsE,KAAKisE,EAC1B,CAOA,mBAAAV,CAAoBU,GAClB,MAAMriE,EAAKqiE,EAAQrd,aACR3yD,IAAP2N,IACF3M,KAAK2tE,gBAAgBhhE,EAAG+uC,YAAcszB,GAExCA,EAAQpxC,OAAO59B,KACjB,CAOA,eAAAG,GACEH,KAAK6qE,SAAShpE,QACd7B,KAAK8qE,aAAajpE,QAClB7B,KAAK0tE,UAAU7rE,QACf7B,KAAK0sE,gBAAgBwC,aACrBlvE,KAAK09B,UAAU,MACfr7B,MAAMlC,iBACR,CAoBA,qBAAAgvE,CAAsBpmE,EAAOihB,EAAU7iB,GACrC,IAAKnH,KAAK8rE,cAAgB9rE,KAAKovC,UAC7B,OAEF,MAAMnmC,EAAajJ,KAAKynC,+BAA+B1+B,GAEjD4vD,OACqB35D,KAF3BmI,OAAsBnI,IAAZmI,EAAwBA,EAAU,CAAC,GAEnCwxD,aAA6BxxD,EAAQwxD,aAAe,EACxDE,OACoB75D,IAAxBmI,EAAQ0xD,YAA4B1xD,EAAQ0xD,YAAc13D,EACtDy3D,GAAwC,IAAzBzxD,EAAQyxD,aAC7B,OAAO54D,KAAKovC,UAAUspB,2BACpBzvD,EACAjJ,KAAK8rE,YACLnT,EACAC,EACA5uC,EACA,KACA6uC,EACA,KAEJ,CAUA,kBAAAuW,CAAmBrmE,EAAO5B,GACxB,MAAMkoE,EAAW,GAQjB,OAPArvE,KAAKmvE,sBACHpmE,GACA,SAAUokD,GACRkiB,EAAStsE,KAAKoqD,EAChB,GACAhmD,GAEKkoE,CACT,CAOA,YAAAvvC,GACE,MAAMD,EAAS,GAWf,OAVA,SAASyvC,EAAc1E,GACrBA,EAAWhjE,SAAQ,SAAUs4B,GACvBA,aAAiB,GACnBovC,EAAcpvC,EAAMgO,aAEpBrO,EAAO98B,KAAKm9B,EAEhB,GACF,CACAovC,CAActvE,KAAKkuC,aACZrO,CACT,CAUA,iBAAA0vC,CAAkBxmE,EAAO5B,GACvB,IAAKnH,KAAK8rE,cAAgB9rE,KAAKovC,UAC7B,OAAO,EAET,MAAMnmC,EAAajJ,KAAKynC,+BAA+B1+B,GAEjD8vD,OACoB75D,KAF1BmI,OAAsBnI,IAAZmI,EAAwBA,EAAU,CAAC,GAEnC0xD,YAA4B1xD,EAAQ0xD,YAAc13D,EACtDw3D,OACqB35D,IAAzBmI,EAAQwxD,aAA6BxxD,EAAQwxD,aAAe,EACxDC,GAAwC,IAAzBzxD,EAAQyxD,aAC7B,OAAO54D,KAAKovC,UAAUwqB,uBACpB3wD,EACAjJ,KAAK8rE,YACLnT,EACAC,EACAC,EACA,KAEJ,CAQA,kBAAA2W,CAAmBvsE,GACjB,OAAOjD,KAAKkJ,uBAAuBlJ,KAAKgJ,cAAc/F,GACxD,CAOA,0BAAAwsE,CAA2BxsE,GACzB,OAAOjD,KAAKynC,+BAA+BznC,KAAKgJ,cAAc/F,GAChE,CAQA,aAAA+F,CAAc/F,GACZ,MACMysE,EADW1vE,KAAKmsE,UACYwD,wBAC5BthD,EAAeruB,KAAK2nC,UACpBu3B,EAASwQ,EAAiBzzC,MAAQ5N,EAAa,GAC/C8wC,EAASuQ,EAAiBxzC,OAAS7N,EAAa,GAChDuhD,EAEJ,mBAAoB3sE,EACU,EAAQ4sE,eAAe,GACvB,EAEhC,MAAO,EACJD,EAAcliE,QAAUgiE,EAAiBvnC,MAAQ+2B,GACjD0Q,EAAcjiE,QAAU+hE,EAAiBtnC,KAAO+2B,EAErD,CAWA,SAAA2Q,GACE,OACE9vE,KAAKP,IAAIurE,GAEb,CASA,gBAAAjmC,GACE,OAAO/kC,KAAKysE,cACd,CASA,sBAAAvjE,CAAuBH,GACrB,OAAOwZ,GACLviB,KAAKynC,+BAA+B1+B,GACpC/I,KAAKkiC,UAAUpN,gBAEnB,CAQA,8BAAA2S,CAA+B1+B,GAC7B,MAAMN,EAAazI,KAAK8rE,YACxB,OAAKrjE,EAGEuH,GAAevH,EAAWgwD,2BAA4B1vD,EAAMsW,SAF1D,IAGX,CAQA,WAAAqvD,GACE,OAAO1uE,KAAK6qE,QACd,CAQA,WAAAoE,GACE,OAAOjvE,KAAK0tE,SACd,CAUA,cAAAqC,CAAepjE,GACb,MAAMqiE,EAAUhvE,KAAK2tE,gBAAgBhhE,EAAG+uC,YACxC,YAAmB18C,IAAZgwE,EAAwBA,EAAU,IAC3C,CAUA,eAAAJ,GACE,OAAO5uE,KAAK8qE,YACd,CAQA,aAAA76B,GACE,OAAkCjwC,KAAKP,IAAIurE,GAC7C,CAOA,SAAAh9B,CAAUnO,GACR,MAAMmwC,EAAQhwE,KAAKiwC,gBACnB,GAAIpQ,aAAkB,EAEpB,YADAmwC,EAAMhiC,UAAUnO,GAIlB,MAAM6O,EAAashC,EAAM9hC,YACzBQ,EAAW7sC,QACX6sC,EAAW/mC,OAAOk4B,EACpB,CAOA,SAAAqO,GAEE,OADeluC,KAAKiwC,gBAAgB/B,WAEtC,CAKA,oBAAA+hC,GACE,MAAMjgC,EAAmBhwC,KAAKiwC,gBAAgBlD,sBAC9C,IAAK,IAAIlsC,EAAI,EAAG2C,EAAKwsC,EAAiBpvC,OAAQC,EAAI2C,IAAM3C,EAAG,CACzD,MAAM6P,EAAQs/B,EAAiBnvC,GAC/B,IAAK6P,EAAMowB,QACT,SAEF,MAAMyrB,EAAW77C,EAAMwvB,MAAMmQ,cAC7B,GAAIkc,IAAaA,EAASrK,MACxB,OAAO,EAET,MAAMr7C,EAAS6J,EAAMwvB,MAAMI,YAC3B,GAAIz5B,GAAUA,EAAOggD,QACnB,OAAO,CAEX,CACA,OAAO,CACT,CASA,sBAAAqpB,CAAuBjnE,GACrB,MAAMknE,EAAiB1tD,GACrBxZ,EACAjJ,KAAKkiC,UAAUpN,iBAEjB,OAAO90B,KAAKwnC,+BAA+B2oC,EAC7C,CAQA,8BAAA3oC,CAA+Bv+B,GAC7B,MAAMR,EAAazI,KAAK8rE,YACxB,OAAKrjE,EAGEuH,GACLvH,EAAW+vD,2BACXvvD,EAAWoW,MAAM,EAAG,IAJb,IAMX,CAMA,WAAAgxB,GACE,OAAOrwC,KAAKovC,SACd,CAQA,OAAAzH,GACE,OACE3nC,KAAKP,IAAIurE,GAEb,CASA,OAAA9oC,GACE,OAA4BliC,KAAKP,IAAIurE,GACvC,CAOA,WAAAt/D,GACE,OAAO1L,KAAKmsE,SACd,CASA,mBAAA9jC,GACE,OAAOroC,KAAKosE,iBACd,CASA,4BAAAvuC,GACE,OAAO79B,KAAKqsE,0BACd,CAKA,gBAAAl/D,GACE,MAAM23B,EAAgB9kC,KAAK+kC,mBAC3B,OAAOD,EAAgBA,EAAcsrC,cAAgB7zC,QACvD,CASA,eAAAuxC,CAAgBr9D,EAAM4/D,EAAeC,EAAYC,GAC/C,OtGj8BG,SACL9nE,EACAgI,EACA4/D,EACAC,EACAC,GAIA,IAAK9nE,KAAgB4nE,KAAiB5nE,EAAW+nE,aAC/C,OAAO1iE,GAET,IAAKrF,EAAW+nE,YAAYH,GAAe5/D,EAAKR,UAC9C,OAAOnC,GAQT,MAAMmF,EAASxK,EAAWqwB,UAAU7lB,OAC9BiT,EAASoqD,EAAW,GAAKr9D,EAAO,GAChCkT,EAASmqD,EAAW,GAAKr9D,EAAO,GACtC,OACE,MAAQzF,KAAKuG,IAAIw8D,GACjB/iE,KAAK4N,KAAK8K,EAASA,EAASC,EAASA,GAAUoqD,CAEnD,CsGq6BWzC,CACL9tE,KAAK8rE,YACLr7D,EACA4/D,EACAC,EACAC,EAEJ,CAMA,kBAAAlF,CAAmBhnC,EAAcriC,GAC/BA,EAAOA,GAAQqiC,EAAariC,KAC5B,MAAMiiC,EAAkB,IAAI,EAAgBjiC,EAAMhC,KAAMqkC,GACxDrkC,KAAKywE,sBAAsBxsC,EAC7B,CAKA,qBAAAwsC,CAAsBxsC,GACpB,IAAKjkC,KAAK8rE,YAGR,OAEF,MAAMpjE,EACJu7B,EACF,cACM39B,EAAYoC,EAAc1G,KAChC,GACEsE,IAAc,GACdA,IAAc,GACdA,IAAc,EACd,CACA,MAAM4G,EAAMlN,KAAKmN,mBACX63B,EAAWhlC,KAAKmsE,UAAU9+D,YAC5BrN,KAAKmsE,UAAU9+D,cACfH,EACEzM,EAA8BiI,EAAoB,OAElDgoE,EACJ1rC,aAAoBC,WAChBD,EAASE,OAASzkC,EAChBukC,EAASE,KAAKkrC,cACdprC,EACFA,IAAa93B,EACXA,EAAIyjE,gBACJ3rC,EACR,GAGEhlC,KAAKqsE,2BAA2BlqC,SAAS1hC,KAKxCiwE,EAAWvuC,SAAS1hC,GAErB,MAEJ,CAEA,GADAwjC,EAAgBx7B,WAAazI,KAAK8rE,aACU,IAAxC9rE,KAAKgD,cAAcihC,GAA4B,CACjD,MAAM2sC,EAAoB5wE,KAAK4uE,kBAAkB9mE,WAAWuX,QAC5D,IAAK,IAAIxe,EAAI+vE,EAAkBhwE,OAAS,EAAGC,GAAK,EAAGA,IAAK,CACtD,MAAM2tE,EAAcoC,EAAkB/vE,GACtC,GACE2tE,EAAY7wC,WAAa39B,MACxBwuE,EAAYxqC,aACZhkC,KAAK+kC,sBAIKypC,EAAY/qE,YAAYwgC,IACxBA,EAAgBhiC,oBAC3B,KAEJ,CACF,CACF,CAKA,gBAAA4uE,GACE,MAAMpoE,EAAazI,KAAK8rE,YAWlBgF,EAAY9wE,KAAK6tE,WACvB,IAAKiD,EAAU1hE,UAAW,CACxB,IAAI0B,EAAkB9Q,KAAKsrE,iBACvBv6D,EAAcD,EAClB,GAAIrI,EAAY,CACd,MAAM4uB,EAAQ5uB,EAAW+1D,UACzB,GAAInnC,E7DpqCC,I6DoqC4BA,E7DnqC1B,G6DmqCuD,CAC5D,MAAM05C,EAAmB97C,KAAKC,MAAQzsB,EAAWuoE,KAAO,EACxDlgE,EAAkBigE,EAAmB,EAAI,EACzChgE,EAAcggE,EAAmB,EAAI,CACvC,CACF,CACID,EAAUtgE,kBAAoBM,IAChCggE,EAAUjhE,eACVihE,EAAUjgE,cAAcC,EAAiBC,GAE7C,CAEItI,GAAczI,KAAKovC,YAAc3mC,EAAWgsB,UAC1Cz0B,KAAKkrE,iBACHlrE,KAAK6D,YAAY,KACnB7D,KAAKovC,UAAUkpB,oBACb,GACA7vD,IAGiB,IAAjBzI,KAAKmrE,UACPnrE,KAAKmrE,SAAU,EACfnrE,KAAKgD,cACH,IAAI,EAAS+6B,GAAsB/9B,KAAMyI,OAGnB,IAAjBzI,KAAKmrE,UACdnrE,KAAKmrE,SAAU,EACfnrE,KAAKgD,cACH,IAAI,EAAS+6B,GAAwB/9B,KAAMyI,MAKjD,MAAMqxD,EAAsB95D,KAAK4tE,qBACjC,GAAInlE,EACF,IAAK,IAAI5H,EAAI,EAAG2C,EAAKs2D,EAAoBl5D,OAAQC,EAAI2C,IAAM3C,EACzDi5D,EAAoBj5D,GAAGb,KAAMyI,GAGjCqxD,EAAoBl5D,OAAS,CAC/B,CAKA,kBAAAstE,GACMluE,KAAKkiC,YAAcliC,KAAKkiC,UAAUtN,gBACpC50B,KAAKkiC,UAAUrN,mBAAmB,GAGpC70B,KAAKy9B,QACP,CAKA,oBAAA0wC,GACE,GAAInuE,KAAKssE,wBAAyB,CAChC,IAAK,IAAIzrE,EAAI,EAAG2C,EAAKxD,KAAKwsE,yBAAyB5rE,OAAQC,EAAI2C,IAAM3C,EACnE,EAAcb,KAAKwsE,yBAAyB3rE,IAE9Cb,KAAKwsE,yBAA2B,KAChCxsE,KAAKmsE,UAAUxoE,oBACb,EACA3D,KAAKorE,0BAEPprE,KAAKmsE,UAAUxoE,oBACb,EACA3D,KAAKorE,0BAEPprE,KAAKssE,wBAAwBpsE,UAC7BF,KAAKssE,wBAA0B,KAC/BtsE,KAAKmsE,UAAU/jE,QACjB,CAEA,GAAIpI,KAAKysE,eAAgB,CACvBzsE,KAAK0sE,gBAAgBuE,UAAUjxE,KAAKysE,gBACpC,MAAMznC,EAAWhlC,KAAKysE,eAAep/D,cACjC23B,aAAoBC,YACtBjlC,KAAK0sE,gBAAgBuE,UAAUjsC,EAASE,MAE1CllC,KAAKoiD,aAAQpjD,EACf,CAOA,MAAMyB,EAAST,KAAK8vE,YACdhrC,EACc,iBAAXrkC,EAAsB87B,SAAS0B,eAAex9B,GAAUA,EAEjE,GADAT,KAAKysE,eAAiB3nC,EACjBA,EAYE,CACLA,EAAchH,YAAY99B,KAAKmsE,WAC1BnsE,KAAKovC,YACRpvC,KAAKovC,UAAY,IAAI8hC,GAAqBlxE,OAG5CA,KAAKssE,wBAA0B,IAAI,EACjCtsE,KACAA,KAAKwL,gBAEP,IAAK,MAAMpM,KAAO,EAChBY,KAAKssE,wBAAwB5pE,iBAC3B,EAAoBtD,GACpBY,KAAKywE,sBAAsBnsE,KAAKtE,OAcpC,IAAI2qE,EACJ,GAZA3qE,KAAKmsE,UAAUzpE,iBACb,EACA1C,KAAKorE,0BACL,GAEFprE,KAAKmsE,UAAUzpE,iBACb,EACA1C,KAAKorE,2BACLrgE,GAA0B,CAACC,SAAS,IAIjChL,KAAKusE,qBAOR5B,EAAsB3qE,KAAKusE,yBAPG,CAE9B,MAAM4E,EAAarsC,EAAcz3B,cAGjCs9D,EADEwG,aAAsBlsC,WAAaksC,EAAWjsC,KAAOJ,CAEzD,CAIA9kC,KAAKwsE,yBAA2B,CAC9BtoE,EACEymE,EACA,EACA3qE,KAAKqrE,mBACLrrE,MAEFkE,EACEymE,EACA,EACA3qE,KAAKqrE,mBACLrrE,OAGJ,MAAMglC,EAAWF,EAAcz3B,cAC3B23B,aAAoBC,YACtBjlC,KAAK0sE,gBAAgB0E,QAAQpsC,EAASE,MAExCllC,KAAK0sE,gBAAgB0E,QAAQtsC,EAC/B,MApEM9kC,KAAKovC,YACP5iC,aAAaxM,KAAKwrE,0BAClBxrE,KAAKwrE,8BAA2BxsE,EAChCgB,KAAK4tE,qBAAqBhtE,OAAS,EACnCZ,KAAKovC,UAAUlvC,UACfF,KAAKovC,UAAY,MAEfpvC,KAAKyrE,qBACP51C,qBAAqB71B,KAAKyrE,oBAC1BzrE,KAAKyrE,wBAAqBzsE,GA6D9BgB,KAAK4sE,YAGP,CAKA,iBAAAmB,GACE/tE,KAAKy9B,QACP,CAKA,0BAAA4zC,GACErxE,KAAKy9B,QACP,CAKA,kBAAAwwC,GACMjuE,KAAKgsE,2BACP,EAAchsE,KAAKgsE,0BACnBhsE,KAAKgsE,yBAA2B,MAE9BhsE,KAAKisE,yBACP,EAAcjsE,KAAKisE,wBACnBjsE,KAAKisE,uBAAyB,MAEhC,MAAMhqC,EAAOjiC,KAAKkiC,UACdD,IACFjiC,KAAKsxE,oBAAoBtxE,KAAK2nC,WAE9B3nC,KAAKgsE,yBAA2B9nE,EAC9B+9B,EACA17B,EACAvG,KAAKqxE,2BACLrxE,MAEFA,KAAKisE,uBAAyB/nE,EAC5B+9B,EACA,EACAjiC,KAAKqxE,2BACLrxE,MAGFiiC,EAAKpN,mBAAmB,IAE1B70B,KAAKy9B,QACP,CAKA,wBAAAuwC,GACMhuE,KAAKksE,kCACPlsE,KAAKksE,gCAAgCtkE,QAAQ,GAC7C5H,KAAKksE,gCAAkC,MAEzC,MAAMtB,EAAa5qE,KAAKiwC,gBACpB26B,IACF5qE,KAAK8uE,gBAAgB,IAAIrhC,GAAW,WAAYm9B,IAChD5qE,KAAKksE,gCAAkC,CACrChoE,EAAO0mE,EAAYrkE,EAAgCvG,KAAKy9B,OAAQz9B,MAChEkE,EAAO0mE,EAAY,EAAkB5qE,KAAKy9B,OAAQz9B,MAClDkE,EAAO0mE,EAAY,WAAY5qE,KAAK8uE,gBAAiB9uE,MACrDkE,EAAO0mE,EAAY,cAAe5qE,KAAKuxE,mBAAoBvxE,QAG/DA,KAAKy9B,QACP,CAKA,UAAA+zC,GACE,QAASxxE,KAAK8rE,WAChB,CAKA,eAAAJ,GACE1rE,KAAKyrE,wBAAqBzsE,EAC1BgB,KAAKyxE,aAAax8C,KAAKC,MACzB,CAMA,UAAAw8C,GACM1xE,KAAKyrE,oBACP51C,qBAAqB71B,KAAKyrE,oBAE5BzrE,KAAK0rE,iBACP,CAKA,UAAAzR,GACE,MAAMZ,EAAcr5D,KAAKiwC,gBAAgBlD,sBACzC,IAAK,IAAIlsC,EAAI,EAAG2C,EAAK61D,EAAYz4D,OAAQC,EAAI2C,IAAM3C,EAAG,CACpD,MAAMq/B,EAAQm5B,EAAYx4D,GAAGq/B,MACzBA,EAAM+Q,eACR/Q,EAAMmQ,cAAc8rB,oBAExB,CACF,CAMA,MAAA1+B,GACMz9B,KAAKovC,gBAAyCpwC,IAA5BgB,KAAKyrE,qBACzBzrE,KAAKyrE,mBAAqB90C,sBAAsB32B,KAAK0rE,iBAEzD,CASA,aAAAiG,CAAcpD,GACZ,OAAOvuE,KAAK0uE,cAActmE,OAAOmmE,EACnC,CASA,iBAAAqD,CAAkBpD,GAChB,OAAOxuE,KAAK4uE,kBAAkBxmE,OAAOomE,EACvC,CASA,WAAAqD,CAAY3xC,GAEV,OADelgC,KAAKiwC,gBAAgB/B,YACtB9lC,OAAO83B,EACvB,CAMA,kBAAAqxC,CAAmBtuE,GACjB+3D,GAAuB/3D,EAAMi9B,MAC/B,CASA,aAAA4xC,CAAc9C,GACZ,OAAOhvE,KAAKivE,cAAc7mE,OAAO4mE,EACnC,CAMA,YAAAyC,CAAaT,GACX,MAAM79D,EAAOnT,KAAK2nC,UACZ1F,EAAOjiC,KAAKkiC,UACZ6vC,EAAqB/xE,KAAK8rE,YAEhC,IAAIrjE,EAAa,KACjB,QAAazJ,IAATmU,GAAsBwmC,GAAQxmC,IAAS8uB,GAAQA,EAAKtN,QAAS,CAC/D,MAAM6pC,EAAYv8B,EAAK7K,SACrBp3B,KAAK8rE,YAAc9rE,KAAK8rE,YAAYtN,eAAYx/D,GAE5C85B,EAAYmJ,EAAKtxB,WA2BvB,GA1BAlI,EAAa,CACXgsB,SAAS,EACT+jC,2BAA4Bx4D,KAAK2rE,4BACjC3U,UAAW,KACXlkD,OAAQ,GACNgmB,EAAU7lB,OACV6lB,EAAU5lB,WACV4lB,EAAUvjB,SACVpC,GAEFpP,MAAO/D,KAAK6rE,cACZpR,WAAY,EACZzqB,iBAAkBhwC,KAAKiwC,gBAAgBlD,sBACvCuT,WAAYtgD,KAAKwgD,YACjBiY,2BAA4Bz4D,KAAK4rE,4BACjC9R,oBAAqB,GACrB3mD,KAAMA,EACN29D,UAAW9wE,KAAK6tE,WAChBmD,KAAMA,EACNgB,UAAW,CAAC,EACZl5C,UAAWA,EACX0lC,UAAWA,EACXgS,YAAa,CAAC,EACdyB,MAAOzsE,EAAOxF,MACdkyE,cAAe,CAAC,GAEdp5C,EAAUJ,YAAcI,EAAUH,eAAgB,CACpD,MAAMpjB,EAAWkQ,MAAMqT,EAAUF,cAC7BE,EAAUvjB,SACVujB,EAAUF,aAEdnwB,EAAW0pE,WAAa,GACtBr5C,EAAUJ,WACVI,EAAUH,eACVpjB,EACApC,EAEJ,CACF,CjGz+CG,IAAeL,EAAQ+B,EiG2+C1B7U,KAAK8rE,YAAcrjE,EACnBzI,KAAKovC,UAAUmB,YAAY9nC,GAEvBA,IACEA,EAAWgsB,SACbz0B,KAAKy9B,SAEP14B,MAAMnF,UAAUmD,KAAKiN,MACnBhQ,KAAK4tE,qBACLnlE,EAAWqxD,qBAGTiY,KAEC/xE,KAAK+rE,kBACJ,GAAQ/rE,KAAK+rE,mBACZ,GAAatjE,EAAWqK,OAAQ9S,KAAK+rE,oBAExC/rE,KAAKgD,cACH,IAAI,E1GvjDH,Y0GujDoChD,KAAM+xE,IAE7C/xE,KAAK+rE,gBAAkBj3D,GAAoB9U,KAAK+rE,kBAKlD/rE,KAAK+rE,kBACJtjE,EAAW+1D,U7D3kDP,K6D4kDJ/1D,EAAW+1D,U7D3kDL,K6D4kDN,GAAa/1D,EAAWqK,OAAQ9S,KAAK+rE,mBAGtC/rE,KAAKgD,cACH,IAAI,E1G9jDH,U0G8jDkChD,KAAMyI,IjG5gD7BqK,EiG8gDRrK,EAAWqK,QjG9gDK+B,EiG8gDG7U,KAAK+rE,kBjG5gDlCl3D,EAAK,GAAK/B,EAAO,GACjB+B,EAAK,GAAK/B,EAAO,GACjB+B,EAAK,GAAK/B,EAAO,GACjB+B,EAAK,GAAK/B,EAAO,IAGZA,EAAOuM,UiG0gDZrf,KAAKgD,cAAc,IAAI,EAAS+6B,EAAyB/9B,KAAMyI,IAE/DzI,KAAKkrE,iBACFlrE,KAAK6D,YAAYk6B,KAChB/9B,KAAK6D,YAAYk6B,KACjB/9B,KAAK6D,YAAY,OAClB7D,KAAK6tE,WAAWr9D,oBAChBxQ,KAAK6tE,WAAW9+D,aAChB/O,KAAKiwE,uBAEHjwE,KAAKwrE,2BACRxrE,KAAKwrE,yBAA2B/+D,YAAW,KACzCzM,KAAKwrE,8BAA2BxsE,EAChCgB,KAAK6wE,kBAAkB,GACtB,GAEP,CAQA,aAAAuB,CAAcxH,GACZ,MAAMyH,EAAgBryE,KAAKiwC,gBACvBoiC,GACFryE,KAAKuxE,mBAAmB,IAAI9jC,GAAW,cAAe4kC,IAExDryE,KAAK0G,IAAIskE,GAAwBJ,EACnC,CAQA,OAAAxoB,CAAQjvC,GACNnT,KAAK0G,IAAIskE,GAAkB73D,EAC7B,CAYA,SAAAuqB,CAAUj9B,GACRT,KAAK0G,IAAIskE,GAAoBvqE,EAC/B,CAWA,OAAA4tE,CAAQpsC,GACN,IAAKA,GAAQA,aAAgB,GAE3B,YADAjiC,KAAK0G,IAAIskE,GAAkB/oC,GAG7BjiC,KAAK0G,IAAIskE,GAAkB,IAAI,IAE/B,MAAMxiE,EAAMxI,KACZiiC,EAAKge,MAAK,SAAUmuB,GAClB5lE,EAAI6lE,QAAQ,IAAI,GAAKD,GACvB,GACF,CAOA,UAAAxB,GACE,MAAM9nC,EAAgB9kC,KAAK+kC,mBAE3B,IAAI5xB,EACJ,GAAI2xB,EAAe,CACjB,MAAMwtC,EAAgBC,iBAAiBztC,GACjC7I,EACJ6I,EAAc0tC,YACdj5B,WAAW+4B,EAA+B,iBAC1C/4B,WAAW+4B,EAA2B,aACtC/4B,WAAW+4B,EAA4B,cACvC/4B,WAAW+4B,EAAgC,kBACvCp2C,EACJ4I,EAAc2tC,aACdl5B,WAAW+4B,EAA8B,gBACzC/4B,WAAW+4B,EAA0B,YACrC/4B,WAAW+4B,EAA6B,eACxC/4B,WAAW+4B,EAAiC,mBACzC7sD,MAAMwW,IAAWxW,MAAMyW,KAC1B/oB,EAAO,CAAC3F,KAAK8D,IAAI,EAAG2qB,GAAQzuB,KAAK8D,IAAI,EAAG4qB,KAErCyd,GAAQxmC,KAEP2xB,EAAc0tC,aACd1tC,EAAc2tC,cACd3tC,EAAc4tC,iBAAiB9xE,SAGjC2W,GACE,qEAIR,CAEA,MAAMo7D,EAAU3yE,KAAK2nC,WACjBx0B,GAAUw/D,GAAY5xE,EAAOoS,EAAMw/D,KACrC3yE,KAAKoiD,QAAQjvC,GACbnT,KAAKsxE,oBAAoBn+D,GAE7B,CAOA,mBAAAm+D,CAAoBn+D,GAClB,MAAM8uB,EAAOjiC,KAAKkiC,UACdD,GACFA,EAAKjL,gBAAgB7jB,EAEzB,Ge5sDK,KAAM,sBlJhBb","sources":["webpack://ol/webpack/universalModuleDefinition","webpack://ol/./node_modules/color-name/index.js","webpack://ol/webpack/bootstrap","webpack://ol/webpack/runtime/define property getters","webpack://ol/webpack/runtime/hasOwnProperty shorthand","webpack://ol/./node_modules/ol/CollectionEventType.js","webpack://ol/./node_modules/ol/ObjectEventType.js","webpack://ol/./node_modules/ol/events/EventType.js","webpack://ol/./node_modules/ol/Disposable.js","webpack://ol/./node_modules/ol/array.js","webpack://ol/./node_modules/ol/functions.js","webpack://ol/./node_modules/ol/obj.js","webpack://ol/./node_modules/ol/events/Event.js","webpack://ol/./node_modules/ol/events/Target.js","webpack://ol/./node_modules/ol/events.js","webpack://ol/./node_modules/ol/Observable.js","webpack://ol/./node_modules/ol/util.js","webpack://ol/./node_modules/ol/Object.js","webpack://ol/./node_modules/ol/Collection.js","webpack://ol/./node_modules/ol/MapEvent.js","webpack://ol/./node_modules/ol/MapBrowserEvent.js","webpack://ol/./node_modules/ol/MapBrowserEventType.js","webpack://ol/./node_modules/ol/has.js","webpack://ol/./node_modules/ol/pointer/EventType.js","webpack://ol/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol/./node_modules/ol/MapEventType.js","webpack://ol/./node_modules/ol/MapProperty.js","webpack://ol/./node_modules/ol/asserts.js","webpack://ol/./node_modules/ol/structs/PriorityQueue.js","webpack://ol/./node_modules/ol/TileQueue.js","webpack://ol/./node_modules/ol/TileState.js","webpack://ol/./node_modules/ol/ViewProperty.js","webpack://ol/./node_modules/ol/math.js","webpack://ol/./node_modules/ol/centerconstraint.js","webpack://ol/./node_modules/ol/extent.js","webpack://ol/./node_modules/ol/extent/Relationship.js","webpack://ol/./node_modules/ol/coordinate.js","webpack://ol/./node_modules/ol/easing.js","webpack://ol/./node_modules/ol/console.js","webpack://ol/./node_modules/ol/proj/Units.js","webpack://ol/./node_modules/ol/proj/Projection.js","webpack://ol/./node_modules/ol/proj/epsg3857.js","webpack://ol/./node_modules/ol/proj/epsg4326.js","webpack://ol/./node_modules/ol/proj/projections.js","webpack://ol/./node_modules/ol/proj/transforms.js","webpack://ol/./node_modules/ol/proj/utm.js","webpack://ol/./node_modules/ol/sphere.js","webpack://ol/./node_modules/ol/proj.js","webpack://ol/./node_modules/ol/transform.js","webpack://ol/./node_modules/ol/geom/Geometry.js","webpack://ol/./node_modules/ol/geom/flat/transform.js","webpack://ol/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol/./node_modules/ol/geom/flat/area.js","webpack://ol/./node_modules/ol/geom/flat/closest.js","webpack://ol/./node_modules/ol/geom/flat/deflate.js","webpack://ol/./node_modules/ol/geom/flat/inflate.js","webpack://ol/./node_modules/ol/geom/flat/simplify.js","webpack://ol/./node_modules/ol/geom/LinearRing.js","webpack://ol/./node_modules/ol/geom/Point.js","webpack://ol/./node_modules/ol/geom/flat/contains.js","webpack://ol/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol/./node_modules/ol/geom/flat/segments.js","webpack://ol/./node_modules/ol/geom/flat/reverse.js","webpack://ol/./node_modules/ol/geom/flat/orient.js","webpack://ol/./node_modules/ol/geom/Polygon.js","webpack://ol/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol/./node_modules/ol/resolutionconstraint.js","webpack://ol/./node_modules/ol/rotationconstraint.js","webpack://ol/./node_modules/ol/View.js","webpack://ol/./node_modules/ol/tilegrid/common.js","webpack://ol/./node_modules/ol/ViewHint.js","webpack://ol/./node_modules/ol/css.js","webpack://ol/./node_modules/ol/dom.js","webpack://ol/./node_modules/ol/control/Control.js","webpack://ol/./node_modules/ol/control/Attribution.js","webpack://ol/./node_modules/ol/control/Rotate.js","webpack://ol/./node_modules/ol/control/Zoom.js","webpack://ol/./node_modules/ol/Kinetic.js","webpack://ol/./node_modules/ol/interaction/Property.js","webpack://ol/./node_modules/ol/interaction/Interaction.js","webpack://ol/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol/./node_modules/ol/events/condition.js","webpack://ol/./node_modules/ol/interaction/Pointer.js","webpack://ol/./node_modules/ol/interaction/DragPan.js","webpack://ol/./node_modules/ol/interaction/DragRotate.js","webpack://ol/./node_modules/ol/render/Box.js","webpack://ol/./node_modules/ol/interaction/DragBox.js","webpack://ol/./node_modules/ol/interaction/DragZoom.js","webpack://ol/./node_modules/ol/events/Key.js","webpack://ol/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol/./node_modules/ol/interaction/PinchRotate.js","webpack://ol/./node_modules/ol/interaction/PinchZoom.js","webpack://ol/./node_modules/ol/layer/Property.js","webpack://ol/./node_modules/ol/layer/Base.js","webpack://ol/./node_modules/ol/layer/Group.js","webpack://ol/./node_modules/ol/render/EventType.js","webpack://ol/./node_modules/ol/layer/Layer.js","webpack://ol/./node_modules/quickselect/index.js","webpack://ol/./node_modules/rbush/index.js","webpack://ol/./node_modules/color-parse/index.js","webpack://ol/./node_modules/color-space/rgb.js","webpack://ol/./node_modules/color-space/hsl.js","webpack://ol/./node_modules/color-space/xyz.js","webpack://ol/./node_modules/color-space/luv.js","webpack://ol/./node_modules/color-space/lchuv.js","webpack://ol/./node_modules/ol/color.js","webpack://ol/./node_modules/color-rgba/index.js","webpack://ol/./node_modules/ol/size.js","webpack://ol/./node_modules/ol/expr/expression.js","webpack://ol/./node_modules/ol/expr/cpu.js","webpack://ol/./node_modules/ol/Image.js","webpack://ol/./node_modules/ol/ImageState.js","webpack://ol/./node_modules/ol/style/IconImageCache.js","webpack://ol/./node_modules/ol/style/IconImage.js","webpack://ol/./node_modules/ol/colorlike.js","webpack://ol/./node_modules/ol/render/canvas.js","webpack://ol/./node_modules/ol/style/Image.js","webpack://ol/./node_modules/ol/style/RegularShape.js","webpack://ol/./node_modules/ol/style/Circle.js","webpack://ol/./node_modules/ol/style/Fill.js","webpack://ol/./node_modules/ol/style/Icon.js","webpack://ol/./node_modules/ol/style/Stroke.js","webpack://ol/./node_modules/ol/style/Style.js","webpack://ol/./node_modules/ol/style/Text.js","webpack://ol/./node_modules/ol/render/canvas/style.js","webpack://ol/./node_modules/ol/layer/BaseVector.js","webpack://ol/./node_modules/ol/render/Event.js","webpack://ol/./node_modules/ol/renderer/Map.js","webpack://ol/./node_modules/ol/renderer/Composite.js","webpack://ol/./node_modules/ol/Map.js","webpack://ol/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://ol/./node_modules/ol/renderer/Layer.js","webpack://ol/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://ol/./node_modules/ol/layer/BaseImage.js","webpack://ol/./node_modules/ol/reproj.js","webpack://ol/./node_modules/ol/resolution.js","webpack://ol/./node_modules/ol/reproj/Triangulation.js","webpack://ol/./node_modules/ol/reproj/Image.js","webpack://ol/./node_modules/ol/reproj/common.js","webpack://ol/./node_modules/ol/source/Source.js","webpack://ol/./node_modules/ol/source/Image.js","webpack://ol/./node_modules/ol/source/common.js","webpack://ol/./node_modules/ol/uri.js","webpack://ol/./ol.mjs","webpack://ol/./node_modules/ol/layer/Image.js","webpack://ol/./node_modules/ol/source/mapserver.js","webpack://ol/./node_modules/ol/source/wms.js","webpack://ol/./node_modules/ol/string.js","webpack://ol/./node_modules/ol/control/defaults.js","webpack://ol/./node_modules/ol/interaction/defaults.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ol\"] = factory();\n\telse\n\t\troot[\"ol\"] = factory();\n})(self, () => {\nreturn ","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.4.0';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n      this.clearRenderer();\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","/**\n * @module ol/color\n */\nimport parseRgba from 'color-rgba';\nimport lchuv from 'color-space/lchuv.js';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   `['resolution']` returns the current resolution\n *   `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   `['zoom']` The current zoom level (WebGL only).\n *   `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   `['/', value1, value2]` divides `value1` by `value2`\n *   `['+', value1, value2, ...]` adds the values\n *   `['-', value1, value2]` subtracts `value2` from `value1`\n *   `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   `['abs', value1]` returns the absolute value of `value1`\n *   `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image ? null : this.image.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image = null;\n          }\n        }\n      } else {\n        this.image = null;\n      }\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image.getExtent();\n    const img = this.image.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const image = this.image;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Image\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          (e) => {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/Image\n */\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {ceil} from '../math.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","// .mjs file is a JavaScript module file that uses ECMAScript Modules (ESM).\r\n\r\nimport { Map, View } from 'ol';\r\nimport { getCenter } from 'ol/extent.js';\r\nimport Image from 'ol/layer/Image.js';\r\nimport ImageSource from 'ol/source/Image.js';\r\nimport { createLoader as createCgiLoader } from 'ol/source/mapserver.js';\r\nimport { createLoader as createWmsLoader } from 'ol/source/wms.js';\r\n\r\nconst ol = {\r\n    extent: {\r\n        getCenter\r\n    },\r\n    layer: {\r\n        Image\r\n    },\r\n    source: {\r\n        Image: ImageSource,\r\n\r\n        mapserver: {\r\n            createLoader: createCgiLoader\r\n        },\r\n        wms: {\r\n            createLoader: createWmsLoader\r\n        }\r\n    },\r\n    Map, View\r\n};\r\n\r\nexport default ol;","/**\n * @module ol/layer/Image\n */\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport BaseImageLayer from './BaseImage.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/source/mapserver\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\nimport {appendParams} from '../uri.js';\nimport {getRequestExtent} from './Image.js';\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {string} url The MapServer url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * the image from the remote server.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Object} [params] Additional query parameters.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * @param {string} baseUrl The MapServer url.\n * @param {Object<string, string|number>} params Request parameters.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @return {string} The MapServer map image request URL.\n */\nfunction getUrl(baseUrl, params, extent, size) {\n  const width = Math.round(size[0]);\n  const height = Math.round(size[1]);\n  const mapSize = `${width} ${height}`;\n  const mapExt = `${extent[0]} ${extent[1]} ${extent[2]} ${extent[3]}`;\n\n  const baseParams = {\n    mode: 'map',\n    map_imagetype: 'png',\n    mapext: mapExt,\n    imgext: mapExt,\n    map_size: mapSize,\n    imgx: width / 2,\n    imgy: height / 2,\n    imgxy: mapSize,\n  };\n  Object.assign(baseParams, params);\n  return appendParams(baseUrl, baseParams);\n}\n\n/**\n * Creates a loader for MapServer images generated using the CGI interface,\n * which predates OGC services. It is **strongly** recommended to configure\n * MapServer to use WMS, and use the WMS createLoader.\n * @param {LoaderOptions} options LoaderOptions Options.\n * @return {import('../Image.js').ImageObjectPromiseLoader} MapServer image.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load || decode;\n  const ratio = options.ratio ?? 1;\n  const crossOrigin = options.crossOrigin ?? null;\n\n  /** @type {import('../Image.js').ImageObjectPromiseLoader} */\n  return function (extent, resolution, pixelRatio) {\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n    const src = getUrl(options.url, options.params, extent, size);\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n","/**\n * @module ol/source/wms\n */\n\nimport {decode} from '../Image.js';\nimport {getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {floor, round} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\nimport {getRequestExtent} from './Image.js';\nimport {DECIMALS} from './common.js';\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n\n/**\n * @param {string} baseUrl Base URL.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params WMS params. Will be modified in place.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(baseUrl, extent, size, projection, params) {\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  const v13 = compareVersions(params['VERSION'], '1.3') >= 0;\n  params[v13 ? 'CRS' : 'SRS'] = projection.getCode();\n  const bbox =\n    v13 && axisOrientation.startsWith('ne')\n      ? [extent[1], extent[0], extent[3], extent[2]]\n      : extent;\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(baseUrl, params);\n}\n\n/**\n * @param {import(\"../extent\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio pixel ratio.\n * @param {import(\"../proj.js\").Projection} projection Projection.\n * @param {string} url WMS service url.\n * @param {Object} params WMS params.\n * @param {import(\"./wms.js\").ServerType} serverType The type of the remote WMS server.\n * @return {string} Image src.\n */\nexport function getImageSrc(\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  url,\n  params,\n  serverType,\n) {\n  params = Object.assign({REQUEST: 'GetMap'}, params);\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  if (pixelRatio != 1) {\n    switch (serverType) {\n      case 'geoserver':\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case 'mapserver':\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case 'carmentaserver':\n      case 'qgis':\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        throw new Error('Unknown `serverType` configured');\n    }\n  }\n\n  const src = getRequestUrl(url, extent, imageSize, projection, params);\n  return src;\n}\n\n/**\n * @param {Object} params WMS params.\n * @param {string} request WMS `REQUEST`.\n * @return {Object} WMS params with required properties set.\n */\nexport function getRequestParams(params, request) {\n  return Object.assign(\n    {\n      'REQUEST': request,\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'FORMAT': 'image/png',\n      'STYLES': '',\n      'TRANSPARENT': 'TRUE',\n    },\n    params,\n  );\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT` and `BBOX` will be set\n * dynamically. `CRS` (`SRS` for WMS version < 1.3.0) will is derived from the `proection` config.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {string} url WMS service URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for WMS images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const hidpi = options.hidpi === undefined ? true : options.hidpi;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio || 1.5;\n  const load = options.load || decode;\n  const crossOrigin = options.crossOrigin ?? null;\n\n  return (extent, resolution, pixelRatio) => {\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    if (pixelRatio != 1 && (!hidpi || options.serverType === undefined)) {\n      pixelRatio = 1;\n    }\n    const src = getImageSrc(\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      options.url,\n      getRequestParams(options.params, 'GetMap'),\n      options.serverType,\n    );\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n\n/**\n * Get the GetFeatureInfo URL for the passed coordinate and resolution. Returns `undefined` if the\n * GetFeatureInfo URL cannot be constructed.\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function. In addition to\n * the params required by the loader, `INFO_FORMAT` should be specified, it defaults to\n * `application/json`. If `QUERY_LAYERS` is not provided, then the layers specified in the `LAYERS`\n * parameter will be used.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nexport function getFeatureInfoUrl(options, coordinate, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const projectionObj = getProjection(options.projection || 'EPSG:3857');\n\n  const extent = getForViewAndSize(\n    coordinate,\n    resolution,\n    0,\n    GETFEATUREINFO_IMAGE_SIZE,\n  );\n\n  const baseParams = {\n    'QUERY_LAYERS': options.params['LAYERS'],\n    'INFO_FORMAT': 'application/json',\n  };\n  Object.assign(\n    baseParams,\n    getRequestParams(options.params, 'GetFeatureInfo'),\n    options.params,\n  );\n\n  const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n  const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n  const v13 = compareVersions(baseParams['VERSION'], '1.3') >= 0;\n  baseParams[v13 ? 'I' : 'X'] = x;\n  baseParams[v13 ? 'J' : 'Y'] = y;\n\n  return getRequestUrl(\n    options.url,\n    extent,\n    GETFEATUREINFO_IMAGE_SIZE,\n    projectionObj,\n    baseParams,\n  );\n}\n\n/**\n * Get the GetLegendGraphic URL, optionally optimized for the passed resolution and possibly\n * including any passed specific parameters. Returns `undefined` if the GetLegendGraphic URL\n * cannot be constructed.\n *\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function.\n * @param {number} [resolution] Resolution. If not provided, `SCALE` will not be calculated and\n * included in URL.\n * @return {string|undefined} GetLegendGraphic URL.\n * @api\n */\nexport function getLegendUrl(options, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_VERSION,\n    'REQUEST': 'GetLegendGraphic',\n    'FORMAT': 'image/png',\n  };\n\n  if (resolution !== undefined) {\n    const mpu =\n      getProjection(options.projection || 'EPSG:3857').getMetersPerUnit() || 1;\n    const pixelSize = 0.00028;\n    baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n  }\n\n  Object.assign(baseParams, options.params);\n\n  if (options.params !== undefined && baseParams['LAYER'] === undefined) {\n    const layers = baseParams['LAYERS'];\n    const isSingleLayer = !Array.isArray(layers) || layers.length !== 1;\n    if (!isSingleLayer) {\n      return undefined;\n    }\n    baseParams['LAYER'] = layers;\n  }\n\n  return appendParams(options.url, baseParams);\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","constructor","this","disposed","dispose","disposeInternal","ascending","a","b","linearFindNearest","arr","target","direction","n","length","i","candidate","equals","arr1","arr2","len1","TRUE","VOID","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","hasListener","keys","index","indexOf","splice","listen","thisArg","once","originalListener","bind","eventsKey","Observable","on","un","revision_","changed","getRevision","onInternal","Array","isArray","len","onceInternal","ol_key","unInternal","unByKey","Error","uidCounter_","getUid","ol_uid","String","ObjectEvent","oldValue","values","values_","setProperties","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","Property","CollectionEvent","element","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","forEach","f","getArray","item","insertAt","elem","CollectionEventType","removeAt","remove","prev","setAt","except","map","frameState","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","coordinate","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","test","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","window","moveTolerance","map_","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","id","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","Math","abs","clientX","clientY","assertion","errorMessage","DROP","Infinity","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","apply","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","CENTER","RESOLUTION","ROTATION","min","max","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","t","angleInRadians","PI","angleInDegrees","r","lerp","decimals","factor","pow","round","ceil","wrap","range","createExtent","extent","onlyCenter","smooth","center","resolution","size","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","ratio","log","none","boundingExtent","coordinates","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","dest","createOrUpdateEmpty","extendFlatCoordinates","flatCoordinates","offset","end","stride","extendXY","getBottomLeft","getBottomRight","rotation","x0","y0","x3","y3","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getRotatedViewport","getHeight","getIntersection","intersection","intersects","getTopLeft","getTopRight","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","easeOut","easeIn","inAndOut","linear","levels","level","warn","args","console","METERS_PER_UNIT","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","EPSG4326Projection","cache","transforms","destination","transformFn","sourceCode","destinationCode","K0","E","E2","E3","E_P2","SQRT_E","sqrt","_E","_E2","_E3","_E4","_E5","M1","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","north","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c","c2","d2","d3","d4","d5","latitude","longitude","zoneToCentralLongitude","number","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLonRad","a2","a3","a4","a5","a6","m","epsgRegExes","zoneFromCode","epsgId","re","match","parseInt","makeTransformFunction","transformer","input","output","dimension","slice","coord","getDistance","c1","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","transformFactories","projection","forward","inverse","projectionFactories","showCoordinateWarning","cloneTransform","addProjection","projectionLike","replace","makeProjection","pointResolution","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","transformFunc","sourceTransforms","destinationTransforms","makeTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","getTransform","transform","userProjection","getUserProjection","toUserCoordinate","sourceProjection","fromUserCoordinate","destProjection","fromUserExtent","projections2","forwardTransform","inverseTransform","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","mat","e","atan","exp","matrixPrecision","tmpTransform","tmpPoint","NaN","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","fn","lastResult","lastArgs","lastThis","nextArgs","arguments","memoizeOne","revision","squaredTolerance","getSimplifiedGeometry","clone","applyTransform","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","Number","MIN_VALUE","getClosestPoint","intersectsCoordinate","computeExtent","isNaN","returnOrUpdate","anchor","scale","simplify","tolerance","getType","intersectsExtent","translate","deltaX","deltaY","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","transformed","destinationStride","j","k","projTransform","getStrideForLayout","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","startsWith","anchorX","anchorY","linearRing","twiceArea","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","assignClosestPoint","maxDelta","isRing","squaredDistance","deflateCoordinates","inflateCoordinates","snap","quantize","simplifiedFlatCoordinates","simplifiedOffset","LinearRing","maxDelta_","maxDeltaRevision_","getArea","markers","stack","last","first","maxSquaredDistance","douglasPeucker","Point","createOrUpdateFromCoordinate","deflateCoordinate","linearRingContainsExtent","outside","callback","val","linearRingContainsXY","wn","linearRingsContainsXY","ends","intersectsLineString","coordinatesExtent","ret","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","tmp","linearRingIsClockwise","edge","orientLinearRings","right","isClockwise","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","data","extension","polygon","arrayMaxSquaredDelta","assignClosestArrayPoint","getOrientedFlatCoordinates","area","linearRings","coordinatess","jj","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointOfArray","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRingsAreOriented","simplifiedEnds","quantizeArray","intersectsLinearRing","intersectsLinearRingArray","deflateCoordinatesArray","fromExtent","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","result","createMinMaxResolution","cappedMaxRes","disable","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","floor","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","defaultMaxZoom","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","w","h","setViewportSize","getCenter","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","geometry","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","RegExp","join","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","style","pointerEvents","target_","listenerKeys","render","setTarget","getMap","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","attributions","className","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","layers","getAllLayers","visibleAttributions","Set","flatMap","layer","getAttributions","add","some","getSource","getAttributionsCollapsible","setCollapsible","from","updateElement_","display","all","attribution","visible","node","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","getView","contains","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","begin","update","lastIndex","firstIndex","getAngle","zoomByDelta","setActive","getActive","mapBrowserEvent","active","delta_","stopEvent","browserEvent","shiftKey","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","targetElement","getTargetElement","rootNode","ShadowRoot","host","hasAttribute","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","distance","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","lastAngle_","getSize","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","removeChild","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","pan","platformModifierKey","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","background_","background","opacity","zIndex","className_","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","GroupEvent","LayerGroup","Base","baseOptions","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","layerState","inView","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","clearRenderer","getFeatures","getData","isVisible","getMapInternal","layerStatesArray","getLayerGroup","find","layerExtent","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","handlePrecompose_","renderEvent","arrayLayerState","createRenderer","hasRenderer","quickselect","compare","quickselectStep","defaultCompare","s","sd","swap","RBush","maxEntries","_maxEntries","_minEntries","_all","search","bbox","toBBox","nodesToSearch","children","child","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","mid","baseHues","red","orange","yellow","green","blue","purple","name","channel","alias","rgb","hsl","t3","l","g","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","whitepoint","_xyz","white","arg","_u","_v","u","v","xn","yn","zn","luv","vn","yr","lchuv","hr","NO_COLOR","cacheSize","withAlpha","color","rgbaToLcha","fromString","raw","parsed","cstr","space","parts","alpha","base","exec","dims","trim","split","parseFloat","endsWith","normalize","asArray","hasArea","toSize","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","featureId","geometryType","mapState","encoded","expectedType","toString","returnType","parser","parsers","parseCallExpression","Ops","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","usesMapState","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","message","interpolationType","JSON","stringify","interpolation","stop","operation","argCount","needleType","haystack","colors","parsedColors","minArgs","maxArgs","expression","argType","validators","computeGeometryType","substring","getGeometries","buildExpression","compileExpression","colorValue","compileAssertionExpression","hasOwn","compileAccessorExpression","concat","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","decodeFallback","image","src","then","catch","handleLoad","unlisten","handleError","pixelRatio","stateOrLoader","pixelRatio_","image_","loader","getImage","getPixelRatio","requestResolution","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","error","finally","setImage","getCacheKey","crossOrigin","shared","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","getPattern","pattern","getImageState","ready","createPattern","setSize","maxCacheSize","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","getHitDetectionImage","fillRect","getSrc","ctx","globalCompositeOperation","fillStyle","onChange","cacheKey","asColorLike","canvasPattern","patternCanvasContext","asCanvasPattern","defaultFillStyle","defaultLineCap","defaultLineJoin","checkedFonts","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape","hitDetectionCanvas_","fill_","fill","origin_","points","radius2_","radius2","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius","getRadius2","getStroke","setFill","createHitDetectionCanvas_","fillKey","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","setRadius","patternImage_","setColor","patternImage","CanvasPattern","CanvasGradient","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","setGeometry","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","text","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","defaultStyles","createDefaultStyle","Circle","Text","font_","font","keepUpright_","keepUpright","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getKeepUpright","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setKeepUpright","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styles","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","getId","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","styleFunction","setDeclutter","inversePixelTransform","expireIconCache","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","worldWidth","worldsAway","sourceExtentWidth","projectionExtent","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","scheduleExpireIconCache","postRenderFunctions","Map","fontChangeListenerKey_","redrawText","container","insertBefore","firstChild","children_","BaseVector","renderedLayerStates","previousElement","layerIndex","sourceState","oldChildren","childNodes","oldChild","newChild","replaceChildren","removeLayerMapProperty","setLayerMapProperty","instructions_","context_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","pixelContext","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","clip","prepareContainer","canvasTransform","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","imageLayer","viewResolution","imageSource","viewHints","renderedExtent","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","imagePixelRatio","viewCenter","scaleX","scaleY","clipped","dw","dh","getInterpolate","imageSmoothingEnabled","globalAlpha","restore","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","fromResolutionLike","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","sourceProj_","targetProj_","transformInvCache","transformInv","coordTransform","pointLength","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","getImageFunction","interpolate","maxTargetExtent","limitedTargetExtent","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceResolution","triangulation","sourceImage","sourcePixelRatio","triangulation_","targetExtent_","sourceImage_","sourcePixelRatio_","interpolate_","sourceListenerKey_","unlistenSource_","reproject_","sources","gutter","renderEdges","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","adaptAttributions","attributionLike","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","setState","ImageSourceEvent","getRequestExtent","uri","params","keyParams","encodeURIComponent","qs","BaseImage","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","requestExtent","handleImageChange","mapserver","createLoader","baseUrl","mapSize","mapExt","baseParams","mode","map_imagetype","mapext","imgext","map_size","imgx","imgy","imgxy","getUrl","url","wms","hidpi","serverType","REQUEST","dpi","v13","s1","s2","n1","n2","getRequestUrl","getImageSrc","request","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotateOptions","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","currentDoc","documentElement","interactionsArray","handlePostRender","tileQueue","lowOnFrameBudget","time","unobserve","Composite","targetRoot","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize"],"sourceRoot":""}