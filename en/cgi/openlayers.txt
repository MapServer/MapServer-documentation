.. index::
   simple: OpenLayers viewer

.. _openlayers:

*****************************************************************************
 MapServer OpenLayers Viewer
*****************************************************************************

MapServer (since the 6.0 release) provides a simple, built-in method for testing a mapfile
using OpenLayers.  This feature is for testing and development purposes
only, and not for production or deploying full-featured sites.  You
can preview, test, and navigate a mapfile by accessing a special URL
which will return a built-in OpenLayers template.

.. note:: 
   This feature was discussed in
   `RFC 63 <https://mapserver.org/development/rfc/ms-rfc-63.html>`_
   and in ticket `#3549 <https://github.com/MapServer/MapServer/issues/3549>`_

Up to the MapServer 8.4 release the OpenLayers Viewer was based on `OpenLayers 2 <https://openlayers.org/two/>`_.
As of MapServer 8.6 the OpenLayers viewer was updated to work with `OpenLayers 10.5+ <https://openlayers.org/>`_.
The MapServer CGI Layer, used by the viewer, can be see in 
the `OpenLayers examples <https://openlayers.org/en/latest/examples/mapserver-cgi.html>`_.

Using the OpenLayers viewer
-----------------------------------------------------------------------------


Opening the OpenLayers viewer in your browser
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Assuming you are running MapServer on your local machine, and you have
the Itasca demo setup, a basic URL would be::

    http://localhost/cgi-bin/mapserv?mode=browse&template=openlayers&layer=lakespy2&layer=dlgstln2&map=/var/www/workshop/itasca.map

Here is a quick breakdown of that URL:

* Basic Parameters for activating the OpenLayers browser::

    template=openlayers
    mode=browse


* Basic Map / Layer parameters::

    map=/var/www/workshop/itasca.map
    layer=lakespy2
    layer=dlgstln2

When using the ``mode=browse`` MapServer will create an image on the server. By default this will be in the same folder as the mapfile.
If this MapServer cannot write to this folder you will see an error similar to:

.. code-block:: bash

    msSaveImage(): Unable to access file. Failed to create output file (/etc/mapserver/Test174833722471.png).

In this case you will need to set your :ref:`IMAGEPATH <mapfile-web-imagepath>` to a folder MapServer can write to.

**That's it!**

.. tip::
   If you don't have a live MapServer install to play with, you can also try the
   `MapServer demo <https://demo.mapserver.org/cgi-bin/wms?mode=browse&template=openlayers&layer=continents&layer=country_bounds>`_.

Opening the OpenLayers viewer in the form of a WMS request
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This feature is useful when debugging WMS requests.  You can write one
of these by hand, or copy the URL for a WMS tile.  Running the
following should give you a simple OpenLayers demo around the BBOX
(split into several lines for readability)::

    http://localhost/cgi-bin/mapserv?map=/var/www/workshop/itasca.map
         &LAYERS=lakespy2&VERSION=1.1.1&SERVICE=WMS&REQUEST=GetMap
         &FORMAT=application/openlayers&WIDTH=512&HEIGHT=512&SRS=EPSG:26915
         &BBOX=429956.19803725,5231780.0814818,444078.32296225,5245902.2064068


Here is a quick breakdown of the interesting parts of that URL:

* Special Parameter for activating the OpenLayers viewer::

    FORMAT=application/openlayers

* Basic MapServer Parameters::

    map=/var/www/workshop/itasca.map

* Basic WMS parameters::

    # Layers, our bounding box and projection
    LAYERS=lakespy2
    BBOX=429956.19803725,5231780.0814818,444078.32296225,5245902.2064068
    SRS=EPSG:26915

    # Version and other WMS request parameters
    SERVICE=WMS
    VERSION=1.3.0
    REQUEST=GetMap
    WIDTH=512
    HEIGHT=512
    TRANSPARENT=true
    CRS=EPSG:4326
    BBOX=-90,-180,90,180
    STYLES=

.. tip::
   If you don't have a live MapServer install to play with, you can also try the
   `MapServer demo in the form of a WMS request <https://demo.mapserver.org/cgi-bin/wms?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetMap&BBOX=-90,-180,90,180&CRS=EPSG:4326&WIDTH=953&HEIGHT=480&LAYERS=bluemarble,continents,country_bounds,cities&STYLES=&FORMAT=application/openlayers&TRANSPARENT=true>`_.

Customizing settings
~~~~~~~~~~~~~~~~~~~~

The viewer relies on two external files - a JavaScript file and a CSS file. By default these are loaded
from ``https://mapserver.org/lib/``, however you can use your own copies of these files if external network access
is restricted by setting the following two :ref:`environment_variables`:

* ``MS_OPENLAYERS_JS_URL`` - the URL to the OpenLayers JavaScript library. 
* ``MS_OPENLAYERS_CSS_URL`` - the URL to the OpenLayers CSS file used for styling. 

These variables can also be set in a mapfile, for example to point to the full OpenLayers build on a CDN 
(Content Delivery Network):

.. code-block:: mapfile

    CONFIG "MS_OPENLAYERS_CSS_URL" "//cdn.jsdelivr.net/npm/ol@v10.5.0/ol.css"
    CONFIG "MS_OPENLAYERS_JS_URL" "//cdn.jsdelivr.net/npm/ol@v10.5.0/dist/ol.js"

Location of the embedded OpenLayers.js file
-------------------------------------------

If you aren't providing your own OpenLayers library through ``MS_OPENLAYERS_JS_URL`` and
``MS_OPENLAYERS_CSS_URL``, MapServer will point to hard-coded filepaths at `mapserver.org/lib` to find the OpenLayers 
library, referred to in `maptemplate.c <https://github.com/MapServer/MapServer/blob/main/src/maptemplate.c#L54>`_.

This version of OpenLayers is a cut-down version that only contains the classes needed for the
MapServer viewer. The ``ol-mapserver.js`` file is ~200 KB compared to the full library which is ~ 840 KB.

The contents of that `lib` folder is stored in the MapServer documentation repository, 
in the `/extra <https://github.com/MapServer/MapServer-documentation/tree/main/extra>`_ folder.
You are warmly encouraged to contribute to upgrading the OpenLayers library, at any time (maybe start 
with creating a new `Pull Request <https://github.com/MapServer/MapServer-documentation/pulls>`_ there).