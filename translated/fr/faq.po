# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Regents of the University of Minnesota
# This file is distributed under the same license as the MapServer package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MapServer 6.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-06-11 00:29\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../en/faq.txt:5
# cd5e24d7810b4f5ab4d6863a2087f2f2
msgid "FAQ"
msgstr ""

#: ../../../en/faq.txt:8
# 380bd3169f554baeb9e0960a30cce18f
msgid "Where is the MapServer log file?"
msgstr ""

#: ../../../en/faq.txt:10
# 6a826efc00964451b4874d76b714389c
msgid "See :ref:`rfc28`"
msgstr ""

#: ../../../en/faq.txt:13
# e06a1ecd03ad429093887deadbd49f62
msgid "What books are available about MapServer?"
msgstr ""

#: ../../../en/faq.txt:15
# 1b24a08fb0e849ada087ec9fbbce7215
msgid "`\"Mapping Hacks\" <http://www.oreilly.com/catalog/mappinghks/>`__ by Schuyler Erle, Rich Gibson, and Jo Walsh is available from O'Reilly."
msgstr ""

#: ../../../en/faq.txt:18
# 856f967ddbcd4f5cba2d80204f47e807
msgid "`\"Web Mapping Illustrated\" <http://oreilly.com/catalog/webmapping>`__ by Tyler Mitchell is available from O'Reilly. Introduces MapServer and many other related technologies including, GDAL/OGR, MapScript, PostGIS, map projections, etc."
msgstr ""

#: ../../../en/faq.txt:23
# 3081d10ae7c240209b41b989336c6023
msgid "`\"MapServer: Open Source GIS Development\" <http://www.apress.com/book/bookDisplay.html?bID=443>`__ by Bill Kropla."
msgstr ""

#: ../../../en/faq.txt:28
# 265f79b2ebd1462bb516360da6cbae75
msgid "How do I compile MapServer for Windows?"
msgstr ""

#: ../../../en/faq.txt:30
# 0876cd04158940b290f0aa9d5030cb16
msgid "See :ref:`win32`. Also, you can use the development libraries in :ref:`OSGeo4W <windows>` as a starting point instead of building all of the dependent libraries yourself."
msgstr ""

#: ../../../en/faq.txt:35
# 362f112278884b98aa7948dcba91d4e5
msgid "What do MapServer version numbers mean?"
msgstr ""

#: ../../../en/faq.txt:37
# 0889a013811d4dd9910ba1c7b3418383
msgid "MapServer's version numbering scheme is very similar to Linux's. For example, a MapServer version number of 4.2.5 can be decoded as such:"
msgstr ""

#: ../../../en/faq.txt:40
# 06913a822d624486949751de71afceb4
msgid "4: Major version number. MapServer releases a major version every two to three years."
msgstr ""

#: ../../../en/faq.txt:42
# 56f6e1703e8144c5b912c9ebb251b8d7
msgid "2: Minor version number. Increments in minor version number almost always relate to additions in functionality."
msgstr ""

#: ../../../en/faq.txt:44
# 1bfe27fae4184788b161dfd2ec6fb1de
msgid "5: Revision number. Revisions are bug fixes only. No new functionality is provided in revisions."
msgstr ""

#: ../../../en/faq.txt:47
# 71dd030b409e45779b431e0938a640c0
msgid "From a developer's standpoint, MapServer version numbering scheme is also like Linux. Even minor version numbers (0..2..4..6) relate to *release* versions, and odd minor versions (1..3..5..7) correspond to developmental versions."
msgstr ""

#: ../../../en/faq.txt:52
# 00d98bf957a743028867007e89e03530
msgid "Is MapServer Thread-safe?"
msgstr ""

#: ../../../en/faq.txt:54
# 728967f8d8d0455eb473776e3079ba51
msgid "**Q**: Is MapServer thread-safe?"
msgstr ""

#: ../../../en/faq.txt:56
# ef8ab7e56a41431d9e98ee2f6d2967f4
msgid "**A**: Generally, no (but see the next question). Many components of MapServer use static or global data that could potentially be modified by another thread. Under heavy load these unlikely events become inevitable, and could result in sporadic errors."
msgstr ""

#: ../../../en/faq.txt:61
# b78165eb4b2f4c8e8bb8ada70817815c
msgid "**Q**: Is it possible to safely use any of MapServer in a multi-threaded application?"
msgstr ""

#: ../../../en/faq.txt:64
# 9ffd835dd5c74cb99b69394f778114b9
msgid "**A**: Some of it, yes, with care. Or with Python :) Programmers must either avoid using the unsafe components of MapServer or carefully place locks around them. Python's global interpreter lock immunizes against MapServer threading problems; since no mapscript code ever releases the GIL all mapscript functions or methods are effectively atomic. Users of mapscript and Java, .NET, mod_perl, or mod_php do not have this extra layer of protection."
msgstr ""

#: ../../../en/faq.txt:71
# 42c8c34e83e74afcb14340ddfead6447
msgid "**A**: Which components are to be avoided?"
msgstr ""

#: ../../../en/faq.txt:73
# 422ef33b33e8414d896c044edbd8590c
msgid "**Q**: Below are lists of unsafe and unprotected components and unsafe but locked components."
msgstr ""

#: ../../../en/faq.txt:76
# d2c57d2046e3475ca66ab850e8231f2b
msgid "Unsafe:"
msgstr ""

#: ../../../en/faq.txt:78
# 9177ee4dc6a44dea8578a67e6fc1458b
msgid "OGR layers: use unsafe CPL services"
msgstr ""

#: ../../../en/faq.txt:79
# 2ec15509f16b4fa98a98afd9c1b54d3f
msgid "Cartoline rendering: static data"
msgstr ""

#: ../../../en/faq.txt:80
# 5f990563d2a645c2b5bf465d71b1e0ad
msgid "Imagemap output: static data"
msgstr ""

#: ../../../en/faq.txt:81
# 7d2472ea47ec472c943e7e897ee3c341
msgid "SWF output: static data and use of unsafe msGetBasename()"
msgstr ""

#: ../../../en/faq.txt:82
# c26683eebc09455fb03434ed359e243d
msgid "SVG output: static data"
msgstr ""

#: ../../../en/faq.txt:83
# 81524d76610c430cbe58cb0ee4a22b0b
msgid "WMS/WFS server: static data used for state of dispatcher"
msgstr ""

#: ../../../en/faq.txt:84
# 4481474e673e4f719efa6d54a25ca290
msgid "Forcing a temporary file base (an obscure feature): static data"
msgstr ""

#: ../../../en/faq.txt:85
# 091ce468e96d4880a8c60d9f23472a7c
msgid "MyGIS: some static data"
msgstr ""

#: ../../../en/faq.txt:87
# f2754ae2591c4e91916a499b85bc4fe4
msgid "Unsafe, but locked:"
msgstr ""

#: ../../../en/faq.txt:89
# 0183a5bd437b403089aae78bea44b005
msgid "Map config file loading: global parser"
msgstr ""

#: ../../../en/faq.txt:90
# b7cb6fd8ac1548b381b447c2632b40d8
msgid "Setting class and and layer filter expressions (global parser)"
msgstr ""

#: ../../../en/faq.txt:91
# 2deaae2aa7f14a1992b379686669c056
msgid "Class expression evaluation (global parser)"
msgstr ""

#: ../../../en/faq.txt:92
# cd6919456c3d4973adb9f74ef15db469
msgid "Setting map and layer projections (PROJ)"
msgstr ""

#: ../../../en/faq.txt:93
# 3cb9f9820ec44055a58f7a3aee7d055e
msgid "Raster layer rendering and querying (GDAL)"
msgstr ""

#: ../../../en/faq.txt:94
# 1b38903d6a5a49c0a081e841c87cab74
msgid "Database Connections (mappool.c)"
msgstr ""

#: ../../../en/faq.txt:95
# 5d0a57ae91f1470080fa2c3a554fc231
msgid "PostGIS support"
msgstr ""

#: ../../../en/faq.txt:96
# c638c8243b794f7bb9013f7c81286d2e
msgid "Oracle Spatial (use a single environment handle for connection)"
msgstr ""

#: ../../../en/faq.txt:97
# 2581a37fc15f4e7ab238f261b3c74783
msgid "SDE support (global layer cache)"
msgstr ""

#: ../../../en/faq.txt:98
# 62c2d45b43fa4919aa8278034b8aed54
msgid "Error handling (static repository of the error objects)"
msgstr ""

#: ../../../en/faq.txt:99
# d3d59df54e9a4dd883840b00cb2caa07
msgid "WMS/WFS client connections: potential race condition in Curl initialization"
msgstr ""

#: ../../../en/faq.txt:100
# b12cd14f03a648c7aa43226de8ae1ce2
msgid "Plugin layers (static repository of the loaded dll-s)"
msgstr ""

#: ../../../en/faq.txt:102
# ddbe081be3e5476291bcbd555cbebc77
msgid "Rather coarse locks are in place for the above. Only a single thread can use the global parser at a time, and only one thread can access GDAL raster data at a time. Performance is exchanged for safety."
msgstr ""

#: ../../../en/faq.txt:107
# ef34fdcd49c84602b38b0695336362ce
msgid "What does STATUS mean in a LAYER?"
msgstr ""

#: ../../../en/faq.txt:109
# 36eb445deb9a4bbabaa34e363934ad02
msgid "STATUS ON and STATUS OFF set the default status of the layer. If a map is requested, those layers will be ON/OFF unless otherwise specified via the layers parameter. This is particularly the case when using MapScript and MapServer's built-in template mechanism, but is also useful as a hint when writing your own apps and setting up the initial map view."
msgstr ""

#: ../../../en/faq.txt:115
# 72087dab05464ab0b9413e1cd9004168
msgid "STATUS DEFAULT means that the layer is always on, even if not specified in the layers parameter. A layer's status can be changed from DEFAULT to OFF in MapScript, but other than that, it's always on."
msgstr ""

#: ../../../en/faq.txt:119
# 978427de4c42497186e77dedbb26cb00
msgid ":ref:`cgi` turns everything off that is not \"STATUS DEFAULT\" off so all layers start from the same state (e.g. off) and must be explicitly requested to be drawn or query. That common state made (at least in my mind) implementations easier. I mean, if a layer \"lakes\" started ON the doing layer=lakes would turn it OFF. So I wanted to remove the ambiguity of a starting state."
msgstr ""

#: ../../../en/faq.txt:126
# 231171b652ea4e7eaf0441fdfc35eff1
msgid "How can I make my maps run faster?"
msgstr ""

#: ../../../en/faq.txt:128
# 1cfcf2c1d7da44a9821d31f8e1270839
msgid "There are a lot of different approaches to improving the performance of your maps, aside from the obvious and expensive step of buying faster hardware. Here are links to some individual howtos for various optimizations."
msgstr ""

#: ../../../en/faq.txt:132
# 3f3a0e2841c445268e606ce3af9c0c91
msgid ":ref:`Tuning your mapfile for performance <mapfile_tuning>`"
msgstr ""

#: ../../../en/faq.txt:133
# 6413d3b41cd64d17a4b4f790f5376a9a
msgid ":ref:`Optimizing the performance of vector data sources <vector_optimization>`"
msgstr ""

#: ../../../en/faq.txt:134
# 0046269a44404ce79b4688a8cc14070d
msgid ":ref:`Optimizing the performance of raster data sources <raster_optimization>`"
msgstr ""

#: ../../../en/faq.txt:135
# 676f2df78532497987d63a7055239eda
msgid ":ref:`Tileindexes for mosaicing and performance <tileindex>`"
msgstr ""

#: ../../../en/faq.txt:137
# 37acef8331b24c43a9d4e4ac049363f4
msgid "Some general tips for all cases:"
msgstr ""

#: ../../../en/faq.txt:139
# fa7f4c14977647bd9e42c06b459ca63e
msgid "First and foremost is hardware. An extra GB of RAM will give your map performance increases beyond anything you're likely to achieve by tweaking your data. With the price of RAM these days, it's cheap and easy to speed up every map with one inexpensive upgrade."
msgstr ""

#: ../../../en/faq.txt:144
# bdfca96eb0da43cc9b75dafa7c792dad
msgid "Use the scientific method. Change one thing at a time, and see what effect it had. Try disabling all layers and enabling them one at a time until you discover which layer is being problematic."
msgstr ""

#: ../../../en/faq.txt:148
# cccba91ba19943718a793ba29496ca64
msgid "Use :ref:`shp2img` program to time your results. This runs from the command line and draws an image of your entire map. Since it's run from the command line, it is immune to net lag and will give more consistent measurements that your web browser."
msgstr ""

#: ../../../en/faq.txt:154
# ce66dd0cf3e048248cd7f1e7aaa3dfd2
msgid "What does Polyline mean in MapServer?"
msgstr ""

#: ../../../en/faq.txt:156
# 3e98d584262141fd8c51f770a464cd33
msgid "There's confusion over what POLYLINE means in MapServer and via ESRI. In MapServer POLYLINE simply means a linear representation of POLYGON data. With ESRI polyline means multi-line. Old versions of the Shapefile techical description don't even refer to polyline shapefiles, just line. So, ESRI polyline shapefiles are just linework and can only be drawn and labeled as LINE layers. Those shapefiles don't have feature closure enforced as polygon shapefiles do which is why the distinction is so important. I suppose there is a better choice than POLYLINE but I don't know what it would be."
msgstr ""

#: ../../../en/faq.txt:166
# fc5c1699cb6a41c7a344fa95b5501538
msgid "The only difference between POLYLINE and LINE layers is how they are labeled."
msgstr ""

#: ../../../en/faq.txt:170
# 89ab7f953b7748aa91bdf453265094ea
msgid "What is MapScript?"
msgstr ""

#: ../../../en/faq.txt:172
# 9918874d939442b28ec30bd3ce33f7d0
msgid "MapScript is the scripting interface to MapServer, usually generated by :term:`SWIG` (except in the case of :ref:`php_mapscript`). MapScript allows you to program with MapServer's objects directly instead of interacting with MapServer through its :ref:`cgi` and :ref:`mapfile`."
msgstr ""

#: ../../../en/faq.txt:180
# 60b84ec7cd4541c2b4fe17b5e7ff9734
msgid "Does MapServer support reverse geocoding?"
msgstr ""

#: ../../../en/faq.txt:182
#: ../../../en/faq.txt:194
# 93a100f34919496283eb12e1af40a33c
# 484e8a3a7d064ef3a54fbd9977897388
msgid "No."
msgstr ""

#: ../../../en/faq.txt:184
# f70a9472ba5348f191ae89174120776f
msgid "Reverse geocoding is an activity where you take a list of street features that you already have and generate postal addresses from them. This kind of spatial functionality is provided by proprietary packages such as the ESRI suite of tools, as well as services such as those provided by GDT. MapServer is for *map rendering*, and it does not provide for advanced spatial operations such as this."
msgstr ""

#: ../../../en/faq.txt:192
# 8c1bee761dd84d16bf423f14713fd536
msgid "Does MapServer support geocoding?"
msgstr ""

#: ../../../en/faq.txt:196
# 21883c424fc0487f816cb397f0c37c96
msgid "Geocoding is an activity where you take a list of addresses and generate lat/lon points for them. This kind of spatial functionality is provided by proprietary packages such as the ESRI suite of tools, as well as services such as those provided by GDT. MapServer is for *map rendering*, and it does not provide for advanced spatial operations such as this."
msgstr ""

#: ../../../en/faq.txt:202
# 6d52332136cf450ca939fe99f34bbc28
msgid "If you are using MapScript, there is a free geocder available through XMLRPC and SOAP at http://geocoder.us . You could hook you application up to use this service to provide lat/lon pairs for addresses, and then use MapServer to display those points."
msgstr ""

#: ../../../en/faq.txt:208
# 02de5c42df7b453ca5d97f36029320bb
msgid "How do I set line width in my maps?"
msgstr ""

#: ../../../en/faq.txt:210
# f73f1748ab334b259d1cb6819d175fcf
msgid "In the current MapServer  version, line width is set using the STYLE parameter WIDTH.  For a LINE layer, lines can be made red and 3 pixels wide by using the following style in a CLASS."
msgstr ""

#: ../../../en/faq.txt:222
# 49c678659a76444183d3c8c9e08fe8f3
msgid "In earlier versions of MapServer , you could set the symbol for the LAYER to 'circle' and then you can set the symbol SIZE to be the width you want. A 'circle' symbol can be defined as"
msgstr ""

#: ../../../en/faq.txt:236
# b225aa5590d54178a4af85f47d7cfbd2
msgid "Why do my JPEG input images look crappy via MapServer?"
msgstr ""

#: ../../../en/faq.txt:238
# 9d14d2b37b8e48c1b51fe43bb1794c06
msgid "You must be using an old version of MapServer  (where GD was the default library for rendering)."
msgstr ""

#: ../../../en/faq.txt:241
# 5d6f2c3f42a742b58707cdcb0d01a529
msgid "Newer versions of MapServer  use AGG for rendering, and the default output formats is 24 bit colour, so there should not be a problem."
msgstr ""

#: ../../../en/faq.txt:244
# ea87b59cc26e40638a3d6d321619d82c
msgid "The default output format for MapServer with GD was 8bit pseudo-colored PNG or GIF.  Inherently there will be some color degradation in converting a 24bit image (16 million colors) image into 8bit (256 colors)."
msgstr ""

#: ../../../en/faq.txt:249
# 7c05fa6ce0b6481fa653ad24af05e219
msgid "With GD output, MapServer used quite a simple method to do the transformation, converting pixels to the nearest color in a 175 color colorcube. This would usually result in blotchy color in a fairly smoothly varying image."
msgstr ""

#: ../../../en/faq.txt:254
# c06ac989f1744ab58c8fd851fca6e90c
msgid "For GD, solutions used to be:"
msgstr ""

#: ../../../en/faq.txt:256
# 42272e4fd37d4975825627c74bd9091a
msgid "Select 24bit output.  This might be as easy as \"IMAGETYPE JPEG\" in your MAP section."
msgstr ""

#: ../../../en/faq.txt:258
# 315019c9442f4806a4f4fd4c8c8aa9a3
msgid "Enable dithering (PROCESSING \"DITHER=YES\") to produce a better color appearance."
msgstr ""

#: ../../../en/faq.txt:260
# 35489f4105f04f06be637f9076cfa860
msgid "Preprocess your image to 8bit before using it in MapServer with an external application like the GDAL rgb2pct.py script."
msgstr ""

#: ../../../en/faq.txt:263
# f36a1d1cb4fe440b97673d0ad1def34e
msgid "For more information review the :ref:`raster`."
msgstr ""

#: ../../../en/faq.txt:266
# 3aacefd8c3de41b38747bd09e60edd4c
msgid "Which image format should I use?"
msgstr ""

#: ../../../en/faq.txt:268
# 7a636c0a900f4cd5bdef07e650498e06
msgid "Although MapScript can generate the map in any desired image format it is sufficient to only consider the three most prevalent ones: JPEG, PNG, and GIF."
msgstr ""

#: ../../../en/faq.txt:271
# 9bf03d50465d46dba6fca257615b0c7b
msgid "JPEG is an image format that uses a lossy compression algorithm to reduce an image's file size and is mostly used when loss of detail through compression is either not noticeable or negligible, as in most photos. Maps on the other hand mainly consist of fine lines and areas solidly filled in one colour, which is something JPEG is not known for displaying very well. In addition, maps, unless they include some aerial or satellite imagery, generally only use very few different colours. JPEG with its 24bit colour depth capable of displaying around 16.7 million colours is simple not suitable for this purpose. GIF and PNG however use an indexed colour palette which can be optimized for any number (up to 256) of colours which makes them the perfect solution for icons, logos, charts or maps. The following comparison (generated file sizes only; not file generation duration) will therefore only include these two file formats:"
msgstr ""

#: ../../../en/faq.txt:288
# 015159491f1944f983d8a5c377a406cc
msgid "GIF"
msgstr ""

#: ../../../en/faq.txt:288
# c3cadd220f914d1cb8bc972314921bd2
msgid "PNG"
msgstr ""

#: ../../../en/faq.txt:288
# 7b7fa5e957d04f21b08d5b39ce795a5c
msgid "PNG24"
msgstr ""

#: ../../../en/faq.txt:290
# 942c6d2791ff472e8df6d29c114af357
msgid "Vector Data only"
msgstr ""

#: ../../../en/faq.txt:290
# 258220922578494d8e00299708852b24
msgid "59kb"
msgstr ""

#: ../../../en/faq.txt:290
# 526a98f069d84d00827bda35c74a16dc
msgid "26kb"
msgstr ""

#: ../../../en/faq.txt:290
# 3da4a33ee42d47ad94c6cbc4bf9ec6b6
msgid "69kb"
msgstr ""

#: ../../../en/faq.txt:292
# a2a87b52844a434faab51d01497b0374
msgid "Vector Data & Satellite Image coloured"
msgstr ""

#: ../../../en/faq.txt:292
# 1c4340acc2344215acd1de9c676be329
msgid "156kb"
msgstr ""

#: ../../../en/faq.txt:292
# ff2eb4ae1205423092359f3ca8cf66fb
msgid "182kb"
msgstr ""

#: ../../../en/faq.txt:292
# 20c0a32d50384ccd91f42661d08d7cde
msgid "573kb"
msgstr ""

#: ../../../en/faq.txt:294
# b6c3f875807c4e21ad5cc0b6978f2ba0
msgid "Vector Data & Satellite Image monochrome"
msgstr ""

#: ../../../en/faq.txt:294
# 655ec0b3d6de4a77bf29e57b4ba30a64
msgid "142kb"
msgstr ""

#: ../../../en/faq.txt:294
# 7baf47e71b684515b20ddeb43ce23fc8
msgid "134kb"
msgstr ""

#: ../../../en/faq.txt:294
# ea25d9892a6e44a69ce3f6fad3918825
msgid "492kb"
msgstr ""

#: ../../../en/faq.txt:297
# df5c32fce9da43da9bf90d16b4688aec
msgid "(results based on an average 630x396 map with various colours, symbols, labels/annotations etc.)"
msgstr ""

#: ../../../en/faq.txt:300
# 3347ae58fd2e4d6f8785aad020ad0e76
msgid "Although GIF shows a quantitative as well as qualitative advantage over PNG when generating maps that contain full coloured remote sensing imagery, PNG is the clear quantitative winner in terms of generated file sizes for maps with or without additional monochrome imagery and should therefore be the preferred image format. If the mapping application however can also display fullcolour aerial or satellite imagery, the output file format can be changed dynamically to either GIF or even PNG24 to achieve the highest possible image quality."
msgstr ""

#: ../../../en/faq.txt:310
# 05cacdd774a44fbd8c948afb8c34f8f1
msgid "Why doesn't PIL (Python Imaging Library) open my PNGs?"
msgstr ""

#: ../../../en/faq.txt:312
# d407b9f84a6941eaab5404752e8fb185
msgid "`PIL <http://www.pythonware.com/products/pil/>`__ does not support interlaced PNGs at this time (no timetable on when it actually will either). To be able to read PNGs in PIL, they must not be interlaced. Modify your OUTPUTFORMAT with a FORMATOPTION like so:"
msgstr ""

#: ../../../en/faq.txt:329
# 6fdd047ffa374f43ab0b6f317b95e2d6
msgid "Why do my symbols look poor in JPEG output?"
msgstr ""

#: ../../../en/faq.txt:331
# 2eb87886723b45138d59a2feb82a96bf
msgid "When I render my symbols to an 8bit output (PNG, GIF) they look fine, but in 24bit jpeg output they look very blocky and gross."
msgstr ""

#: ../../../en/faq.txt:334
# f75928cb3d1746d3a3372ee8366eb3a0
msgid "You must be using an old version of MapServer .  This should not be problem with newer versions.  The following explains the old (GD) behaviour."
msgstr ""

#: ../../../en/faq.txt:338
# 9f65e23cf8b040c19bd01154f45535bf
msgid "In order to render some classes of symbols properly in 24bit output, such as symbols from true type fonts, it is necessary to force rendering to occur in RGBA. This can be accomplished by including the \"TRANSPARENCY ALPHA\" line in the layer definition. Don't use this unnecessarily as there is a performance penalty."
msgstr ""

#: ../../../en/faq.txt:344
# de283c68627c437398d0933e3dadb1dc
msgid "This problem also affects PNG24 output or any RGB output format. 8bit (PC256) or RGBA output types are already ok."
msgstr ""

#: ../../../en/faq.txt:348
# b31e9593ab0944c7a932e39e8c035fbc
msgid "How do I add a copyright notice on the corner of my map?"
msgstr ""

#: ../../../en/faq.txt:350
# 60ab54a2a66d478598df51ac29638810
msgid "You can use an inline feature, with the :ref:`FEATURE` object, to make a point on your map. Use the TEXT parameter of the FEATURE object for the actual text of the notice, and a :ref:`LABEL` object to style the notice."
msgstr ""

#: ../../../en/faq.txt:356
# 01e9c9416c5447b0a7062e3e94e0df5c
msgid "Example Layer"
msgstr ""

#: ../../../en/faq.txt:391
# dd93ca07258343a9a3685e08bf5451f2
msgid "Result"
msgstr ""

#: ../../../en/faq.txt:397
# cd0e87e51e624f43be5b9b0e6dcd0038
msgid "How do I have a polygon that has both a fill and an outline with a width?"
msgstr ""

#: ../../../en/faq.txt:399
# b40414b03e45458697981edea05507a6
msgid "How do I have a polygon that has both a fill and an outline with a width? Whenever I put both a color (fill) and an outlinecolor with a width on a polygon within a single STYLE, the outline width isn't respected."
msgstr ""

#: ../../../en/faq.txt:403
# b39f89cb212c44ddb55185075f808754
msgid "For historical reasons, width has two meanings within the context of filling polygons and stroke widths for the outline. If a polygon is filled, then the width defines the width of the symbol *inside* the filled polygon. In this event, the outline width is disregarded, and it is always set to 1. To acheive the effect of *both* a fill and an outline width, you need to use two styles in your class."
msgstr ""

#: ../../../en/faq.txt:421
# 48907c2d01b64344ad607f058828652a
msgid "How can I create simple antialiased line features?"
msgstr ""

#: ../../../en/faq.txt:423
# 245c91ac4bc24318aa736baf7acfd71b
msgid "With AGG (used in recent MapServer  version), antialiased lines is the default, and can't be turned off."
msgstr ""

#: ../../../en/faq.txt:426
# 1a180cd335b6426bbfded7d6d027068e
msgid "With GD, the easiest way to produce antialiased lines is to:"
msgstr ""

#: ../../../en/faq.txt:428
# 792bc6698d7d4c66b8e66b5b2ebe5b4f
msgid "use a 24-bit output image type (IMAGEMODE RGB (or RGBA))"
msgstr ""

#: ../../../en/faq.txt:429
# 6988ac0a93a243eba540600371771cc1
msgid "set TRANSPARENCY ALPHA in the layer using antialiased lines"
msgstr ""

#: ../../../en/faq.txt:430
# e6e5f06d496b4d409b89aa5b00b70055
msgid "set ANTIALIAS TRUE in the STYLE element of the CLASS with antialiased lines"
msgstr ""

#: ../../../en/faq.txt:432
# dbbf44e63763420da275662f21ce9ac1
msgid "The following mapfile snippets enable antialiased county borders for GD:"
msgstr ""

#: ../../../en/faq.txt:466
# 0dafdbcbb9814e589a8b910e2d73d4f3
msgid "The bdry_counln2 shapefile referenced in the counties layer is a line shapefile. A polygon shapefile could be substituted with roughly the same results, though owing to the nature of shapefiles each border would be rendered twice and the resulting output line would likely appear to be slightly thicker. Alternatively, one could use a polygon shapefile, set TYPE to POLYGON, and use OUTLINECOLOR in place of COLOR in the STYLE element."
msgstr ""

#: ../../../en/faq.txt:475
# 0199caebe97c448fb04db8620b40ceed
msgid "You can tweak the combination of STYLE->WIDTH and SYMBOLSCALE to modify line widths in your output images."
msgstr ""

#: ../../../en/faq.txt:479
# bca1b165cf0f4b30ba304a1ba460fb15
msgid ":ref:`Cartoline <sym_construction>` symbols can be used to achieve fancier effects."
msgstr ""

#: ../../../en/faq.txt:483
# 2782a7c0772f48ed84da5945d47f0d0b
msgid "Which OGC Specifications does MapServer support?"
msgstr ""

#: ../../../en/faq.txt:485
# 1cb7924998fb496caeb08da426b59e11
msgid "See: :ref:`ogc_support`."
msgstr ""

#: ../../../en/faq.txt:488
# 0e89429e6c68407d944ec5f98184b959
msgid "Why does my requested WMS layer not align correctly?"
msgstr ""

#: ../../../en/faq.txt:490
# b4141bdf6bec4243bbfe4cfcf1b36633
msgid "Requesting a layer from some ArcIMS WMS connectors results in a map with misalgned data (the aspect ratio of the pixels looks wrong)."
msgstr ""

#: ../../../en/faq.txt:493
# aae9deb54fd340e9befd2dc6f4ca0c73
msgid "Some ArcIMS sites are not set up to stretch the returned image to fit the requested envelope by default. This results in a map with data layers that overlay well in the center of the map, but not towards the edges. This can be solved by adding \"*reaspect=false*\" to the request (by tacking it on to the connection string)."
msgstr ""

#: ../../../en/faq.txt:499
# 66044c683d62401480b15c26d137d211
msgid "For example, if your mapfile is in a projection other than EPSG:4326, the following layer will not render correctly:"
msgstr ""

#: ../../../en/faq.txt:523
# 8210dcaf39374de48921a670e2fea6e2
msgid "Adding \"reaspect=false\" to the connection string solves the problem:"
msgstr ""

#: ../../../en/faq.txt:547
# 620da8a1ee0a43bda9ae459f06c88dd3
msgid "When I do a GetCapabilities, why does my browser want to download mapserv.exe/mapserv?"
msgstr ""

#: ../../../en/faq.txt:549
# 64af60d04beb40c3bb6330061d9fb0a7
msgid "A beginner question here... I'm new to MS and to Apache. I've got MS4W up and running with the Itasca demo. Now I want to enable it as a WMS server. mapserv -v at the command line tells me it supports WMS_SERVER. When I point my browser to it, my browser just wants to download mapserv.exe!"
msgstr ""

#: ../../../en/faq.txt:554
# db55b717fcdc4162abbfa359da142ead
msgid "What am I missing?"
msgstr ""

#: ../../../en/faq.txt:556
# 532e53c0d27b48659f33d0f1b3ee15da
msgid "Here is the URL I'm using to issue a GetCapabilities WMS request: http://localhost/cgi-bin/mapserv.exe?map=../htdocs/itasca/demo.map&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities"
msgstr ""

#: ../../../en/faq.txt:559
# db189a21d9134aa39b0d520a2fa5eb3c
msgid "The OGC:WMS 1.1.0 and 1.1.1 specifications (which are both supported by MapServer) state that, for GetCapabilities responses, the OGC:WMS server returns a specific MIME type (i.e. application/vnd.ogc.xml (see subclause 6.5.3 of `OGC:WMS 1.1.1 <http://portal.opengeospatial.org/files/?artifact_id=1081&version=1&format=pdf>`__."
msgstr ""

#: ../../../en/faq.txt:565
# 7838cebd3e7846f7bf07b8d135df9d9a
msgid "A MIME type is passed from the web server to the client (in your case, a web browser), from which a client can decide how to process it."
msgstr ""

#: ../../../en/faq.txt:568
# 558d093cbed741bba73c07b4c8760c27
msgid "Example 1: if using a web browser, if a web server returns an HTTP Header of \"Content-type:image/png\", then the web browser will know that this is a PNG image and display it accordingly."
msgstr ""

#: ../../../en/faq.txt:572
# df52e4e9d00d4e28a6881c2bab2f9bd9
msgid "Example 2: if using a web browser, if a web server returns an HTTP Header of \"Content-type:text/html\", then the web browser will know that this is an HTML page and display it accordingly (i.e. tables, divs, etc.)"
msgstr ""

#: ../../../en/faq.txt:576
# 1a90fbbf5c85442ca15089e652f9bdaa
msgid "Basically, what is happening is that the OGC:WMS is returning, in the headers of the HTTP response, a MIME type which your web browser does not understand, which usually prompts a dialog box on whether to open or download the content (i.e. Content-type:application/vnd.ogc.wms_xml)."
msgstr ""

#: ../../../en/faq.txt:581
# bd3fc684e692458a8b2dcef0ea07f164
msgid "You could configure your web browser to handle the application/vnd.ogc.wms_xml MIME type a certain way (i.e. open in Notepad, etc.)."
msgstr ""

#: ../../../en/faq.txt:585
# 2ca339bb6ac64ac5b19e682633a35414
msgid "Why do my WMS GetMap requests return exception using MapServer 5.0?"
msgstr ""

#: ../../../en/faq.txt:587
# 15e322e50b2c48a99f56622f3f0734ab
msgid "Before upgrading to MapServer 5.0, I was able to do quick GetMap tests in the form of: http://wms.example.com/wms?service=WMS&version=1.1.1&request=GetMap&layers=foo"
msgstr ""

#: ../../../en/faq.txt:591
# 33007ef3af70453a950aff46c9398920
msgid "Now when I try the same test, MapServer WMS returns an XML document saying something about missing required parameters. What's going on here?"
msgstr ""

#: ../../../en/faq.txt:594
# d32db63884464a35b42d65c29f58da69
msgid "This was a major change for WMS Server support in MapServer 5.0. MapServer WMS Server GetMap requests now require the following additional parameters:"
msgstr ""

#: ../../../en/faq.txt:597
# ebc4e2b5d8ba45fabae152889eadab2a
msgid "srs"
msgstr ""

#: ../../../en/faq.txt:598
# 005127c9cfd546268f3b965a1cca6034
msgid "bbox"
msgstr ""

#: ../../../en/faq.txt:599
# b17838ecc9c04b4c825a98c2f1fe382e
msgid "width"
msgstr ""

#: ../../../en/faq.txt:600
# a1eab8ce69a24af98d9a86a92e8b74fa
msgid "height"
msgstr ""

#: ../../../en/faq.txt:601
# 01d0848cdc1244309862708a1e159512
msgid "format"
msgstr ""

#: ../../../en/faq.txt:602
# 07cc1f1601ad4e57b413725bbd526044
msgid "styles"
msgstr ""

#: ../../../en/faq.txt:605
# 641608d4cd27455390eb5383b056dee6
msgid "These parameters were always required in all versions of the WMS specification, but MapServer previously had not required them in a client request (even though most OGC WMS clients would issue them anyway to be consistent with the WMS spec)."
msgstr ""

#: ../../../en/faq.txt:610
# 2b1774c81663453ba7a624d3919a1f5d
msgid "The request below now constitutes a valid GetMap request:"
msgstr ""

#: ../../../en/faq.txt:616
# 12caf0756069415e9ce0287702119d98
msgid "Which is consistent with the WMS specification."
msgstr ""

#: ../../../en/faq.txt:618
# 482a7a2d6fe04907aaaf0c64b35209da
msgid "More information on these parameters can be found in the :ref:`wms_server` and the `OGC WMS 1.1.1 specification <http://portal.opengeospatial.org/files/?artifact_id=1081&version=1&format=pdf>`__"
msgstr ""

#: ../../../en/faq.txt:622
# 0677f17bbe574484956d59e4979041eb
msgid "For more detailed information, see `ticket 1088 <http://trac.osgeo.org/mapserver/ticket/1088>`__"
msgstr ""

#: ../../../en/faq.txt:626
# ea8ad852fb0d4fb1868098c52d0a194d
msgid "STYLES, though a required WMS parameter, is now optional again in MapServer. For more detailed information, see `ticket 2427 <http://trac.osgeo.org/mapserver/ticket/2427#comment:2>`__"
msgstr ""

#: ../../../en/faq.txt:631
# 6bcaf94c3f2b4cd39c42c5c01a75ab0a
msgid "Using MapServer 6.0, why don't my layers show up in GetCapabilities responses or are not found anymore?"
msgstr ""

#: ../../../en/faq.txt:633
# 52709863e9164b2187d09abaf75966c6
msgid "MapServer 6.0 introduces the option of hiding layers against OGC Web Service requests.  OGC Web Services can provide powerful access to your geospatial data.  It was decided to disable layer level request access as a default.  See :ref:`rfc67` provides a full explanation of the changes and implications."
msgstr ""

#: ../../../en/faq.txt:638
# 9ac0fc895b1048ea8518480441b6c912
msgid "To enable pre-6.0 behaviour, you can add the following to the :ref:`WEB` object's METADATA section in your mapfile:"
msgstr ""

#: ../../../en/faq.txt:645
# c5f610694e7844d0a1a1a4f3ee55754e
msgid "This will enable access of all layers to all OGC Web Service requests."
msgstr ""

#: ../../../en/faq.txt:648
# c0a318a6632f409baeb031acc069efa9
msgid "Where do I find my :term:`EPSG` code?"
msgstr ""

#: ../../../en/faq.txt:650
# 1bb684589e15490e8be6cb82bb8ba4cd
msgid "There is a text file \"epsg\" in your PROJ4 installation (e.g. \"/usr/local/share/proj/epsg\") which contain the EPSG information used by PROJ4. In Windows, this is often located in C:\\\\proj\\\\nad or is found with an environment variable called PROJ_LIB."
msgstr ""

#: ../../../en/faq.txt:655
# 780a750eed3241ecb1ce15fd3ffa11e1
msgid "http://spatialreference.org allows you to search for EPSG codes."
msgstr ""

#: ../../../en/faq.txt:657
# 1ead643222a24418966d905ee3dd57d3
msgid "You can also have a look at: http://ocean.csl.co.uk"
msgstr ""

#: ../../../en/faq.txt:660
# 3301dabdb8cc4a34a9b058cf0a1f5773
msgid "More information to EPSG: http://www.epsg.org"
msgstr ""

#: ../../../en/faq.txt:663
# 9de0acdc35844c1ba559a5371c8431ad
msgid "More information to PROJ4: http://trac.osgeo.org/proj"
msgstr ""

#: ../../../en/faq.txt:667
# 29f816180fc24a669bb9ec876cb8f82e
msgid "How can I reproject my data using ogr2ogr?"
msgstr ""

#: ../../../en/faq.txt:669
# 53d1f197c9ba46ac9180e7656ca01eaa
msgid "With ogr2ogr of course! ogr2ogr is a powerful utility that will transform the projections of your shapefiles when passed the appropriate parameters. In my case, I was using MapServer to serve data in RI State Plane Feet. In order to do so, the data had to first be converted to meters. Here is the command I used:"
msgstr ""

#: ../../../en/faq.txt:679
# 01ff510e2ef14ac59f8a6cfe86455d90
msgid "Since my data already had a projection defined, I did not need to explicitly state a source projection. This command uses the EPSG definition for NAD83 Rhode Island (32130) and performs the feet to meters conversion."
msgstr ""

#: ../../../en/faq.txt:683
# 58334641ddd04492a3bba11cd35bc198
msgid "Now say my data wasn't already projected? Here's how we deal with that:"
msgstr ""

#: ../../../en/faq.txt:689
# 0af0b8f0b6d84278b1a41a5cd72bf32f
msgid "Let's examine what is going on here:"
msgstr ""

#: ../../../en/faq.txt:691
# d95c7b19c7a9427dba8dd46f522323fd
msgid "The -s_srs parameter explicitly defines a projection for the data. The parameters used here were taken out of the EPSG definition (in this case, 32130) in the epsg file(see the `projection FAQ <epsg_codes>`__ for more details on locating EPSG definitions). The entry for RI in the epsg file is as follows:"
msgstr ""

#: ../../../en/faq.txt:702
# 0d463ba45dfc452089b15359de1a2f25
msgid "You can see how the definition in the initial command is formulated. Notice that the \"+units=m\" parameter has been changed to “+to_meter=0.3408”. This is important for the conversion. Where did the value of 0.3408 come from you ask? From the EPSG file! It has many goodies buried in it so by simply running 'grep \"to_meter\" epsg’ you can refresh your memory if you need to."
msgstr ""

#: ../../../en/faq.txt:708
# 4d9f4dcab9f34d4c874d62ed2172911d
msgid "The next parameter in the command is \"-t_srs EPSG:32130\". This command tells ogr2ogr to transform the data to the EPSG code of 32130. After this is declared, all you need to do is declare a file name for your new shape file and to set which file is being used as the input (note: make sure you don’t confuse the order of these two)."
msgstr ""

#: ../../../en/faq.txt:714
# c9f5b21c07014773b0c8bbb06e34d1a0
msgid "Hit enter, bombs away, and enjoy your new data in meters!"
msgstr ""

#: ../../../en/faq.txt:718
# 82792d4d24514785a6d32205ce78eb47
msgid "How can I help improve the documentation on this site?"
msgstr ""

#: ../../../en/faq.txt:720
# cbe2ef5df19048959e99591da322dc2d
msgid "New documentation material and corrections to existing documentation are definitely very welcome. These contributions are handled through the same issue tracker used to track software bugs and enhancements."
msgstr ""

#: ../../../en/faq.txt:724
# 0fcbbeb510c04e17b5830ea25803a7f2
msgid "Follow the directions for submitting bugs at: http://www.mapserver.org/development/bugs.html. When creating a ticket, in the Component field, select `MapServer Documentation`. If our ticket pertains to a specific web page, please include the URL to that page."
msgstr ""

#: ../../../en/faq.txt:730
# 80ec437f5f7040689fb987828cb844b5
msgid "If you have tips or examples that don't really fit the definition of documentation, a good place to put them is the MapServer wiki at: https://github.com/mapserver/mapserver/wiki"
msgstr ""

#: ../../../en/faq.txt:736
# 395171029dc44a0ab51fcda773725217
msgid "What's with MapServer's logo?"
msgstr ""

#: ../../../en/faq.txt:738
# 16d6fe5b226041748fb50ac0459eb5d5
msgid "The MapServer logo illustrates the confluence of the `Minnesota`_ and `Mississippi`_ rivers, quite near to the home of the `St. Paul Campus`_ of the `University of Minnesota`_, which was the `birthplace of MapServer`_."
msgstr ""

