# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011, Regents of the University of Minnesota
# This file is distributed under the same license as the MapServer package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MapServer 5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-05-11 22:18\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../en/input/index.txt:5
# 75bb3cf6939e438c835b215141718b0c
msgid "Data Input"
msgstr "Données en entrée"

#: ../../en/input/index.txt:14
# 14063c9a5d864a2aa1d32ccb9cb049a9
msgid "Since the GDAL/OGR library is used for vector and raster access in MapServer, many more formats are supported, so please see the `OGR <http://www.gdal.org/ogr/ogr_formats.html>`__ (vector) and `GDAL <http://www.gdal.org/formats_list.html>`__ (raster) formats pages."
msgstr ""

#: ../../en/input/raster.txt:8
# 7a39a11f4ce74fb6b49c1ed2bb4c940d
msgid "Raster Data"
msgstr "Données Raster"

#: ../../en/input/raster.txt:10
# 8a0e1bbd8b9c4ec9b6507eb3e0ac0865
msgid "Frank Warmerdam"
msgstr "Frank Warmerdam"

#: ../../en/input/raster.txt:11
# 668d634ebe934b17bec95ce821b03b29
msgid "warmerdam at pobox.com"
msgstr "warmerdam at pobox.com"

#: ../../en/input/raster.txt:12
# eadbccf135b44fc599ff94c6d10d5cdc
msgid "$Revision$"
msgstr "$Revision$"

#: ../../en/input/raster.txt:13
# e921df0220b246e9ba78452a276b8591
msgid "$Date$"
msgstr "$Date$"

#: ../../en/input/raster.txt:14
# a1440a6f7b1e4e3785a89092f3cb9067
msgid "2007/12/09"
msgstr "09/12/2007"

#: ../../en/input/raster.txt:22
#: ../../en/input/vector/mssql.txt:17
#: ../../en/input/vector/mysql.txt:19
#: ../../en/input/vector/ogr.txt:17
# 5ee6c696871742f199ce7e53af0fe49f
# a3b6b1f87abf4deeab91cffeb97ac04a
# 0dfc95c3ac474e1c9b4aeebd59251e7b
# 97cb79f491c84638924b0df8f1248e2f
msgid "Introduction"
msgstr "Introduction"

#: ../../en/input/raster.txt:24
# 0a5065a8f81449bfa4f9fb3698e7232f
msgid "MapServer supports rendering a variety of raster file formats in maps. The following describes some of the supported formats, and what capabilities are supported with what formats."
msgstr ""

#: ../../en/input/raster.txt:28
# f4aac67c19804663929d8b14c00ed016
msgid "This document assumes that you are already familiar with setting up MapServer :ref:`mapfile`, but does explain the raster specific aspects of mapfiles."
msgstr ""

#: ../../en/input/raster.txt:32
# 58762224a67a49ce99f9d14939ea68dd
msgid "How are rasters added to a Map file?"
msgstr ""

#: ../../en/input/raster.txt:34
# 2d4809eb85cd406e84d3c4ed99fbea6d
msgid "A simple raster layer declaration looks like this. The `DATA` file is interpreted relative to the `SHAPEPATH`, much like shapefiles."
msgstr ""

#: ../../en/input/raster.txt:46
# 833e66def14443c381420f7bce990f91
msgid "Though not shown rasters can have `PROJECTION`, `METADATA`, `PROCESSING`, `MINSCALE`, and `MAXSCALE` information. It cannot have labels, `CONNECTION`, `CONNECTIONTYPE`, or `FEATURE` information."
msgstr ""

#: ../../en/input/raster.txt:54
# 9a7d0441a6874569a5fc8937079c7686
msgid "Classifying Rasters"
msgstr "Classification Raster"

#: ../../en/input/raster.txt:56
# 4378602c7d614bc19715c88349449d75
msgid "Rasters can be classified in a manner similar to vectors, with a few exceptions."
msgstr "Les images raster peuvent être classifiées d'une manière similaire aux vecteurs, avec quelques exceptions"

#: ../../en/input/raster.txt:71
# f8d6a7e3d59f43a08748221d2dde6f63
msgid "There is no need to specify a `CLASSITEM`. The raw pixel value itself (\"[pixel]\") and, for paletted images, the red, green and blue color associated with that pixel value (\"[red]\", \"[green]\" and \"[blue]\") are available for use in classifications. When used in an evaluated expression the pixel, red, green and blue keywords must be in lower case."
msgstr ""

#: ../../en/input/raster.txt:116
# 166b620c7b0d4c8f822627a33451f02c
msgid "As usual, `CLASS` definitions are evaluated in order from first to last, and the first to match is used. If a `CLASS` has a `NAME` attribute it may appear in a `LEGEND`. Only the `COLOR`, `EXPRESSION` and `NAME` parameters within a `CLASS` definition are utilized for raster classifications. The other styling or control information is ignored."
msgstr ""

#: ../../en/input/raster.txt:123
# 974ef0c5278c4b1a81609a16c754d0e0
msgid "Raster classifications always take place on only one raster band. It defaults to the first band in the referenced file, but this can be altered with the `BANDS` `PROCESSING` directive. In particular this means that including even a single CLASS declaration in a raster layer will result in the raster layer being rendered using the one band classification rules instead of other rules that might have applied (such as 3 band RGB rendering)."
msgstr ""

#: ../../en/input/raster.txt:131
# 7e00c2bf7dee45d0b6e8be35996e9b29
msgid "Classifying Non-8bit Rasters"
msgstr ""

#: ../../en/input/raster.txt:133
# 4678d5e53cd5481eae253e1ecc9a8768
msgid "As of MapServer 4.4 support has been added for classifying non-8bit raster inputs. That is input rasters with values outside the range 0-255. Mostly this works transparently but there are a few caveats and options to provide explicit control."
msgstr ""

#: ../../en/input/raster.txt:138
# 764dddfb80cb40bdb3918dfa0d57bce3
msgid "Classifying raster data in MapServer is accomplished by pre-classifying all expected input values and using that table of classification results to lookup each pixel as it is rendered. This is done because evaluating a pixel value against a series of CLASS definitions is relatively expensive to do for the hundreds of thousands of pixels in a typical rendered image."
msgstr ""

#: ../../en/input/raster.txt:144
# 0e84c1b7cac74cb7b355e289b76b52c4
msgid "For simple 8bit inputs, only 256 input values need to be pre-classified. But for non-8bit inputs more values need to be classified. For 16bit integer inputs all 65536 possible input values are pre-classified. For floating point and other input data types, up to 65536 values are pre-classified based on the maximum expected range of input values."
msgstr ""

#: ../../en/input/raster.txt:150
# ee692dc570714378b801b8795c97a3c0
msgid "The `PROCESSING` directive can be used to override the range of values to be pre-classified, or the number of values (aka Buckets) in that range to classify. The `SCALE=min,max` `PROCESSING` directive controls the range. The `SCALE_BUCKETS PROCESSING` directive controls the number of buckets. In some cases rendering can be accelerated considerable by selecting a restricted range of input values and a reduced number of scaling values (buckets)."
msgstr ""

#: ../../en/input/raster.txt:157
# 4a007c0c5ddd4a569c8fb0180e7c038a
msgid "The following example classifies a floating raster, but only 4 values over the range -10 to 10 are classified. In particular, the values classified would be -7.5, -2.5, 2.5, and 7.5 (the middle of each \"quarter\" of the range). So those four value are classified, and one of the classification results is selected based on which value is closest to the pixel value being classified."
msgstr ""

#: ../../en/input/raster.txt:199
# a89813f3c8e54a88aa727777665ddae6
msgid "Supported Formats"
msgstr ""

#: ../../en/input/raster.txt:201
# 7f0ac0b55f314b0a9290d21a69f25e7d
msgid "What raster formats are supported by MapServer is largely controlled by configuration time options. Some formats are considered to be built-in while the remainder are handled by the optional GDAL raster library."
msgstr ""

#: ../../en/input/raster.txt:205
# f3d12384dda646c7bc3fc7e2b9c536cc
msgid "More information on GDAL can be found at http://www.gdal.org, including the `supported formats list`_. Some of the advanced MapServer raster features, such as resampling, RGB color cube generation and automatic projection capture only work with raster formats used through GDAL. GDAL is normally built and installed separately from MapServer, and then enabled during the build of MapServer using the *--with-gdal* configuration switch."
msgstr ""

#: ../../en/input/raster.txt:212
# 2b0c1b3739534ef6839f111151689cbb
msgid "To find out what is built into a particular MapServer executable, use the -v flags to discover what build options are enabled. To find out what GDAL formats are available, the \"gdalinfo --formats\" command may be used. For example:"
msgstr ""

#: ../../en/input/raster.txt:233
# 6b498632481b4345a4b41ddbd4a53411
msgid "The following formats are potential builtins:"
msgstr ""

#: ../../en/input/raster.txt:242
# 0dfbdbe8bcbe4a859c9275f19c3b044d
msgid "If built with INPUT=TIFF MapServer will have builtin support for reading TIFF or GeoTIFF files. The builtin TIFF support has some limitations with regard to the organization of files that can be read (no tiled, 16bit, RGB, or odd color models). This driver supports world files, or simple builtin GeoTIFF coordinates for georeferencing."
msgstr ""

#: ../../en/input/raster.txt:248
# 981cfd977a84458b88818e8477d62cf7
msgid "Full featured TIFF/GeoTIFF support is available through GDAL. Note that only GDAL supports tiled TIFF files and TIFF files with overviews. Tiled TIFF files with overviews pre-built are one of the highest performance ways of serving large raster images."
msgstr ""

#: ../../en/input/raster.txt:257
# 4d4b829f9a3043ffa5f1bb3a84d44f61
msgid "If GD is configured with GIF (OUTPUT=GIF) support, then MapServer will also be able to read GIF files for raster layers. The only way to georeference GIF files is with a world file."
msgstr ""

#: ../../en/input/raster.txt:261
# 055d6ae06cc047758387ed8f77110a61
msgid "If GD is not configured with GIF support, it may still be available in GDAL."
msgstr ""

#: ../../en/input/raster.txt:267
# bde9a3560a274bb5a7dcaf5455b083ea
msgid "If GD is configured with PNG (OUTPUT=PNG) support, then MapServer will also be able to read PNG files for raster layers. The only way to georeference PNG files is with a world file."
msgstr ""

#: ../../en/input/raster.txt:271
# bfe3f45ff94b459f940d35131deb18ef
msgid "If GD is not configured with PNG support, it may still be available in GDAL."
msgstr ""

#: ../../en/input/raster.txt:278
# 0b942f08304c4cc4a63fe98c1ac46a2a
msgid "If MapServer is built with JPEG (INPUT=JPEG) support then greyscale JPEG files may be rendered in raster layers. RGB files (the more common kind) will not be able to be displayed. Georeferencing is via world files."
msgstr ""

#: ../../en/input/raster.txt:282
# 5dad8682505b4d26afbc80a66a9d60ed
msgid "If MapServer is not built with native JPEG support, GDAL may still support the format. In this case RGB files are also supported (via the RGB color cube mechanism). Georeferencing is still via world file."
msgstr ""

#: ../../en/input/raster.txt:290
# 81c9f04c6797402d8ef309b5e7bc1978
msgid "If configured with INPUT=EPPL7 (the default) MapServer will support one band eight bit Erdas LAN/GIS files. The .trl file is read for a colormap, and if not found the layer is treated as greyscale. Georeferencing is read from the file."
msgstr ""

#: ../../en/input/raster.txt:295
# 97135f38f9c04fae8581190f0f18585b
msgid "If MapServer is built with GDAL it is generally better to access all possible formats through GDAL rather than via the built-in drivers. The built-in drivers are less featureful, and not as well maintained."
msgstr ""

#: ../../en/input/raster.txt:303
# 9a2c4f3543a3410d90bc2e26c653cd2b
msgid "Rasters and Tile Indexing"
msgstr ""

#: ../../en/input/raster.txt:305
# a4567ada42d7497689758ac44233a04b
msgid "When handling very large raster layers it is often convenient, and higher performance to split the raster image into a number of smaller images. Each file is a tile of the larger raster mosaic available for display. The list of files forming a layer can be stored in a shapefile with polygons representing the footprint of each file, and the name of the files. This is called a 'TILEINDEX' and works similarly to the same feature in vector layers. The result can be represented in the Mapfile as one layer, but MapServer will first scan the tile index, and ensure that only raster files overlapping the current display request will be opened."
msgstr ""

#: ../../en/input/raster.txt:315
# 658c92e7cb39420c85e6a8fb15d8cf8d
msgid "The following example shows a simple example. No `DATA` statement is required because MapServer will fetch the filename of the raster files from the Location attribute column in the hp2.dbf file for records associated with polygons in hp2.shp that intersect the current display region. The polygons in hp2.shp should be rectangles representing the footprint of the corresponding file. Note that the files do not have to be all the same size, the formats can vary and they can even overlap (later files will be drawn over earlier ones); however, they must all be in the same coordinate system (projection) as the layer."
msgstr ""

#: ../../en/input/raster.txt:335
# ed7c4387f28040089288ffd2ebd98fd4
msgid "The filenames in the tileindex are searched for relative to the `SHAPEPATH` or map file, not relative to the tileindex. Great care should be taken when establishing the paths put into the tileindex to ensure they will evaluate properly in use. Often it is easiest to place the tileindex in the `SHAPEPATH` directory, and to create the tileindex with a path relative to the `SHAPEPATH` directory. When all else fails, absolute paths can be used in tileindex, but then they cannot be so easily moved from system to system."
msgstr ""

#: ../../en/input/raster.txt:343
# 07fec9f9c4354ee78e02ce19b5070f0f
msgid "While there are many ways to produce `TILEINDEX` shapefiles for use with this command, one option is the `gdaltindex`_ program, part of the GDAL utility suite. The gdaltindex program will automatically generate a tile index shapefile from a list of GDAL supported raster files passed on the command line."
msgstr ""

#: ../../en/input/raster.txt:359
# 959d043a6f8a4161bff794297e1a952e
msgid "Tile Index Notes"
msgstr ""

#: ../../en/input/raster.txt:361
# 31dcbd09c55e427abd3242585cd88acb
msgid "The shapefile (index_file) will be created if it doesn't already exist."
msgstr ""

#: ../../en/input/raster.txt:362
# 030680e731ca48d89283ba57fd42ed35
msgid "The default tile index field is 'location'."
msgstr ""

#: ../../en/input/raster.txt:363
# 62b1d2c3753c42f38f2e5063f5a6513f
msgid "Simple rectangular polygons are generated in the same coordinate system as the rasters."
msgstr ""

#: ../../en/input/raster.txt:365
# 9592d6ad950940a5bde254fa16084beb
msgid "Raster filenames will be put in the file exactly as they are specified on the commandline."
msgstr ""

#: ../../en/input/raster.txt:367
# 0fa3096567c345c48d26b7c48afb8e62
msgid "Many problems with tile indexes relate to how relative paths in the tile index are evaluated.  They should be evaluated relative to the `SHAPEPATH` if one is set, otherwise relative to the tileindex file.  When in doubt absolute paths may avoid path construction problems."
msgstr ""

#: ../../en/input/raster.txt:372
# dea8f6b82ba9442e967e709797ab680a
msgid "The gdaltindex program is built as part of GDAL. Prebuilt binaries for GDAL including the gdaltindex program can be downloaded as part of the `OSGeo4W`_, `FWTools`_ and `MS4W`_ distributions."
msgstr ""

#: ../../en/input/raster.txt:384
# 0148ff4f6a1b4709b2622b24608ee6ff
msgid "Raster Warping"
msgstr ""

#: ../../en/input/raster.txt:386
# 52a9072a87d24f058298d221f5873111
msgid "MapServer is able to resample GDAL rasters on the fly into new projections. Non-GDAL rasters may only be up or down sampled without any rotation or warping."
msgstr ""

#: ../../en/input/raster.txt:390
# e5b0c6a4f3594b54aaa13156dc034e19
msgid "Raster warping kicks in if the projection appears to be different for a raster layer than for the map being generated. Warped raster layers are significantly more expensive to render than normal raster layers with rendering time being perhaps 2-4 times long than a normal layer. The projection and datum shifting transformation is computed only at selected points, and generally linearly interpolated along the scanlines (as long as the error appears to be less than 0.333 pixels."
msgstr ""

#: ../../en/input/raster.txt:398
# 01b18a5513f240ce9ad17928abf812c0
msgid "In addition to reprojecting rasters, the raster warping ability can also apply rotation to GDAL rasters with rotational coefficients in their georeferencing information. Currently rotational coefficients won't trigger raster warping unless the map and layer have valid (though matching is fine) projection definitions."
msgstr ""

#: ../../en/input/raster.txt:408
# 2155e0111ec74a89a2435f5cad87f1ae
msgid "24bit RGB Rendering"
msgstr ""

#: ../../en/input/raster.txt:410
# de0a8cbd0e53490387478ee6a10c1c15
msgid "Traditionally MapServer has been used to produce 8 bit pseudo-colored map displays generated from 8bit greyscale or pseudocolored raster data. However, if the raster file to be rendered is actually 24bit (a red, green and blue band) then additional considerations come into play. Currently rendering of 24bit imagery is only supported via the GDAL renderer. The built-in PNG, JPEG and other drivers do not support 24bit input images."
msgstr ""

#: ../../en/input/raster.txt:417
# 6fc492cf133c4d6fb33189f2faf3c43e
msgid "If the output is still 8bit pseudo-colored (the `IMAGEMODE` is PC256 in the associated `OUTPUTFORMAT` declaration) then the full 24bit RGB colors for input pixels will be converted to a color in the colormap of the output image. By default a color cube is used. That is a fixed set of 175 colors providing 5 levels of red, 7 levels of green and 5 levels of blue is used, plus an additional 32 greyscale color entries. Colors in the input raster are mapped to the closest color in this color cube on the fly. This substantial degrades color quality, especially for smoothly changing images. It also fills up the colors table, limited to 256 colors, quite quickly."
msgstr ""

#: ../../en/input/raster.txt:427
# b47f4c803ea742f4b9d33de4d00ef050
msgid "A variation on this approach is to dither the image during rendering. Dithering selects a color for a pixel in a manner that \"diffuses error\" over pixels. In an area all one color in the source image, a variety of output pixel colors would be selected such that the average of the pixels would more closely approximate the desired color. Dithering also takes advantage of all currently allocated colors, not just those in the color cube. Dithering requires GDAL 1.1.9 or later, and is enabled by providing the `PROCESSING` \"DITHER=YES\" option in the mapfile. Dithering is more CPU intensive than using a simple color cube, and should be avoided if possible in performance sensitive situations."
msgstr ""

#: ../../en/input/raster.txt:438
# fdc590e2e11446baae5f71d4511a9cba
msgid "The other new possibility for handling 24bit input imagery in MapServer 4.0 or later, is to produce 24bit output images. The default \"IMAGETYPE png24\" or \"IMAGETYPE jpeg\" declaration may be used to produce a 24bit PNG output file, instead of the more common 8bit pseudo-colored PNG file. The `OUTPUTFORMAT` declaration provides for detailed control of the output format. The `IMAGEMODE` RGB and `IMAGEMODE` RGBA options produce 24bit and 32bit (24bit plus 8bit alpha/transparency) for supported formats."
msgstr ""

#: ../../en/input/raster.txt:450
# ec52a106ae854c899b40c60e09257354
msgid "Special Processing Directives"
msgstr ""

#: ../../en/input/raster.txt:452
# 2c85633e024c450c920bf3c6edf30a6e
msgid "As of MapServer 4.0, the PROCESSING parameter was added to the :ref:`LAYER` of the :ref:`mapfile`. It is primarily used to pass specialized raster processing options to the GDAL based raster renderer. The following processing options are supported in MapServer 4.0 and newer."
msgstr ""

#: ../../en/input/raster.txt:461
# 124d69168f6c4c4d9e394479bbd7080a
msgid "This directive allows a specific band or bands to be selected from a raster file. If one band is selected, it is treated as greyscale. If 3 are selected, they are treated as red, green and blue. If 4 are selected they are treated as red, green, blue and alpha (opacity)."
msgstr ""

#: ../../en/input/raster.txt:466
#: ../../en/input/raster.txt:488
#: ../../en/input/raster.txt:501
#: ../../en/input/raster.txt:552
#: ../../en/input/raster.txt:574
#: ../../en/input/raster.txt:587
#: ../../en/input/raster.txt:634
# fe8abb0464ed456d8e9fef42cbd5ff8a
# b70f68e878984ba7adea1a540c83bece
# 8488dded5d9b4d19898cf3262071b464
# 5dc5c4f0ecdc4967ad1d57a6b3a8bfe2
# 1aadcc093fb346c7b4f6f6be824fd468
# 38e7cfbc71d84525a541c73b70d1446a
# 57ff071a2ae14204b0b9f675d58c1628
msgid "Example:"
msgstr ""

#: ../../en/input/raster.txt:476
# 1b976b4a2ffb41e39a743bea392f2e6f
msgid "Alter the precision with which colors need to match an entry in the color table to use it when producing 8bit colormapped output (IMAGEMODE PC256). Normally colors from a raster colormap (or greyscale values) need to match exactly. This relaxes the requirement to being within the specified color distance. So a COLOR_MATCH_THRESHOLD of 3 would mean that an existing color entry within 3 (sum of difference in red, green and blue) would be used instead of creating a new colormap entry. Especially with greyscale raster layers, which would normally use all 256 color entries if available, this can be a good way to avoid \"stealing\" your whole colormap for a raster layer. Normally values in the range 2-6 will give good results."
msgstr ""

#: ../../en/input/raster.txt:498
# 7103e3a85e91418d945fb6667d4fd5dd
msgid "This turns on error diffusion mode, used to convert 24bit images to 8bit with error diffusion to get better color results."
msgstr ""

#: ../../en/input/raster.txt:511
# e1c9d4c4e05d4e5b9140f9455659f6c5
msgid "This option affects how image data is loaded for the resampler when reprojecting or otherwise going through complex resampling (as opposed to the fast default image decimation code path).  This forces the source image to be loaded at full resolution if turned on (default is NO).  This helps work around problems with default image resolution selection in when radical warping is being done.  It can result in very slow processing if the source image is large."
msgstr ""

#: ../../en/input/raster.txt:523
# c375372358504c748d4f4960485c0a4e
msgid "This option affects how image data is loaded for the resampler (as above). This option, if turned on, will cause the whole source image to be loaded and helps make up for problem identifying the area required, usually due to radical image reprojection near a dateline or projection \"horizon\". The default is NO.  Turning this on can dramatically affect rendering performance and memory requirements."
msgstr ""

#: ../../en/input/raster.txt:534
# 66fb416cb8814d8aa91d2083103ca39c
msgid "This directive (MapServer 4.9+) instructs the GDAL reader to apply a custom LUT (lookup table) to one or all color bands as a form of on the fly color correction. If LUT is used, the LUT is applied to all color bands. If LUT_n is used it is applied to one color band (n is 1 for red, 2 for green, 3 for blue, 4 for alpha)."
msgstr ""

#: ../../en/input/raster.txt:540
# 65e04da5b5ce417aa2b38113b51ed72c
msgid "The LUT can be specified inline in the form::"
msgstr ""

#: ../../en/input/raster.txt:544
# c8aca1f4f59c4ce7b47e0364a318d45d
msgid "This essentially establish particular input values which are mapped to particular output values.  The list implicitly begins with 0:0, and 255:255.  An actual 256 entry lookup table is created from this specification, linearly interpolating between the values.  The in values must be in increasing order.   The LUT specification may also be in a text file with the <lut_spec> being the filename.  The file contents should be in the same syntax, and the file is searched relative to the mapfile."
msgstr ""

#: ../../en/input/raster.txt:562
# 7fbb8b304ba74e3f9ebd10707e68dc19
msgid "As a special case there is also support for GIMP format curve files.  That is the text files written out by the Tools->Color->Curves tool.  If this is specified as the filename then it will be internally converted into linear segments based on the curve control points.  Note that this will not produce exactly the same results as the GIMP because linear interpolation is used between control points instead of curves as used in the GIMP.  For a reasonable number of control points the results should be similar.  Also note that GIMP color curve files include an overall \"value\" curve, and curves for red, green, blue and alpha.  The value curve and the appropriate color curve will be composed internally to produce the final LUT."
msgstr ""

#: ../../en/input/raster.txt:584
# 5d0940d2f0344a32ab594de189d0a526
msgid "Default is 2.5.  Rendering time will increase with increasing OVERSAMPLE_RATIO."
msgstr ""

#: ../../en/input/raster.txt:597
# a60f331501624435819bec98fc52c742
msgid "This option can be used to control the resampling kernel used sampling raster images. The default (and fastest) is NEAREST. AVERAGE will perform compute the average pixel value of all pixels in the region of the disk file being mapped to the output pixel (or possibly just a sampling of them). BILINEAR will compute a linear interpolation of the four pixels around the target location. This topic is discussed in more detail in :ref:`rfc4`."
msgstr ""

#: ../../en/input/raster.txt:605
# 3ada125d512647bcad4fe91b9681b31a
msgid "Resampling options other than NEAREST result in use of the generalized warper and can dramatically slow down raster processing. Generally AVERAGE can be desirable for reducing noise in dramatically downsampled data, and can give something approximating antialiasing for black and white linework. BILINEAR can be helpful when oversampling data to give a smooth appearance."
msgstr ""

#: ../../en/input/raster.txt:612
# fbab1fe92380452a8b877f1e7bc1c999
msgid "Example (chose one):"
msgstr ""

#: ../../en/input/raster.txt:624
# 06d32114bc1a412a925124c5aded16ae
msgid "This directive instructs the GDAL reader to pre-scale the incoming raster data. It is primarily used to scale 16bit or floating point data to the range 0-255, but can also be used to constrast stretch 8bit data. If an explicit min/max are provided then the input data is stretch (or squished) such that the minimum value maps to zero, and the maximum to 255. If AUTO is used instead, a min/max is automatically computed. To control the scaling of individual input bands, use the SCALE_1, SCALE_2 and SCALE_3 keywords (for red, green and blue) instead of SCALE which applies to all bands."
msgstr ""

#: ../../en/input/raster.txt:648
# 807ecfddc89c4e089f3643cbc05a9cba
msgid "Raster Query"
msgstr ""

#: ../../en/input/raster.txt:650
# 73c4da0240604c588dac497fc516368a
msgid "A new feature added in MapServer 4.4 is the ability to perform queries on rasters in a manner similar to queries against vector layers. Raster queries on raster layers return one point feature for each pixel matching the query. The point features will have attributes indicating the value of different bands at that pixel, the final rendering color and the class name. The resulting feature can be directly access in MapScript, or processed through templates much like normal vector query results. Only raster layers with a query TEMPLATE associated can be queried, even for the query methods that don't actually use the query template (much like vector data)."
msgstr ""

#: ../../en/input/raster.txt:660
# 6897175c95414bc7bb0f88ceed5316fb
msgid "Raster query supports QueryByPoint, QueryByRect, and QueryByShape. QueryByPoint supports single and multiple result queries. Other query operations such as QueryByIndex, QueryByIndexAdd, QueryByAttributes and QueryByFeature are not supported for raster layers."
msgstr ""

#: ../../en/input/raster.txt:665
# 43b365f36491431d8cda616b150f7e03
msgid "Raster layers do **not** support saving queries to disk, nor **query maps**."
msgstr ""

#: ../../en/input/raster.txt:667
# b7ddb2e787b44a339cefc6e0e3388d08
msgid "Raster queries return point features with some or all of the following attributes:"
msgstr ""

#: ../../en/input/raster.txt:673
# c0518c83131d46b5a43ccf3695b0182b
msgid "georeferenced X location of pixel."
msgstr ""

#: ../../en/input/raster.txt:678
# 315fbe68c6d9476db5bb27737867a69a
msgid "georeferenced Y location of pixel."
msgstr ""

#: ../../en/input/raster.txt:683
# 93892e05ac0a40438765e9c79b316b25
msgid "a comma separated list of the values of all selected bands at the target pixel."
msgstr ""

#: ../../en/input/raster.txt:689
# 95234d200d754dd893f9902616b82144
msgid "the value for the n'th band in the selected list at this pixel (zero based). There is one value_n entry for each selected band."
msgstr ""

#: ../../en/input/raster.txt:696
# 1c8d46796ff743569293d90d87665697
msgid "Name of the class this pixel is a member of (classified layers only)."
msgstr ""

#: ../../en/input/raster.txt:701
# 5118e3689be8483a901ba849b048724d
msgid "red component of the display color for this pixel."
msgstr ""

#: ../../en/input/raster.txt:706
# 69a624944537441ba207edf84b819029
msgid "green component of the display color for this pixel."
msgstr ""

#: ../../en/input/raster.txt:711
# 967e216aa23e41f0bd825d3988eb6f1d
msgid "blue component of the display color for this pixel."
msgstr ""

#: ../../en/input/raster.txt:713
# bcf83f6f4f3541ffa3930ec430dce826
msgid "The red, green and blue attribute are intended to be the final color the pixel would be rendered with, but in some subtle cases it can be wrong (ie. classified floating point results). The selected bands are normally the band that would be used to render the layer. For a pure query-only layer BANDS `PROCESSING` directive can be used to select more bands than could normally be used in a render operation. For instance for a 7 band landsat scene a `PROCESSING` \"BANDS=1,2,3,4,5,6,7\" directive could be used to get query results for all seven bands in results to a query operation."
msgstr ""

#: ../../en/input/raster.txt:722
# 900098eed87b41d4b434d73130ffbd4e
msgid "Care should be taken to avoid providing a large query area (selecting alot of pixels) as each selected pixel requires over 100 bytes of memory for temporary caching. The RASTER_QUERY_MAX_RESULT `PROCESSING` item can be used to restrict the maximum number of query results that will be returned. The default is one million which would take on the order of 100MB of RAM."
msgstr ""

#: ../../en/input/raster.txt:728
# e5c60682cedc499fbcc1b20be365e5dc
msgid "Query results can be returned as HTML via the normal substitution into query template HTML. Query results are also accessible via WMS GetFeatureInfo calls, and from MapScript. The following example shows executing a feature query from Python MapScript and fetching back the results:"
msgstr ""

#: ../../en/input/raster.txt:758
# 42d5969b34e54d8bbaeb0ad3b009f417
msgid "This following is a simple example query :ref:`TEMPLATE <template>` file. The raster pixel attributes will be substituted in before the query result is returned to the user as HTML."
msgstr ""

#: ../../en/input/raster.txt:773
# 5da0eaeea96a45669cd342647dc9c327
msgid "Internally raster query results are essentially treated as a set of temporary features cached in RAM. Issuing a new query operation clears the existing query cache on the layer. The transitory in-memory representation of raster query results is also responsible for the inability to save raster query results since saved query results normally only contain the feature ids, not the entire features. Some addition information is available in the `RasterQuery`_ Wiki topic."
msgstr ""

#: ../../en/input/raster.txt:785
# a67e92587b5743a7a10964756d92b157
msgid "Raster Display Performance Tips"
msgstr ""

#: ../../en/input/raster.txt:787
# a513a3bc16ac41888c039ad03e626dda
msgid "Build overview levels for large rasters to ensure only a reasonable amount of data needs to be touched to display an overview of a large layer. Overviews can be implemented as a group of raster layers at different resolutions, using `MINSCALEDENOM`, and `MAXSCALEDENOM` to control which layers are displayed at different resolutions. Another, perhaps easier way, is to build overviews for GDAL supported formats using the `gdaladdo`_ utility."
msgstr ""

#: ../../en/input/raster.txt:795
# b2ae2099234440e5be4c9e53d23f7c38
msgid "When using tileindexes to manage many raster files as a single file, it is especially important to have an overview layer that kicks in at high scales to avoid having to open a large number of raster files to fulfill the map request."
msgstr ""

#: ../../en/input/raster.txt:800
# 672e4a8396bb4b698296e4bda87e81d7
msgid "Preprocess RGB images to eightbit with a colormap to reduce the amount of data that has to be read, and the amount of computation to do on the fly."
msgstr ""

#: ../../en/input/raster.txt:804
# f1947ff5c10f43c7b429528fa53d6037
msgid "For large images use tiling to reduce the overhead for loading a view of a small area. This can be accomplished using the `TILEINDEX` mechanism of the mapfile, or by creating a tiled format file (ie. TIFF with GDAL)."
msgstr ""

#: ../../en/input/raster.txt:809
# f0aea025163d405bbe4a0df0e96deced
msgid "Ensure that the image is kept on disk in the most commonly requested projection to avoid on-the-fly image warping which is fairly expensive."
msgstr ""

#: ../../en/input/raster.txt:813
# 481bca4e48ee42a69d30f9fd1b0ee954
msgid "If you are getting debug output from MapServer in your web server log file, check to see if the message msResampleGDALToMap in effect appears. If so, the raster layer is being resampled. If you don't think it should be resampled carefully review your map file to ensure that the layer projection exactly matches the map projection or that the layer has no projection definition."
msgstr ""

#: ../../en/input/raster.txt:825
# 9a2b55bbef7d493ca833f5c4664c2e91
msgid "Preprocessing Rasters"
msgstr ""

#: ../../en/input/raster.txt:827
# 078cec5e5f76454ca34b51b1cb88ff9e
msgid "The following operations use GDAL commandline utilities, some of which are python scripts.  They are generally available on any GDAL installation with python support."
msgstr ""

#: ../../en/input/raster.txt:835
# a1b72559589a4a73830e84fc92cfc576
msgid "Producing Tiled Datasets"
msgstr ""

#: ../../en/input/raster.txt:837
# 2cd3758bc50d4ef7b2a89117fb6ed8cc
msgid "The TIFF and Erdas Imagine formats support internal tiling within files, and will generally give better display speed for local map requests from large images.  To produce a GeoTIFF file in internally tiled format using the TILED=YES creation option with the `gdal_translate`_ utility::"
msgstr ""

#: ../../en/input/raster.txt:845
# 3d4752c0010242f889c9319fb70c1961
msgid "Erdas Imagine (HFA) files are always tiled, and can be larger than 4GB (the GeoTIFF limit).  Use a command like the following to translate a raster to Imagine format::"
msgstr ""

#: ../../en/input/raster.txt:856
# 15fdcd96db8d4b0c9e33befbc4336bbc
msgid "Reducing RGB to 8bit"
msgstr ""

#: ../../en/input/raster.txt:858
# 11c561ac818d41f1a86e1e1981cbeac8
msgid "Rendering and returning 24bit images (especially as PNG) can be quite expensive in render/compress time and bandwidth.  Pre-reducing raster data to 8bit can save disk space, processing time, and bandwidth. However, such a color reduction also implicitly reduces the quality of the resulting map.  The color reduction can be done on the fly by MapServer but this requires even more processing.  A faster approach is to pre-reduce the colors of 24bit imagery to 8bit.  This can be accomplished with the GDAL rgb2pct.py script like this::"
msgstr ""

#: ../../en/input/raster.txt:869
# 7cf654264f6f4f2faa9a6e37d7f095eb
msgid "By default images will be reduced to 256 colors but this can mean there are not enough colors to render other colors in the map.  So it may be desired to reduce to even less colors::"
msgstr ""

#: ../../en/input/raster.txt:875
# df1702dc55e6490abeef3936a53f9451
msgid "Downsampling to 8bit should be done before internal tiling and overview building.  The rgb2pct.py script tries to compute an optimal color table for a given image, and then uses error diffusion during the 24bit to 8bit reduction.  Other packages (such as ImageMagick or Photoshop) may have alternative color reduction algorithms that are more appropriate for some uses."
msgstr ""

#: ../../en/input/raster.txt:887
# e32058923b984285bb39f85953a91157
msgid "Building Internal Overviews"
msgstr ""

#: ../../en/input/raster.txt:889
# 2fdbf2bbb7d34cd6ad66895f19a1b185
msgid "Most GDAL supported raster formats can have overviews pre-built using the `gdaladdo`_ utility.  However, a few formats, such as JPEG2000, MrSID, and ECW already contain implicit overviews in the format themselves and will not generally benefit from external overviews. For other formats (such as GeoTIFF, and Erdas Imagine format) use a command like the following to build overviews::"
msgstr ""

#: ../../en/input/raster.txt:898
# 9a21dd10bcbe4be2b5a4038d614c93e2
msgid "The above would build overviews at x2 through x128 decimation levels. By default it uses \"nearest neighbour\" downsampling.  That is one of the pixels in the input downsampled area is selected for each output pixel.  For some kinds of data averaging can give much smoother overview results, as might be generated with this command::"
msgstr ""

#: ../../en/input/raster.txt:906
# ae418dcd8b984e5aa1d5d6dd81ad7d7a
msgid "Note that overview building should be done after translating to a final format.  Overviews are lost in format conversions using gdal_translate.  Also, nothing special needs to be done to make MapServer use GDAL generated overviews.  They are automatically picked up by GDAL when mapserver requests a reduced resolution map."
msgstr ""

#: ../../en/input/raster.txt:917
# 362add3d426242bc89313f842a06c01a
msgid "Building External Overviews"
msgstr ""

#: ../../en/input/raster.txt:919
# b5c3fda4e0dd4f60b90f1e2786256bd6
msgid "When working with large collections of raster files using a MapServer tileindex, it is desirable to build reduced resolution overview layers that kick in at high scales (using `MINSCALEDENOM` / `MAXSCALEDENOM` to control which layer activates).  Preparing the overviews can be a somewhat complex process.  One approach is to use the gdal_merge.py script to downsample and mosaic all the images.  For instance if we want to produce an overview of many 1meter ortho photos with 250 meter pixels we might do something like::"
msgstr ""

#: ../../en/input/raster.txt:930
# fcbabf5b095d48a2addd25f96c520ed4
msgid "The gdal_merge.py utility suffers from a variety of issues, including no support for different resampling kernels.  With GDAL 1.3.2 or later it should be able to accomplish something similar with the more flexible gdalwarp utility::"
msgstr ""

#: ../../en/input/raster.txt:937
# 5cd503b26d2c4042a1c0331428df9a4f
msgid "In some cases the easiest way of generating an overview is to let MapServer do it using the shp2img utility.  For instance if the tileindex layer is called ''orthos'' we could do something like::"
msgstr ""

#: ../../en/input/raster.txt:943
# 023f497b32e14f50afd6abb3d82c9a8f
msgid "Note that the overview will be generated with the extents and size in the .map file, so it may be necessary to temporarily adjust the map extents and size values to match the raster extents and the desired output size.  Also, if using this method, don't leave large files in PNG (or GIF or JPEG) format as they are slow formats to extract subareas from."
msgstr ""

#: ../../en/input/raster.txt:958
# 84135476fb4d4808979c515dfa2fcba8
msgid "Georeference with World Files"
msgstr ""

#: ../../en/input/raster.txt:960
# ca03c7b5ee104ab29a4e4e1b7a4e21e9
msgid "World files are a simple mechanism for associating georeferencing (world coordinates) information with raster files. ESRI was the first company to propagate the use of world files, and they often used with TIFF instead of embedding georeferencing information in the file itself."
msgstr ""

#: ../../en/input/raster.txt:966
# 2eb937efc5dc4658a5fa8a9c09dc0580
msgid "The world file contents look like the following. The first coefficient is the X pixel size. The second and third are rotational/shear coefficients (and should normally be 0.0). The fourth is the Y pixel size, normally negative indicating that Y decreases as you move down from the top left origin. The final two values are the X and Y location of the center of the top left pixel. This example is for an image with a 2m x 2m pixel size, and a top left origin at (356800E, 5767999N):"
msgstr ""

#: ../../en/input/raster.txt:984
# 661ecd80c35c4b2199287305a8012ffa
msgid "The name of the world file is based on the file it relates to. For instance, the world file for aerial.tif might be aerial.tfw. Conventions vary for appropriate endings, but with MapServer the extension .wld is always OK for world files."
msgstr ""

#: ../../en/input/vector/ArcInfo.txt:5
# 2afcdd81a7c24a5c863f81faac273341
msgid "ArcInfo"
msgstr ""

#: ../../en/input/vector/ArcInfo.txt:7
# baedec48490541e287649a28efb9b510
msgid "ESRI ArcInfo Coverage Files are also known as simply as Coverages and less commonly as ADF files."
msgstr ""

#: ../../en/input/vector/ArcInfo.txt:11
#: ../../en/input/vector/S57.txt:11
#: ../../en/input/vector/dgn.txt:8
#: ../../en/input/vector/filegdb.txt:15
#: ../../en/input/vector/gml.txt:10
#: ../../en/input/vector/gpx.txt:14
#: ../../en/input/vector/mapinfo.txt:8
#: ../../en/input/vector/ntf.txt:11
#: ../../en/input/vector/pgeo.txt:12
#: ../../en/input/vector/sdts.txt:10
#: ../../en/input/vector/shapefiles.txt:11
#: ../../en/input/vector/sqlite.txt:16
#: ../../en/input/vector/tiger.txt:12
# 285cf128abb941038ceae414372cef39
# ff7ae0b5a6944c4e9d59a991bfc341bb
# d11b8fe6db0943ce8c34b9e75a0e922e
# e105a23503ce43ceaaac65e25f5ff587
# 457dafa2311b441390a904dd99ec0887
# e039e2bd1c3349cda785d0361c4e16f9
# 6314fbc7db8747158761c7822d416015
# 909ff5c9ba494893bea601d0b9d51d61
# 50f81e575dde444981085c09f893b5de
# b7e4fcae1f364f02a19891e3731e5288
# 7479898836d44e4e85a839762fe84521
# 632368f214e34d1a84b8c4676005838b
# cb51b57793e048f4b9bdf2b90d64b006
msgid "File listing"
msgstr ""

#: ../../en/input/vector/ArcInfo.txt:13
# d4b90a7b398d4fe1930f689c8efe09c4
msgid "Coverages are made up of a set of files within a folder.  The folder itself is the coverage name.  The files roughly represent different layers, usually representing different types of topology or feature types."
msgstr ""

#: ../../en/input/vector/ArcInfo.txt:23
# b58960dbd7e641a192907c55647f2ffc
msgid "A folder with the name INFO is also part of the coverage.  It sits at the same hierarchical level as the coverage folder itself.  Therefore, to copy a coverage (using regular file system tools) the coverage folder and the INFO folder must both be copied.  The INFO folder holds some catalogue information about the coverage."
msgstr ""

#: ../../en/input/vector/ArcInfo.txt:37
#: ../../en/input/vector/S57.txt:20
#: ../../en/input/vector/dgn.txt:17
#: ../../en/input/vector/filegdb.txt:21
#: ../../en/input/vector/gml.txt:43
#: ../../en/input/vector/gpx.txt:19
#: ../../en/input/vector/inline.txt:17
#: ../../en/input/vector/kml.txt:24
#: ../../en/input/vector/mapinfo.txt:21
#: ../../en/input/vector/ntf.txt:16
#: ../../en/input/vector/pgeo.txt:17
#: ../../en/input/vector/sdts.txt:34
#: ../../en/input/vector/shapefiles.txt:20
#: ../../en/input/vector/sqlite.txt:22
#: ../../en/input/vector/tiger.txt:25
#: ../../en/input/vector/wfs.txt:53
# 6f88905dab3e4eeca006cfe74e935560
# b5d7d0e2b236470d96255af810b1cc74
# 8f5ee87519d64a5b9d370cdd12fd73d8
# de6fd8808c8a4af6aac9610957269286
# aefda7bc5f5b4572854874c10b5b67ff
# 6fce7237fea244f28edb0e6ee9324adb
# 3eed2f3a84974f3fb560610293821ebd
# a96eb30d24454e9c98a6e006a3fc228e
# 302c2da12053434a86003d65d046541e
# b5bbcc10e6114da68353aac38d8c74c7
# 468e2e19daa04fddb0c00bb1497c2e5c
# 5d5232e65533433db7828254c840cbd8
# 3d914e1aa8cb452eaed97300b965ddd7
# 48088b3d576144158c847aba54c9a4f3
# 9e472a90e9ef416cad79819159001341
# a29e8849bf6f4546bd27966f491728fc
msgid "Data Access / Connection Method"
msgstr ""

#: ../../en/input/vector/ArcInfo.txt:39
# cb54dc34cd8f49b882b3a23a39b4240e
msgid "CONNECTIONTYPE OGR must be used.  The ability to use coverages is not built into MapServer."
msgstr ""

#: ../../en/input/vector/ArcInfo.txt:42
# c6331157e76d40c0af2117a6bc45c8a6
msgid "The path to the coverage folder name is required."
msgstr ""

#: ../../en/input/vector/ArcInfo.txt:44
# 476f363f857b4776b2beea6febf0e00f
msgid "The layer name (feature type) is specified in the DATA parameter"
msgstr ""

#: ../../en/input/vector/ArcInfo.txt:47
#: ../../en/input/vector/S57.txt:46
#: ../../en/input/vector/dgn.txt:38
#: ../../en/input/vector/filegdb.txt:39
#: ../../en/input/vector/gml.txt:52
#: ../../en/input/vector/gpx.txt:34
#: ../../en/input/vector/mapinfo.txt:41
#: ../../en/input/vector/ntf.txt:25
#: ../../en/input/vector/pgeo.txt:40
#: ../../en/input/vector/postgis.txt:108
#: ../../en/input/vector/sdts.txt:45
#: ../../en/input/vector/shapefiles.txt:29
#: ../../en/input/vector/sqlite.txt:44
#: ../../en/input/vector/tiger.txt:32
# c2a1325a0e4b4b68bee53293153eb341
# 1328cbd35ba24e43908dc2855b8c5ba4
# 1e3e55ffd47c40dc8b0d3bb456f0df01
# 1de45ebba7a5474e800369bbfb379a7d
# d06ae83cc2ad42e48814feed2ca7266f
# f3d46c5a139943388211efcd9b96886d
# 6ac816818aac487b89301eedb6c57c50
# 1f2a055bdd004c66a89f4597762a2486
# 7d7b0130d7954f3b8336035f6dab8384
# f947537e5fe148f99433044e75b359e9
# 82dc3725db534e3a8fde3065faa24dae
# ccc3e28586184122bc5ec7d1073485e0
# 3e2cb7d27880463792880a913b12d267
# 3c5533886aa74a5ba5fd377477d82a27
msgid "OGRINFO Examples"
msgstr ""

#: ../../en/input/vector/ArcInfo.txt:49
# 41d730fa46ee48519066c8023d726ef7
msgid "The directory is the data source.  Layers are found within the directory. Using ogrinfo on a coverage directory:"
msgstr ""

#: ../../en/input/vector/ArcInfo.txt:62
# 9641b6a4830741d39b97a467243a9b5e
msgid "Using ogrinfo to examine the structure of a layer:"
msgstr ""

#: ../../en/input/vector/ArcInfo.txt:85
#: ../../en/input/vector/S57.txt:125
#: ../../en/input/vector/dgn.txt:96
#: ../../en/input/vector/gml.txt:89
#: ../../en/input/vector/ntf.txt:79
#: ../../en/input/vector/sdts.txt:116
#: ../../en/input/vector/tiger.txt:100
# f696d18adff34f318677a04731437124
# c654be50c21a416a89c7dc842292e342
# 26cf61b086c34bbbbd6e3fee44926d77
# 1be9bafdddfc4a7383130787af5fa392
# 1a3f6350977e42979917776d79b83447
# 6b830a8907404519b50e3b0c0e1c4c7f
# 0f34aba1bad1405d93b853aae9bcc6d0
msgid "Map File Example:"
msgstr ""

#: ../../en/input/vector/S57.txt:5
# 812b5ef84b884c71a9619ba94f68c85f
msgid "S57"
msgstr ""

#: ../../en/input/vector/S57.txt:7
# c185acbde2eb4cec91f76acab75abbc7
msgid "Also known as S57.  The IHO S-57 format is a vector interchange format used for maritime charts. It was developed by the International Hydrographic Organisation (IHO).  For more information about the IHO see: http://www.iho.shom.fr/"
msgstr ""

#: ../../en/input/vector/S57.txt:13
# ca98c95bc55e44b0a90e461c99af55b4
msgid "Individual S57 data files have an extension of \\*.000. For example:"
msgstr ""

#: ../../en/input/vector/S57.txt:22
# 2086280f009e498fae11568014dbe5dd
msgid "S57 access in MapServer occurs through OGR, CONNECTIONTYPE OGR must be used."
msgstr ""

#: ../../en/input/vector/S57.txt:24
# 76e3b87e14ad480295c038584637b4cd
msgid "Specify a full path or a relative path from the SHAPEPATH to the .000 file for the CONNECTION"
msgstr ""

#: ../../en/input/vector/S57.txt:26
# b685202e78314cc59e36e8832df690c3
msgid "Use the DATA parameter to specify the s57 layer name"
msgstr ""

#: ../../en/input/vector/S57.txt:29
# a0c91f4a29bc4220ad212ae48e2df74c
msgid "Special Notes"
msgstr ""

#: ../../en/input/vector/S57.txt:31
# 2e838988e8d24ea98054632d14c17088
msgid "The underlying OGR code requires two files from your GDAL/OGR installation when reading S57 data in MapServer : s57objectclasses.csv and s57attributes.csv.  These files can be found in the /GDAL/data/ folder (unix: /usr/local/share/gdal windows: /ms4w/gdaldata).  If you receive an error in MapServer such as:"
msgstr ""

#: ../../en/input/vector/S57.txt:39
# 4fd611419508434bb2f9e31c72a9808d
msgid "you may have to point MapServer to these files using the CONFIG parameter in the main section of your map file:"
msgstr ""

#: ../../en/input/vector/S57.txt:47
# bfa066b8e4bd45899465dcb365934df7
msgid "Using ogrinfo on an S57 file to get the layer name:"
msgstr ""

#: ../../en/input/vector/S57.txt:82
# ae52145353f34ffc97dcc9b3b335b03b
msgid "Using ogrinfo to examine the structure of an S57 layer:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:5
# 593165e5d3ba4097877a69a3aa50887a
msgid "Virtual Spatial Data"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:11
# 13e1de32d6134b4ca2c88f1ceb6999a0
msgid "This is an OGR extension to MapServer.  It allows you to connect to databases that do not explicitly hold spatial data, as well as flat text files.  Your data must have an X and a Y column, and the data may be accessed through an ODBC connection or a direct pointer to a text file."
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:16
# 26f39d8a87fb40f3b3bddc6321b8e458
msgid "The original `VirtualSpatialData`_ wiki page may contain additional information."
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:21
# b4e23732327a4781bcf8f83f141886db
msgid "Types of Databases"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:23
# 3defce4933d04594a858a1b787120f0f
msgid "The VirtualSpatialData OGR extension has been tested with the following databases and should, in theory, support all ODBC data sources."
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:27
# f61080b6fbda4f179e0e144e5eaf5838
msgid "Oracle"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:28
#: ../../en/input/vector/mysql.txt:5
# b14b5d1020e04b59bb23843708e4baef
# fd65efd531e5423b93fd1abde996e526
msgid "MySQL"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:29
# b0acdcb4122d4d66ae4c05e37e289184
msgid "SQL Server"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:30
# c95d08fe4b7b4d3dbf7f9ec04f44685a
msgid "Access"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:31
# 22247686e8eb43808772c3d3fa87a2f9
msgid "PostgreSQL"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:35
# c8566de4931b4fb0a4367de925523a46
msgid "Types of Flat Files"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:37
# 78568f69aef2482d9d49754f1c7e1cdb
msgid "Comma, tab or custom delimited text/flat files work with VirtualSpatialData."
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:40
# 4660efd3edde45f7b1e89d138f58226c
msgid "Steps for Display"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:43
# aa08ff2d76ff4499ab5095947cf4d54c
msgid "1. Create the Datasource Name (DSN)"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:45
# 64aeaa7710264c619aa61d383b4f8328
msgid "Specific notes about creating a DSN on Windows and Linux can be found by searching the MapServer reference documents site"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:48
# 4aa7aec4e5604d23b57d620f0028cf6c
msgid "On some Windows systems you must create a SYSTEM DSN."
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:51
# d80030a6545143888c63927280643408
msgid "2. Test your Connection"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:53
# 040ffa7ca8c74fb3b3119a842c2dc1a8
msgid "Test your connection with ogrinfo.  The syntax for this command is:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:59
# 3b6ff55516584807899b80ae3b72ab30
msgid "Windows users may not be required to specify a user/password, so the syntax would be:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:65
# 2d728d18fbf44e3b886f8a5bbe947eb8
msgid "Example: Accessing a comma separated text file through ODBC using ogrinfo"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:68
# ba7cabe4f99a407988b758e305153dd6
msgid "The following is a snippet of the flat text file coal_dep.txt containing lat/long points:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:78
# 2550a65db024447cba49568c9f718076
msgid "If the DSN name is Data_txt, the ogrinfo command to see a list of applicable files in the directory is:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:99
# b8a1ece9f062408691d8b6807d89fb43
msgid "Username and password may be optional, so the following may also be valid:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:105
# 2b4a70c0b16340678e6510864f018e3d
msgid "Therefore, the command to see more information about one of the specific layers is:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:132
# 989f413f04cd49d2a5258d9b2e579f86
msgid "3. Create a Virtual Data File"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:134
# 50740f7e87164d8f94e9a0abc36cf6f2
msgid "This is a file with an ovf extension and looks like the following:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:148
# 47a6faf1c51a4eef96e0d3ac1e2f99c0
msgid "More information on ovf files can be found at: http://www.gdal.org/ogr/drv_vrt.html"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:150
# a21b48c669114b98b81ae8a9ac12bc54
msgid "Example ovf file for coal_dep.txt:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:164
# a65946c20b304016b028bbda1037f5f6
msgid "4. Test Virtual Data File with ogrinfo"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:166
# 2c2c20f748ec48ddb61d6b3385779cc3
msgid "Use ogrinfo to test your new ovf file, such as:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:189
# 61328b989e2946e18c60fb33a40dfcfc
msgid "5. Mapfile Layer"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:191
# 9ffd294b2c544ffcbbb600008fa56dbe
msgid "Using an ovf file your layer may look like:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:221
# be4ee2f9ac0a440bb18b9168199643dd
msgid "Or you may specify the ovf contents inline such as:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:259
# 01215a9492d1439b9af6c9fcd5b1e7a5
msgid "6. Test your Mapfile"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:261
# 439811bcef2f481b88d79cdc55f7f8e4
msgid "The first thing you should try is to use the :ref:`shp2img` utility:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:267
# 564fb552a4ab4676a2ceaa58183b78ac
msgid "Once you successfully created a map image, then try your application. Note Windows users may come across a problem where shp2img works but their application throws an error similar to this:"
msgstr ""

#: ../../en/input/vector/VirtualSpatialData.txt:278
# f81b377e34f74ac9b1afa77bbb862663
msgid "If that happens you should make sure you have created a System DSN."
msgstr ""

#: ../../en/input/vector/arcsde.txt:5
# 0886d91b84a146b084f2cefceb295329
msgid "ArcSDE"
msgstr ""

#: ../../en/input/vector/arcsde.txt:7
# 323e57e424344603b6a235d5517d9bc0
msgid "Spatial Database Engine (SDE) is one of `ESRI`_'s  products which enables spatial data to be stored, managed, and quickly retrieved from leading commercial database management systems like Oracle, Microsoft SQL Server, Sybase, IBM DB2, and Informix."
msgstr ""

#: ../../en/input/vector/arcsde.txt:13
# 09d7ae616c594562a095b15465612aee
msgid "Supported ArcSDE Operations"
msgstr ""

#: ../../en/input/vector/arcsde.txt:15
# 374a36346a2a4a59be44dd3632e3dc51
msgid "Versioned queries (query geometry and attributes from a specified version)"
msgstr ""

#: ../../en/input/vector/arcsde.txt:16
# 15c72b52bc254e6fae8ac3ec8ea730f1
msgid "queryByAttributes (select geometry and attributes based on the values of an attribute)"
msgstr ""

#: ../../en/input/vector/arcsde.txt:18
# 2c6fc25c1e7341de877e583bbfc21d27
msgid "Limited join support for within-database tables</li>"
msgstr ""

#: ../../en/input/vector/arcsde.txt:19
# a55c40fe3a574040ad8f11aa708b309e
msgid "queryByRect (select geometry based on an extent)"
msgstr ""

#: ../../en/input/vector/arcsde.txt:20
# e47870c0c5b949f2a4e8f671e5eb37da
msgid "Projection on the fly"
msgstr ""

#: ../../en/input/vector/arcsde.txt:21
# 31a84ec1bc1e46e09da30cac3b440467
msgid "SDE for Coverages (a read-only type of SDE for coverage, shapefile, and ArcStorm/ArcLibrarian repositories)"
msgstr ""

#: ../../en/input/vector/arcsde.txt:23
# d98db2f696f140d0815fba7d9b37b63c
msgid "SDE 8.1, 8.2, 8.3, 9.0, 9.1, and 9.2"
msgstr ""

#: ../../en/input/vector/arcsde.txt:24
# f5b2cbf868f24a78960b59f024ad6074
msgid "Linux, Windows, and Solaris (platforms that have SDE C API support)"
msgstr ""

#: ../../en/input/vector/arcsde.txt:27
# 0349015a15ae450f9a84d0f6a4feec58
msgid "Unsupported ArcSDE Operations"
msgstr ""

#: ../../en/input/vector/arcsde.txt:29
# 92898a1f606743e8844c89805486afd4
msgid "queryByShape (pass in a shape with MapScript and use it for queries)"
msgstr ""

#: ../../en/input/vector/arcsde.txt:30
# e4d44500ed5c4b11ae87fd97c6d55682
msgid "Direct Connect (bypass SDE to connect directly to the database with the SDE C API)"
msgstr ""

#: ../../en/input/vector/arcsde.txt:33
# 073729e65bb04233b170f85967700ecd
msgid "How to make a connection to SDE:"
msgstr ""

#: ../../en/input/vector/arcsde.txt:35
# 723badc4d54843afbe0019023a1a78b5
msgid "Install the SDE C API client libraries for your platform (preferably matched to the server version you are using, ie 8.2 client -> 8.2 server, 8.3 client -> 8.3 server)"
msgstr ""

#: ../../en/input/vector/arcsde.txt:38
# d9df1bb2a9e2430792bda31193847f85
msgid "Compile MapServer with SDE support :ref:`MapServer Unix Compilation Howto <unix>` for specific details)"
msgstr ""

#: ../../en/input/vector/arcsde.txt:40
# 197ea946692c4b7aa6e2b37a16ac65a8
msgid "Define a LAYER block in a MapFile that uses SDE as the CONNECTIONTYPE"
msgstr ""

#: ../../en/input/vector/arcsde.txt:80
# b8ead87ba46442c8bc10395497045fd2
msgid "CONNECTION - Order is important!"
msgstr ""

#: ../../en/input/vector/arcsde.txt:82
# cea718b19af247c5bb2254a34017d903
msgid "**sdemachine.iastate.edu** - The name of the machine you are connecting to. In some instances, this may need to be the IP address of the machine rather than the name if the server running MapServer is not configured to cascade DNS lookups"
msgstr ""

#: ../../en/input/vector/arcsde.txt:86
# dfe82866209c4d51b58d1c231ce4dbd3
msgid "**port:5151** - The port number of SDE. The *port:* is important as SDE expects you to define the **service** in this slot, and it can be other names like **sde:oracle** (for direct connect) or **esri_sde** (for systems with port 5151 defined as esri_sde in /etc/services)"
msgstr ""

#: ../../en/input/vector/arcsde.txt:90
# 2a08f2e8481f470b9b28c5b708ec8eac
msgid "**sde** - The database username that the SDE server is using to connect to your database. It is often only important for SDE setups that are connecting to Oracle (and even then, not so important). Just leave it as **sde** if you don't know what it should be."
msgstr ""

#: ../../en/input/vector/arcsde.txt:94
# a332601df37a44e0ad870fc1d63ce006
msgid "**username** - The username that will be connecting to SDE. This user must have been granted rights to select the layer that you will be specifying in the *DATA* directive. You can use ArcCatalog or the SDE command-line utilities to grant the appropriate rights to layers."
msgstr ""

#: ../../en/input/vector/arcsde.txt:98
# 28aab362e9fc4f6ab377e6764a6c6e17
msgid "**password** - Password of the user connecting to SDE.  **Case Sensitive**."
msgstr ""

#: ../../en/input/vector/arcsde.txt:101
# 35f52a5160e5460aab6843cab09a0170
msgid "DATA - Order is important!"
msgstr ""

#: ../../en/input/vector/arcsde.txt:103
# 3f2b666efe98479480d5b5d40c40c451
msgid "**HOBU.STATES_LAYER** - The layer name you are querying. This the *full* name of the table in which the layer resides. If you are using Oracle or Microsoft SQL Server as the DB for SDE, the schema name must also be supplied."
msgstr ""

#: ../../en/input/vector/arcsde.txt:107
# 83935f1f5c084ab2a239fa93ce091118
msgid "**SHAPE** - The column that contains the geometry. SDE technically allows for storage of multiple geometry types in the same layer, but in practice this isn't desirable. Also, expect to have problems if there are invalid or null geometries in the layer (or versions of the layer)."
msgstr ""

#: ../../en/input/vector/arcsde.txt:111
# 85b29d50756e4b809d42906d45184b13
msgid "**SDE.DEFAULT** - As of MapServer 4.2, you can query against a specific version of the layer. SDE supports multi-user editing with versions. If a layer has been Registered with the GeoDatabase and Registered as Versioned (ArcGIS terms), MapServer can query against specified versions of those edits. If not specified, *SDE.DEFAULT* will be used for all queries. **Case Sensitive**."
msgstr ""

#: ../../en/input/vector/arcsde.txt:119
# 38211940c6464c119434ccc939d8a074
msgid "The version parameter is located in a different spot than MapServer 4.2, which had it on the CONNECTION string."
msgstr ""

#: ../../en/input/vector/arcsde.txt:123
# e94840511b884ce88d1270cef9627ba1
msgid "TEMPLATE"
msgstr ""

#: ../../en/input/vector/arcsde.txt:125
# 39205ece591d443a8deb45c1c868cc66
msgid "**/where/the/template/file/is/located** - A template directive must be specified (can point to a dummy file) in order for MapServer to be able to query attributes from SDE.  If you are only going to be drawing layers, this directive is unnecessary and will slow down the query operations of SDE (especially for layers with lots of attribute columns)."
msgstr ""

#: ../../en/input/vector/arcsde.txt:132
# 92be7d891c89409f9af9862b4e823392
msgid "PROCESSING"
msgstr ""

#: ../../en/input/vector/arcsde.txt:134
# 6064f613627548a88e9feb9b0b40f0e3
msgid "**PROCESSING \"QUERYORDER=ATTRIBUTE\"** - Allows you to force SDE to use the WHERE clause that was defined in your FILTER statement first, without attempting to hit the spatial index.  Only in very special cases will you want to do this."
msgstr ""

#: ../../en/input/vector/arcsde.txt:138
# f44b4c03c2574225b3dd17761f1965e8
msgid "**PROCESSING \"OBJECTID=OBJECTID\"** - If you are having trouble with the SDE driver detecting your unique ID column, you can override it with this processing parameter.  Doing so will also have a slight performance benefit because it will save a couple of extra queries to the database."
msgstr ""

#: ../../en/input/vector/arcsde.txt:142
# 502725aaacc448bf838de807eedbb5d0
msgid "**PROCESSING \"ATTRIBUTE_QUALIFIED=TRUE\"** - User can set this option to always use fully qualified attribute names."
msgstr ""

#: ../../en/input/vector/arcsde.txt:146
# e42f2617880549e6a7fe8531c41b1e67
msgid "Within-database Join Support"
msgstr ""

#: ../../en/input/vector/arcsde.txt:149
# 255c683147af4c1aa110d78867b8254e
msgid "MapServer's SDE driver, as of MapServer 5.0, allows you to join a single attribute table that has no geometries to the layer that you are rendering. This feature allows you to use the data in the joined table much as you would in a composite query that was made with something like PostGIS or Oracle Spatial. That is, the columns in the right table of the join are available for CLASSITEM, LABELITEM and so on. The biggest constraint, however, is that **fully qualified** names must be used or it most likely will not work. The join support is activated through PROCESSING options."
msgstr ""

#: ../../en/input/vector/arcsde.txt:159
# 98a50386bf7d43aa80adc279118fe94a
msgid "**PROCESSING \"JOINTABLE=SDE_MASTER.GEOSERVWRITE.JOINTABLE\"** - The JOINTABLE processing option tells the driver which table you are joining the current layer to."
msgstr ""

#: ../../en/input/vector/arcsde.txt:162
# 6501c3755c894dd29e9d6a9662919170
msgid "**CLASSITEM \"SDE_MASTER.GEOSERVWRITE.JOINTABLE.VAL\"** - A CLASSITEM or LABELITEM for a joined table using this mechanism must be fully qualified."
msgstr ""

#: ../../en/input/vector/arcsde.txt:164
# 167c0ea822ef4595bb0612e91cb0ccf3
msgid "**FILTER \"SDE_MASTER.GEOSERVWRITE.JOINTABLE.AQ_TAG=SDE_MASTER.GEOSERVWRITE.JOINTESTLAYER.AQ_TAG\"** - An important part of the join is defining how the join is to be made. Use a FILTER to do so."
msgstr ""

#: ../../en/input/vector/dgn.txt:5
# db3ab83b78a54015af3f410b732bc1cd
msgid "DGN"
msgstr ""

#: ../../en/input/vector/dgn.txt:10
# 1c557231daff46959ef4084bdfea42b4
msgid "Data are encapsulated in a single file, usually with the suffix .dgn."
msgstr ""

#: ../../en/input/vector/dgn.txt:19
# d83810612da349d3aa70343d1065e099
msgid "Access is available in MapServer through OGR."
msgstr ""

#: ../../en/input/vector/dgn.txt:20
#: ../../en/input/vector/gml.txt:47
#: ../../en/input/vector/mapinfo.txt:25
#: ../../en/input/vector/sdts.txt:37
# f3a3ae94dddd4a529b0ad98e9f3338d5
# 212136890b714103a8a2c50634129638
# 51e8a065c2dd4a68b735116366a17395
# ddd71304a06848e7a9a2e1ceb2828d21
msgid "The CONNECTIONTYPE OGR parameter must be used."
msgstr ""

#: ../../en/input/vector/dgn.txt:21
# ec858867054342f98c73533d170e5d22
msgid "The path to the dgn file is required, file extension is needed."
msgstr ""

#: ../../en/input/vector/dgn.txt:22
# c5b5aa151ed64cc6a27721545020e216
msgid "All types of features in a DGN file are held in one \"layer\" of data.  The layer is called elements and is the first and only layer."
msgstr ""

#: ../../en/input/vector/dgn.txt:24
# 8ff07cf39aea486e9999e26f162efb65
msgid "The type of feature to be read from the DGN depends on the TYPE parameter in the map file."
msgstr ""

#: ../../en/input/vector/dgn.txt:26
# a3ed306e63e944fabc858866b6e8568f
msgid "DGN files typically contain POINT, LINE, POLYGON and ANNOTATION feature types."
msgstr ""

#: ../../en/input/vector/dgn.txt:28
# 5311cddbd8bc48b0b362a6dd072754d2
msgid "DGN files contain \"styling\" information - how to color and present the data.  This is used, optionally, by specifying the STYLEITEM \"AUTO\" parameter."
msgstr ""

#: ../../en/input/vector/dgn.txt:34
# 85d8c4e3311540e5b2b96cb6ebc60e97
msgid "DGN files typically use white as a color for their features and therefore are not visible on maps with white backgrounds."
msgstr ""

#: ../../en/input/vector/dgn.txt:39
# c3a9c46c13bb4c13932c2d70857c8991
msgid "Using ogrinfo on a single DGN file:"
msgstr ""

#: ../../en/input/vector/dgn.txt:51
# 0a1d5653e7844273a9497ddbf7d7a723
msgid "No geometry/feature type for the layer is identified because it can be multiple types."
msgstr ""

#: ../../en/input/vector/dgn.txt:56
# aadb7ef2ed9b496fbbf9b03ec318615c
msgid "DGN files are not really GIS data files.  They evolved from drafting formats used by computer aided drafting/design (CADD) programs."
msgstr ""

#: ../../en/input/vector/dgn.txt:59
# 054afd9a57294e18b42f47138fa04d92
msgid "They carry a few key attributes which are usually consistent across all DGN files.  Most of the attributes relate to graphical styling of features for map presentation, such as ColorIndex, Style, etc."
msgstr ""

#: ../../en/input/vector/dgn.txt:63
# d1c2e5e52bac4fe6826ff03108a600cf
msgid "Spatial reference system information is not always encoded into DGN files. This can be a major problem when trying to adequately reference the DGN data in another mapping program."
msgstr ""

#: ../../en/input/vector/dgn.txt:67
# 51493e471de147689f2f003d57cd6990
msgid "Measurement units can be a problem.  In some cases the features could be located in kilometres or feet even though it is not obvious from the output of ogrinfo.  Sometimes the only way to identify or correct a problem with units is to open the file in Microstation software."
msgstr ""

#: ../../en/input/vector/dgn.txt:72
#: ../../en/input/vector/sdts.txt:76
# 003c77f233b0481692e56324724f93af
# 6a6496d32c024a54acf235d1d56ec48a
msgid "Using ogrinfo to examine the structure of the file/layer:"
msgstr ""

#: ../../en/input/vector/filegdb.txt:5
# f2f2d34f5d684a3eb753d9fd8d7bdf24
msgid "ESRI File Geodatabase"
msgstr ""

#: ../../en/input/vector/filegdb.txt:7
# ae0f208c7eda4e8d8e259fa40e063e96
msgid "ESRI File Geodatabases exist in a file folder and offer improved performance and size limitations.  For more information see the ESRI `description page`_."
msgstr ""

#: ../../en/input/vector/filegdb.txt:12
# 8586d2a34ff24b62806c8cf2ec9b4401
msgid "Only file geodatabases created by AcrGIS 10.0 and above can be read by GDAL/MapServer."
msgstr ""

#: ../../en/input/vector/filegdb.txt:17
# 593aa18bb93f487a87ee3e766ca7ff37
msgid "File geodatabases are made up of a set of files within a folder. The files are made up of geographic data, attribute data, index files, and lock files.  A better description of the file contents can be found `here <http://webhelp.esri.com/arcgisserver/9.3/java/index.htm#geodatabases/file_ge-516860750.htm>`__."
msgstr ""

#: ../../en/input/vector/filegdb.txt:23
# cba78dadb65e4bca96db7fe040fa198c
msgid "File geodatabase access is available through OGR. See the OGR `driver page <http://www.gdal.org/ogr/drv_filegdb.html>`__ for specific driver information.  The driver is available for GDAL >= 1.9.0."
msgstr ""

#: ../../en/input/vector/filegdb.txt:26
# b19c8ba0dae340bfbfec83929354cd18
msgid "The CONNECTION parameter must be used to point to the name of the file folder, and the DATA parameter should be the name of the spatial table (or OGR layer)."
msgstr ""

#: ../../en/input/vector/filegdb.txt:36
# 53feb4d5c74f4cdab29a99ccbf97594b
msgid "The CONNECTION path is relative to the mapfile (SHAPEPATH is not used here).  Full paths can also be used."
msgstr ""

#: ../../en/input/vector/filegdb.txt:41
# 69fa47b15c884c9eb5eafa26fdea1598
msgid "First you should make sure that your GDAL/OGR build contains the file geodatabase \"FileGDB\" driver, by using the '--formats' command:"
msgstr ""

#: ../../en/input/vector/filegdb.txt:57
# c7c5cb1c19dc4aaf9ecb213655bee261
msgid "If you don't have the driver, see GDAL's `BuildHints <http://trac.osgeo.org/gdal/wiki/FileGDB>`__ page for compiling the driver."
msgstr ""

#: ../../en/input/vector/filegdb.txt:60
# 047456d04f42459bacc472a4d9d00b50
msgid "Once you have the FileGDB driver you are ready to try an ogrinfo command on your database to get a list of spatial tables.  In the example below our folder is named `us_states.gdb`:"
msgstr ""

#: ../../en/input/vector/filegdb.txt:70
# cba9200b489c476183f1cbca21922897
msgid "Now use ogrinfo to get information on the structure of the `statesp020` table:"
msgstr ""

#: ../../en/input/vector/filegdb.txt:97
#: ../../en/input/vector/gpx.txt:107
#: ../../en/input/vector/kml.txt:107
#: ../../en/input/vector/kml.txt:209
#: ../../en/input/vector/pgeo.txt:114
#: ../../en/input/vector/postgis.txt:166
#: ../../en/input/vector/sqlite.txt:123
# ff4bf1b8feb240449d5b0051477a2019
# 1bb905b657b34f56b7a024e27689ae77
# 471e08aa3b1c44d88bd8483c8bce8aec
# 21e31f9ca97342a9992726971c09fd4f
# 956eb8043bc94b7c82d7f45f2b7500e2
# d8365be0389c4c79a8f1cb93625db5cd
# 911c8fa59deb4928aeead5193dbf6824
msgid "Mapfile Example"
msgstr ""

#: ../../en/input/vector/format_types.txt:5
# 68628e355c94494c8420922079b31f21
msgid "Data Format Types"
msgstr ""

#: ../../en/input/vector/format_types.txt:7
# d16d9965ac26475e8674b1b27fada775
msgid "Each type of data is made up of a data source and (one or more) layers. These two definitions apply to MapServer and OGR."
msgstr ""

#: ../../en/input/vector/format_types.txt:10
# 2083ce9f134e4136a284c6713e6a14cc
msgid "**Data Source** - a group of layers stored in a common repository. This may be a file that handles several layers within it, or a folder that has several files."
msgstr ""

#: ../../en/input/vector/format_types.txt:14
# c0f189ccb5574be98b95f951fa3a4b3f
msgid "**Layer** - a sub-set of a data source often containing information in one type of vector format (point, line, polygon)."
msgstr ""

#: ../../en/input/vector/format_types.txt:17
# d24f721bb6114108914078b9aafc8d54
msgid "There are three types of data mapping and GIS data formats. Each type is handled differently. Below are the types and some example formats:"
msgstr ""

#: ../../en/input/vector/format_types.txt:20
# 12792fc1ec78446c88761bb2f149b73a
msgid "File-based- Shapefiles, Microstation Design Files (DGN), GeoTIFF images"
msgstr ""

#: ../../en/input/vector/format_types.txt:21
# 0409523ca10b4202a0b3774fb7ee088b
msgid "Directory-based - ESRI ArcInfo Coverages, US Census TIGER"
msgstr ""

#: ../../en/input/vector/format_types.txt:22
# f39c774dd64241fabf29f819cd3e4ce5
msgid "Database connections - PostGIS, ESRI ArcSDE, MySQL"
msgstr ""

#: ../../en/input/vector/format_types.txt:25
# b0e8cd50ba7247ecafc92a5340375274
msgid "File-based Data"
msgstr ""

#: ../../en/input/vector/format_types.txt:27
# 934c9b411223411191bda0ba4f00ab68
msgid "File-based data consists of one or more files stored in any arbitrary folder. In many cases a single file is used (e.g. DGN) but ESRI Shapefiles, for example, consist of at least 3 files each with a different filename extension: SHP, DBF, SHX. In this case all 3 files are required because they each perform a different task internally."
msgstr ""

#: ../../en/input/vector/format_types.txt:33
# 0b0c40405f47460baa6a27dac57e736f
msgid "Filenames usually serve as the data source name and contain layers that may or may not be obvious from the filename. In Shapefiles, for example, there is one data source per shapefile and one layer which has the same name as that of the file."
msgstr ""

#: ../../en/input/vector/format_types.txt:39
# 46b7d70f4dd0425aa386dc3b9d957195
msgid "Directory-based Data"
msgstr ""

#: ../../en/input/vector/format_types.txt:41
# d7a0f86dd911470b8fb73dd4580feda9
msgid "Directory-based data consists of one or more files stored in a particular way within a parent folder. In some cases (e.g. Coverages) they may also require additional folders in other locations in the file tree in order to be accessed. The directory itself may be the data source. Different files within the directory often represent the layers of data available."
msgstr ""

#: ../../en/input/vector/format_types.txt:47
# a4ca8c34707a4dba8cc2cd84e60f90b1
msgid "For example, ESRI ArcInfo Coverages consist of more than one file with an ADF file extension, within a folder. The PAL.ADF file represents the Polygon data. ARC.ADF holds the arc or line string data. The folder holds the data source and each ADF file is a layer."
msgstr ""

#: ../../en/input/vector/format_types.txt:53
# 87defab26b1040acbea31c8e5337d2e6
msgid "Database Connections"
msgstr ""

#: ../../en/input/vector/format_types.txt:55
# 625e621f8dc749d4a9346700bbbcc46f
msgid "Database Connections are very similar to file and directory-based structures in one respect: they provide geographic coordinate data for MapServer to interpret. That may be oversimplifying what is happening inside MapServer, but in essence all you need is access to the coordinates making up the vector datasets."
msgstr ""

#: ../../en/input/vector/format_types.txt:61
# 751b7842fc2c4355bd809e1ce2fb350a
msgid "Database connections provide a stream of coordinate data that is temporarily stored (e.g. in memory) and read by MapServer to create the map. Other attribute or tabular data may also be required, but the focus of this guide is coordinate data."
msgstr ""

#: ../../en/input/vector/format_types.txt:66
# 2bd8d6ec002542929cc1ecaaa138779b
msgid "One important distinction between databases must be made. The databases discuss here are spatial databases, those which can hold geographic data in its own data type. This is opposed to strictly tabular databases which cannot hold geographic coordinates in the same way. It is possible to store some very simple coordinate data in regular tables, but for anything but the most simple use a spatial database is required. There are spatial extensions to many databases (open source and commercial). One of the most robust is the PostGIS extension to the PostgreSQL database. This database not only allows the storage of geographic data, but also allows the manipulation of that data using SQL commands. The other open source database with spatial capabilities is MySQL."
msgstr ""

#: ../../en/input/vector/format_types.txt:78
# 9b1a3b20bc2d4f51a682662c1087bfc0
msgid "Connections to databases usually consist of the following pieces of connection information:"
msgstr ""

#: ../../en/input/vector/format_types.txt:81
# 8d9cadd53a3f473c8b9fc180d1c76118
msgid "**Host** - Directions to the server or computer hosting the database."
msgstr ""

#: ../../en/input/vector/format_types.txt:83
# d94331b1577544e58483bc28199a7c81
msgid "**Database name** - The name of the database you wish to access that is running on the host."
msgstr ""

#: ../../en/input/vector/format_types.txt:86
# 6d5be866a62744418f576cef01eefdb9
msgid "**User name / passwords** - Access privileges are usually restricted by user."
msgstr ""

#: ../../en/input/vector/format_types.txt:90
# b0fc48c6faaf4117ba907dcdc3c261c9
msgid "Some databases (e.g. Oracle) use a name service identifier that includes both the host and database names."
msgstr ""

#: ../../en/input/vector/format_types.txt:93
# 8d6916ccc6d046f5a2bf16d431cd37ba
msgid "Access to specific pieces of coordinate data usually require:"
msgstr ""

#: ../../en/input/vector/format_types.txt:95
# a4f98d91011d4fbcaa273c1b3d81aa06
msgid "**Table/View name** - The name of the table or view holding the coordinate data."
msgstr ""

#: ../../en/input/vector/format_types.txt:98
# 56149e7447ab44a6964af1869ce9c043
msgid "**Geographic column name** - Where the geometry or coordinates are stored."
msgstr ""

#: ../../en/input/vector/gml.txt:5
# 0794b5c5832d4624add7f309ba37744a
msgid "GML"
msgstr ""

#: ../../en/input/vector/gml.txt:7
# f2a75e81a15443b78cb28971291f1108
msgid "Also known as Geographic Markup Language and GML/XML. GML is a text-based, XML format that can represent vector and attribute data. This is an Open Geospatial Consortium specification for data interchange.  More information is available at  http://www.opengeospatial.org/standards/gml"
msgstr ""

#: ../../en/input/vector/gml.txt:11
# a0e97f382d4640959ea5ab675c8ce639
msgid "GML files are usually a single text file with a GML filename extension. Some may use XML as the filename extension:"
msgstr ""

#: ../../en/input/vector/gml.txt:18
# 9f4565ae103e42bd931be3c2e9b621ff
msgid "XML schema documents often accompany GML files that have been translated from some other format (e.g. using the ogr2ogr utility)."
msgstr ""

#: ../../en/input/vector/gml.txt:21
# 42e8bff99c364fee9891c455e6e0e34a
msgid "GML uses sets of nested tags to define attributes and geometry coordinates.  Example of text in a GML file:"
msgstr ""

#: ../../en/input/vector/gml.txt:45
# 6b9931dde6a84d839ac78f9b25ace2d4
msgid "GML access is available in MapServer through OGR.  More information on OGR GML support is available at http://www.gdal.org/ogr/drv_gml.html"
msgstr ""

#: ../../en/input/vector/gml.txt:49
# f2decad09e3b41d5b6815860f2c1db69
msgid "The path to the GML file is required, including file extension.  There can be multiple layers in a GML file, including multiple feature types."
msgstr ""

#: ../../en/input/vector/gml.txt:54
# 5b065e5049c440a3bf7e5c20cfa923a7
msgid "Using ogrinfo on a single GML file:"
msgstr ""

#: ../../en/input/vector/gml.txt:64
# 3fcd7cc675164a40826c8f0e964b115e
msgid "Using ogrinfo to examine the structure of one layer:"
msgstr ""

#: ../../en/input/vector/gpx.txt:5
# 910e2d8b073948ce8efe8f662d080f10
msgid "GPS Exchange Format (GPX)"
msgstr ""

#: ../../en/input/vector/gpx.txt:7
# 345a2de96c144c72b95a9fa8322a6fd1
msgid "GPX (the GPS Exchange Format) is a light-weight XML data format containing GPS data (waypoints, routes, and tracks).  For more information see the official `GPX site`_."
msgstr ""

#: ../../en/input/vector/gpx.txt:16
# 9e64e7ba07a44aaba43e57b67b068c8c
msgid "All waypoints, routes, and tracks are stored in a single .gpx file."
msgstr ""

#: ../../en/input/vector/gpx.txt:21
# ba989f8d8fd844b2a9b19bd45d846bca
msgid "GPX access is available through OGR. See the OGR `driver page`_ for specific driver information."
msgstr ""

#: ../../en/input/vector/gpx.txt:23
# 28c7d4fb8be84524908d267cb8152694
msgid "A relative path to the .gpx file can be used in the mapfile LAYER's CONNECTION string."
msgstr ""

#: ../../en/input/vector/gpx.txt:26
# 34c41759605d4ec19a5c14cc3d2a06fa
msgid "the \"tracks\" feature type will usually be the track line"
msgstr ""

#: ../../en/input/vector/gpx.txt:27
# 705959d41829407ea5cd3b62cd8700e0
msgid "the \"track_points\" feature type will usually be the points that make up the track line"
msgstr ""

#: ../../en/input/vector/gpx.txt:36
# 162a6a2b836c4185b10512894e84cd46
msgid "First you should make sure that your GDAL/OGR build contains the \"GPX\" driver, by using the '--formats' command:"
msgstr ""

#: ../../en/input/vector/gpx.txt:50
#: ../../en/input/vector/kml.txt:62
#: ../../en/input/vector/pgeo.txt:55
#: ../../en/input/vector/postgis.txt:126
# 60545297262a4d848b8638b2bf3aad3b
# 39484ea6878c4c0fb60caa72483ff5b9
# 3d7740dd410a4626abf704cbf82cae5c
# 7ddb7d85f2f6482d8f7c8e30dcc8f9d8
msgid "If you don't have the driver, you might want to try the `FWTools`_ or `MS4W`_ packages, which include the driver."
msgstr ""

#: ../../en/input/vector/gpx.txt:56
# 1a23f5f889a64d71b2eb06bcf612554c
msgid "Once you have the GPX driver you are ready to try an ogrinfo command on your file to get a list of feature types:"
msgstr ""

#: ../../en/input/vector/gpx.txt:70
# 74952fdd64684b4cb312e04342fd9270
msgid "Now use ogrinfo to get information on one of the feature types:"
msgstr ""

#: ../../en/input/vector/gpx.txt:109
# 50436b1b93fd47ef8e8f084847787176
msgid "Since you have confirmed that OGR can read your GPX file, now you can create a MapServer layer:"
msgstr ""

#: ../../en/input/vector/index.txt:5
# 8ae873fa17154cf495b8e0cffcce83a2
msgid "Vector Data"
msgstr ""

#: ../../en/input/vector/index.txt:7
#: ../../en/input/vector/mysql.txt:9
#: ../../en/input/vector/ogr.txt:7
# 0c95b4ba3c0c45c6859a9faf04f8e458
# 59aa5acd45bf4384a0b4f9de9d565388
# e80ff43117e04f409af0748f1aaf6829
msgid "Jeff McKenna"
msgstr ""

#: ../../en/input/vector/index.txt:8
#: ../../en/input/vector/mysql.txt:10
#: ../../en/input/vector/ogr.txt:8
# 330b594c7f1241eb8d316311806b7f32
# c40b68bcd05f4347905f0e940b90bd91
# d27faffb8a6e4ccaab6c3b9036000e87
msgid "jmckenna at gatewaygeomatics.com"
msgstr ""

#: ../../en/input/vector/index.txt:9
# c0124d67afc44ce38b822ffcb34edc90
msgid "Tyler Mitchell"
msgstr ""

#: ../../en/input/vector/index.txt:10
# 5310b7f0f94a49e687a35c05a1f9e724
msgid "tmitchell at osgeo.org"
msgstr ""

#: ../../en/input/vector/index.txt:11
# bc5ed24ead114a83b7f4e2fbaa6ace84
msgid "2011-07-18"
msgstr ""

#: ../../en/input/vector/index.txt:13
# ed1d5c48d90d4a5aa509509b7907da42
msgid "This work is licensed under the Creative Commons Attribution-ShareAlike License. To view a copy of this license, visit: http://creativecommons.org/licenses/by-sa/2.0/ca/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA."
msgstr ""

#: ../../en/input/vector/index.txt:18
# b191692e5fdd4d6dbe934c6f93c39919
msgid "What is vector data?  This quote from is a good description of what vector data is:"
msgstr ""

#: ../../en/input/vector/index.txt:22
# 41f744b3ed924f6ba79aef5fe75006aa
msgid "Vector: \"An abstraction of the real world where positional data is represented in the form of coordinates.  In vector data, the basic units of spatial information are points, lines and polygons.  Each of these units is composed simply as a series of one or more coordinate points. For example, a line is a collection of related points, and a polygon is a collection of related lines.  Vector images are defined mathematically as a series of points joined by lines.  Vector-based drawings are resolution independent.  This means that they appear at the maximum resolution of the output device, such as a printer or monitor.  Each object is self-contained, with properties such as color, shape, outline, size, and position on the screen.\""
msgstr ""

#: ../../en/input/vector/index.txt:34
# fbcf1cad95104b8eb86147ae997b8e37
msgid "From: http://www8.nos.noaa.gov/coris_glossary/index.aspx?letter=v"
msgstr ""

#: ../../en/input/vector/index.txt:37
# 8e2e842b962d4993afe3328f5afe0912
msgid "The rest of this document is the data format guide. This guide is structured to show the fundamentals of each MapServer supported data format. Each section discusses one format, ranging from one to several pages in length. The sections typically start with a summary of the most important information about the format, followed by examples of file listings, connection methods, ogrinfo usage and MapServer map file syntax examples."
msgstr ""

#: ../../en/input/vector/index.txt:44
# 20fd844acfe14a42a393d8745906f0af
msgid "Each section has been designed to stand alone, so you may notice that certain warnings and comments are repeated or redundant. This is intentional. Each format is presented in rough order of popular use, based on a survey of the MapServer community."
msgstr ""

#: ../../en/input/vector/index.txt:49
# 2ce05f0d5e2d46fea5bc4e06d146eb51
msgid "The following formats are included:"
msgstr ""

#: ../../en/input/vector/inline.txt:5
# 8a50ba3a0af64e3daa671f836645e9ed
msgid "Inline"
msgstr ""

#: ../../en/input/vector/inline.txt:7
# 202dcb91f0ba446ab14dd89a0663d9ca
msgid "Inline features refer to coordinates entered directly into the map file.  They are not a file or database format and do not require any DATA or CONNECTION parameters.  Instead they use a FEATURE section to define the coordinates."
msgstr ""

#: ../../en/input/vector/inline.txt:12
# 82b3e11a988a4cc18befc80e48e05f97
msgid "Inline features can be used to define points, lines and polygons as if taken from an external file.  This requires direct entry of coordinate pairs in the map file using a particular syntax."
msgstr ""

#: ../../en/input/vector/inline.txt:19
# d170c124e3304a7790518052a57f612a
msgid "This is a native MapServer option that doesn't use any external libraries to support it."
msgstr ""

#: ../../en/input/vector/inline.txt:23
#: ../../en/input/vector/mapinfo.txt:82
#: ../../en/input/vector/wfs.txt:84
# 50ceb4a41fa14896b107930bef76c8f8
# 897a926663644207a9652b8fae453054
# 64e2cd69cc544c85852c235613594e74
msgid "Map File Example"
msgstr ""

#: ../../en/input/vector/inline.txt:26
# f08894b728a645888655c51db71f2244
msgid "Points"
msgstr ""

#: ../../en/input/vector/inline.txt:28
# efc88f0da05646a287c4f302b6e35b93
msgid "Each FEATURE..END section defines a feature."
msgstr ""

#: ../../en/input/vector/inline.txt:29
# 5e0c645a901c4f58be894372df01411b
msgid "Multiple points can be defined in a FEATURE section.  If multiple points are defined in the same layer, they will have the same CLASS settings, e.g. for colours and styles."
msgstr ""

#: ../../en/input/vector/inline.txt:32
# e7743f0856d44df490de4d9717f6322c
msgid "Coordinates are entered in the units set in the layer's projection.  In this case it is assuming the map file projection is using decimal degrees."
msgstr ""

#: ../../en/input/vector/inline.txt:66
# 1ffe6f186d4641c2be8ea424f73ba6e5
msgid "Lines"
msgstr ""

#: ../../en/input/vector/inline.txt:68
# 483eb7f3c1f64a5a856376a333a6a272
msgid "Lines are simply a list of points strung together, but the layer must be TYPE LINE instead of TYPE POINT."
msgstr ""

#: ../../en/input/vector/inline.txt:98
# 31d4cbd2551940998ce035ba1be787da
msgid "Polygons"
msgstr ""

#: ../../en/input/vector/inline.txt:100
# 9893b2a84a414cb0aceb6534bfc7badd
msgid "Polygons are the same as the line example, just a list of points. They require the TYPE POLYGON parameter. Polygons also require the final coordinate pair to be the same as the first, making it a closed polygon."
msgstr ""

#: ../../en/input/vector/kml.txt:5
# 568a8708fa264bd596f74cb3c41e38da
msgid "KML - Keyhole Markup Language"
msgstr ""

#: ../../en/input/vector/kml.txt:11
# d1503b9bb3354247bb1fe056afc12900
msgid "Keyhole Markup Language (KML) is an XML-based language for managing the display of 3D geospatial data.  KML is a standard maintained by the Open Geospatial Consoritum (OGC)."
msgstr ""

#: ../../en/input/vector/kml.txt:16
# 4deda3f66c034800971a8d4d079f430c
msgid "Links to KML-Related Information"
msgstr ""

#: ../../en/input/vector/kml.txt:18
# 32bce40b01684d52ba29704fbaf5f532
msgid "Google's `KML Reference <http://code.google.com/apis/kml/documentation/kmlreference.html>`__"
msgstr ""

#: ../../en/input/vector/kml.txt:19
# 0f3b7047c0474332a70c21649de4fb89
msgid "OGC's `KML Specification <http://www.opengeospatial.org/standards/kml>`__"
msgstr ""

#: ../../en/input/vector/kml.txt:20
# 245fba3f86364a4c9b69a1199e0ad9d7
msgid "`KML Validator <http://feedvalidator.org/>`__"
msgstr ""

#: ../../en/input/vector/kml.txt:21
# ca4679c78c834619b3fac1055e3df244
msgid "`KML Validator <http://www.kmlvalidator.com/home.htm>`__ (against OGC KML 2.2)"
msgstr ""

#: ../../en/input/vector/kml.txt:26
# 206bf9148a4e4205961eadd5df4b6807
msgid "KML access in MapServer is available through OGR. See the OGR `driver page`_ for specific driver information.  Read support was initially added to GDAL/OGR version 1.5.0.  A more complete KML reader was added to GDAL/OGR in version 1.8.0, through the `libKML driver <http://www.gdal.org/ogr/drv_libkml.html>`__ (including the ability to read multigeometry, and KMZ files)."
msgstr ""

#: ../../en/input/vector/kml.txt:34
# 109be78564bc4c02a1282a3f862b27a3
msgid "The CONNECTION parameter must include the kml or kmz extension, and the DATA parameter should be the name of the layer."
msgstr ""

#: ../../en/input/vector/kml.txt:44
# 76cf75d7027b45028e7f5290df74cedc
msgid "Example 1: Displaying a .KML file"
msgstr ""

#: ../../en/input/vector/kml.txt:47
#: ../../en/input/vector/kml.txt:140
# c926dc5504dd457488f657dffc7876d3
# 4335bd64f0664a9d8ad92ff013658395
msgid "OGRINFO"
msgstr ""

#: ../../en/input/vector/kml.txt:49
# e1f6a63ecdad4330ba7d068f70110a8d
msgid "First you should make sure that your GDAL/OGR build contains the \"KML\" driver, by using the '--formats' command:"
msgstr ""

#: ../../en/input/vector/kml.txt:68
# 865324fec26b4bb5b609fba77723f587
msgid "Once you have the KML driver you are ready to try an ogrinfo command on your file to get a list of available layers:"
msgstr ""

#: ../../en/input/vector/kml.txt:78
#: ../../en/input/vector/kml.txt:174
# 435d46d24bd046c9a7acef7d05a838c6
# 5906be990eea4ab596a80b96b816ce76
msgid "Now use ogrinfo to get information on the structure of the layer:"
msgstr ""

#: ../../en/input/vector/kml.txt:137
# 261bae2c74734b528273f92c1a7ded4c
msgid "Example 2: Displaying a .KMZ file"
msgstr ""

#: ../../en/input/vector/kml.txt:142
# 7319536e92a84ac39bf03e99bca453f1
msgid "First you should make sure that your GDAL/OGR build contains the \"LIBKML\" driver, by using the '--formats' command:"
msgstr ""

#: ../../en/input/vector/kml.txt:156
# 336a404e50db4ad096b59ea1252c6ec0
msgid "If you don't have the driver, you might want to try the `FWTools`_ or `MS4W`_ packages, which include the driver.  Or you can follow the `compiling notes <http://trac.osgeo.org/gdal/wiki/LibKML>`__ for libKML and GDAL/OGR."
msgstr ""

#: ../../en/input/vector/kml.txt:164
# c9ceaa313fc94961822c260955fe4e7e
msgid "Once you have the LIBKML driver you are ready to try an ogrinfo command on your file to get a list of available layers:"
msgstr ""

#: ../../en/input/vector/mapinfo.txt:5
# da024dbf26d04f0fba9c745417fe956a
msgid "MapInfo"
msgstr ""

#: ../../en/input/vector/mapinfo.txt:10
# 875416d220eb44acbd939feae6e50194
msgid "The following files are also associated with .TAB files: .DAT, .ID, .MAP. An example is::"
msgstr ""

#: ../../en/input/vector/mapinfo.txt:18
# 7243009983f94eeea3c64c18dbf244e8
msgid "The term MID/MIF refers to files with .MID and .MIF extension."
msgstr ""

#: ../../en/input/vector/mapinfo.txt:23
# cdf8180719d74663b46351ccc324a6f5
msgid "TAB and MID/MIF access is available in MapServer through OGR."
msgstr ""

#: ../../en/input/vector/mapinfo.txt:27
# a54a5efbcc214323a53d9e87a23b34ab
msgid "The path to the (\\*.tab or \\*.mif) file is required, and the file extension is needed."
msgstr ""

#: ../../en/input/vector/mapinfo.txt:30
# 21b321f33aa740cf8c94bdb3160762fe
msgid "The path may be relative to the SHAPEPATH"
msgstr ""

#: ../../en/input/vector/mapinfo.txt:32
# 783726bdb75f4e718a29611120740310
msgid "MapInfo files already contain styling information.  This styling information can be used optionally by specifying the STYLEITEM \"AUTO\" parameter in the LAYER object of the map file."
msgstr ""

#: ../../en/input/vector/mapinfo.txt:38
# 6d672b818af44a5daadd5b9860a089e0
msgid "If you use STYLEITEM \"AUTO\" you must have an empty class in the layer."
msgstr ""

#: ../../en/input/vector/mapinfo.txt:43
# f93b93528303441787e13c3f225e2150
msgid "Using ogrinfo on a single TAB file"
msgstr ""

#: ../../en/input/vector/mapinfo.txt:53
# b3ffabff3819497facfbcb46be521d6c
msgid "Using ogrinfo to examine the structure of the file/layer"
msgstr ""

#: ../../en/input/vector/mssql.txt:5
# e83e444ece5b410d81c2e0c26ca7c8a1
msgid "MSSQL"
msgstr ""

#: ../../en/input/vector/mssql.txt:7
# 8e46297934974391a8a41bef5d4be7db
msgid "Tamas Szekeres"
msgstr ""

#: ../../en/input/vector/mssql.txt:8
# 0abdf87ac4954313b0b0cf881927dc18
msgid "szekerest at gmail.com"
msgstr ""

#: ../../en/input/vector/mssql.txt:9
# a5b4da0c4d2a4ec697762e924d6cce08
msgid "2010-10-01"
msgstr ""

#: ../../en/input/vector/mssql.txt:19
# d89050c5709f4e02bd7a6e000a449791
msgid "Microsoft SQL Server 2008+ supports storing spatial data by using the built in geometry/geography data types. MapServer supports a driver to access these tables containing spatial columns, which is compiled as a plugin (msplugin_mssql2008.dll)."
msgstr ""

#: ../../en/input/vector/mssql.txt:24
# 59aba6c6537e490ebf02d67fdde2c503
msgid "Creating spatial data tables in MSSQL 2008"
msgstr ""

#: ../../en/input/vector/mssql.txt:26
# 72eaaad671ee41d6bc6faace39e29dec
msgid "There are several ways to create spatial data tables in MSSQL 2008. Having an existing data you can easily upload that to an MSSQL table by using the `ogr2ogr <http://www.gdal.org/ogr2ogr>`__ commandline tool and the OGR's `MSSQL Spatial driver <http://www.gdal.org/ogr/drv_mssqlspatial.html>`__"
msgstr ""

#: ../../en/input/vector/mssql.txt:31
# 842b2128a3d6442996ad4617c6fe96f2
msgid "Connecting to Spatial Data in MSSQL 2008"
msgstr ""

#: ../../en/input/vector/mssql.txt:33
# 52fba8d4a7664ee3a42bc7df92e6eab9
msgid "In order to connect to the MSSQL 2008 spatial database you should set up a valid connection string to the database like the following examples:"
msgstr ""

#: ../../en/input/vector/mssql.txt:49
#: ../../en/input/vector/mysql.txt:101
#: ../../en/input/vector/mysql.txt:203
# 0061aa2b35274e548015a398b5d860b4
# 5eed9aa0eab64a159bed628f87d35e68
# 42ad3be802d8468fb8a0c4e542aa79ff
msgid "Create MapServer Layer"
msgstr ""

#: ../../en/input/vector/mssql.txt:51
# 40e647ddca8d44ffa7e3851ed98bbcd1
msgid "Once the connection can be established to the server the layer can be configured to access MSSQL2008 as follows:"
msgstr ""

#: ../../en/input/vector/mssql.txt:67
# 522a5cf54099458590bc9bc997cf2597
msgid "The DATA parameter is used to perform the SQL select statement to access your table in MSSQL. The geometry column is required in the select statement; in the above example the ogr_geometry column is the geometry column in the rivers table. The table should also have an unique column (ogr_fid) which is provided for random access to the features in the feature query operations."
msgstr ""

#: ../../en/input/vector/mssql.txt:72
# 922961e0f15b4176a3b179d377ad4173
msgid "The DATA section should also contain the spatial reference id (SRID) of the features in the data table The SRID is used when specifying the search shapes during the intersect operations which should match with the SRID of the features otherwise no features are returned in a particular query. if you omit specifying the SRID value in the DATA section the diver will use SRID=0 when defining the search shapes."
msgstr ""

#: ../../en/input/vector/mssql.txt:79
# 06274342425741dd87afbc0a88532047
msgid "Selecting the type of the geometry column"
msgstr ""

#: ../../en/input/vector/mssql.txt:81
# 8456cbd39f754492824febb16cd89bc5
msgid "For the geometry columns MSSQL supports 2 data types: \"geometry\" and \"geography\". By default the driver considers the type of the geometry column is \"geometry\". In case if the type of the geometry column is \"geography\" we must specify the data type in the DATA section explicitly, like:"
msgstr ""

#: ../../en/input/vector/mssql.txt:91
# 51c3a81c6e454a1d8ab7064e3c846543
msgid "The expected location on the plugin dll"
msgstr ""

#: ../../en/input/vector/mssql.txt:93
# 60d46a6d8adf4591b3a19a88ba14572f
msgid "On Windows platforms the DLLs needed by the program are searched for in the following order:"
msgstr ""

#: ../../en/input/vector/mssql.txt:95
# 9fc7ffeac8ce43c282c23996d4296534
msgid "The directory from which the application loaded."
msgstr ""

#: ../../en/input/vector/mssql.txt:97
# 333665110af1481588d0d2cf8b44638b
msgid "The current directory."
msgstr ""

#: ../../en/input/vector/mssql.txt:99
# 21eadc4d866e405ea26c4ed646ca22b9
msgid "The system directory. Use the `GetSystemDirectory <http://msdn.microsoft.com/en-us/library/ms724373.aspx>`__ function to get the path of this directory."
msgstr ""

#: ../../en/input/vector/mssql.txt:102
# fd172f345417419a9f8d526d8ae93d50
msgid "The 16-bit system directory."
msgstr ""

#: ../../en/input/vector/mssql.txt:104
# f2f482f53ee140e2a5ef957790d6b07e
msgid "The Windows directory. Use the `GetWindowsDirectory <http://msdn.microsoft.com/en-us/library/ms724454.aspx>`__ function to get the path of this directory."
msgstr ""

#: ../../en/input/vector/mssql.txt:107
# 0db52f8eba224392b9dbe590d804e2b0
msgid "The directories that are listed in the PATH environment variable."
msgstr ""

#: ../../en/input/vector/mssql.txt:111
# 4e7cf9e95a614f408f00b6cf8568fcf5
msgid "Using spatial indexes"
msgstr ""

#: ../../en/input/vector/mssql.txt:113
# 77b89a3587db481b92b4c490e6baab20
msgid "In order to speed up the access to the features a spatial index should be created to the geometry column which could easily be done with the OGR MSSQL Spatial driver like:"
msgstr ""

#: ../../en/input/vector/mssql.txt:120
# 2c8978a3230b482d9f19656ebbe1610d
msgid "In general we can safely rely on the query optimizer to select the most appropriate index in the sql query operations. In some cases - however - we should force the optimizer to use the spatial index by specifying the index hint in the DATA section like:"
msgstr ""

#: ../../en/input/vector/mssql.txt:129
# 1304c001636f47fdb0379b4eb13c7f16
msgid "Layer Processing Options"
msgstr ""

#: ../../en/input/vector/mssql.txt:131
# e5f9e61ed87f4f47be97e6ea6fe3db93
msgid "We can control the behaviour of the MSSQL driver by using the following PROCESSING options:"
msgstr ""

#: ../../en/input/vector/mssql.txt:133
# 6b61ff060fcd427a979e52e83d5d0339
msgid "**CLOSE_CONNECTION=DEFER** - This is where you can enable connection pooling for certain layer types. Connection pooling will allow MapServer to share the handle to an open database or layer connection throughout a single map draw process."
msgstr ""

#: ../../en/input/vector/mssql.txt:138
# f76d49fcf2614436bdd01e3c80516de2
msgid "Obtaining binaries containing the MSSQL plugin dll"
msgstr ""

#: ../../en/input/vector/mssql.txt:140
# a8cd2e56dcf34f3baca474fb2f0f2f72
msgid "Currently the following binary distributions contain msplugin_mssql2008.dll"
msgstr ""

#: ../../en/input/vector/mssql.txt:142
# 027c75fea5404546ae4511862a28a8b5
msgid "`MapServer and GDAL binary and SDK packages <http://vbkto.dyndns.org/sdk/>`__"
msgstr ""

#: ../../en/input/vector/mssql.txt:143
# 2cb4fcdd68284aa4ae05dfa89e1c6e63
msgid "`MS4W distributions <http://www.maptools.org/ms4w/>`__"
msgstr ""

#: ../../en/input/vector/mssql.txt:147
#: ../../en/input/vector/mysql.txt:231
# 9aa1b03642c3430ab4fb039e20ff7a1e
# 81f7b127dccf4377b45f05263aa94f1e
msgid "More Information"
msgstr ""

#: ../../en/input/vector/mssql.txt:149
# 34c48850d98b4c089ec8b26ddfb373bf
msgid "`OGR MSSQL Spatial driver page <http://www.gdal.org/ogr/drv_mssqlspatial.html>`__ (describes the OGR MSSQL support)"
msgstr ""

#: ../../en/input/vector/mssql.txt:150
# a93eaefaafb047bc9492a36c0061a5c2
msgid "`ogr2ogr application <http://www.gdal.org/ogr2ogr>`__ (describes the ogr2ogr commandline application)"
msgstr ""

#: ../../en/input/vector/mssql.txt:151
#: ../../en/input/vector/mysql.txt:234
# d7c630017fba47aaaeb03d35d85e3a81
# cde0e247fc854ac58ead28be6a318451
msgid ":ref:`vector` (MapServer Vector Data Access Guide)"
msgstr ""

#: ../../en/input/vector/mysql.txt:7
# 44d394725d2148d59bd7cc025d544ad2
msgid "David Fawcett"
msgstr ""

#: ../../en/input/vector/mysql.txt:8
# 9ba25c39b82e43d4992e15d3a5c0983b
msgid "david.fawcett at moea.state.mn.us"
msgstr ""

#: ../../en/input/vector/mysql.txt:11
# dffbf694b5a642b9a4fc88f221046a2f
msgid "2010-07-29"
msgstr ""

#: ../../en/input/vector/mysql.txt:21
# 6ed1eef2c3774e72a3fe4efa3dc8df0a
msgid "The following methods connect to MySQL through OGR's `MySQL driver <http://www.gdal.org/ogr/drv_mysql.html>`__, thus avoiding the need to set up an ODBC connection."
msgstr ""

#: ../../en/input/vector/mysql.txt:25
# cae03c6f648f494fb79c5eeb01297d09
msgid "Connecting to Spatial Data in MySQL"
msgstr ""

#: ../../en/input/vector/mysql.txt:27
# dbb8eb3841634613bae27ea14f5ddd79
msgid "This section describes how to display a spatial MySQL table (meaning that the table has a column of type geometry) in MapServer.  OGR's `MySQL driver <http://www.gdal.org/ogr/drv_mysql.html>`__ was expanded in OGR version 1.3.2 to support access to MySQL spatial tables."
msgstr ""

#: ../../en/input/vector/mysql.txt:32
#: ../../en/input/vector/mysql.txt:145
# bd3763ac0b4c4dffaf961d57c84f4a7b
# d34483bb47994c08a94b9b1b837aae88
msgid "Requirements"
msgstr ""

#: ../../en/input/vector/mysql.txt:34
# d227d669158249b9a3fdc60cc1a7c167
msgid "MapServer compiled with OGR support"
msgstr ""

#: ../../en/input/vector/mysql.txt:35
# efc65133f1dc434dadd1a7e9ef995272
msgid "OGR/GDAL version 1.3.2 or more recent compiled with MySQL support"
msgstr ""

#: ../../en/input/vector/mysql.txt:38
# 43bf6ec7b1b74088956fe4eb9832530d
msgid "Verify MySQL Support in OGR Build"
msgstr ""

#: ../../en/input/vector/mysql.txt:40
# cbdae25ec9294aeaa135c4d966d15f18
msgid "You can verify that your local build of OGR contains MySQL support by using the ogrinfo commandline utility, and making sure that \"MySQL\" is returned:"
msgstr ""

#: ../../en/input/vector/mysql.txt:56
#: ../../en/input/vector/mysql.txt:177
# 80ee2d3b8c6a4758a0a4762f690f2107
# 5c2aef77f9044bc58461b3a8df56ad9a
msgid "Test Connection with ogrinfo"
msgstr ""

#: ../../en/input/vector/mysql.txt:58
# 5555d58140d2418691c57a88eeecd9eb
msgid "MySQL connection strings in OGR are in the following format:"
msgstr ""

#: ../../en/input/vector/mysql.txt:64
# 6ec9bdce067d400b82e1e14db9925946
msgid "Therefore an example ogrinfo command would be:"
msgstr ""

#: ../../en/input/vector/mysql.txt:70
# 53db9950d5de4edd9d18a6023601663b
msgid "which should return a list of all of your tables in the 'test' database:"
msgstr ""

#: ../../en/input/vector/mysql.txt:78
# 4d58e0c1953f411d8c1ca93691536690
msgid "and you can return a summary of the MySQL spatial layer:"
msgstr ""

#: ../../en/input/vector/mysql.txt:131
# a5a78e6ef52c42e2a3e63fcec4da7ba9
msgid "The DATA parameter is used to perform the SQL select statement to access your table in MySQL. The geometry column is required in the select statement; in the above example the `SHAPE` column is the geometry column in the `province` table."
msgstr ""

#: ../../en/input/vector/mysql.txt:136
# 3c667bf0ff89485ba8b76e4069b887f1
msgid "Connecting to non-Spatial Data in MySQL"
msgstr ""

#: ../../en/input/vector/mysql.txt:138
# 3d42b76ec66c45668de14591d9f82f77
msgid "This section describes how to display a non-spatial MySQL table (meaning the table does not have a column of type geometry) in MapServer."
msgstr ""

#: ../../en/input/vector/mysql.txt:141
# c7dce83fd89745019e887d94ab46ecaa
msgid "Support for this functionality is found in GDAL/OGR 1.2.6 and older on Windows and GDAL/OGR 1.3.2 on Linux."
msgstr ""

#: ../../en/input/vector/mysql.txt:147
# 847df3e8cf544fa7a661ddc95be77421
msgid "MySQL database containing a table with fields containing x and y coordinates"
msgstr ""

#: ../../en/input/vector/mysql.txt:148
# d7ca7b74822e4423b4e5dda7a4182d8f
msgid ".ovf file, a small xml file you will create"
msgstr ""

#: ../../en/input/vector/mysql.txt:149
# 56974eff3baa403a88bbf4a6ba1cdb80
msgid "MapServer compiled with OGR version supporting this functinality"
msgstr ""

#: ../../en/input/vector/mysql.txt:152
# 70f33ce9e1ca4e3991d5ef8d9ab4c5d8
msgid "Create .ovf file"
msgstr ""

#: ../../en/input/vector/mysql.txt:154
# 589b1da7b63b4531bac8145605a0cf91
msgid "Here is the .ovf file named aqidata.ovf"
msgstr ""

#: ../../en/input/vector/mysql.txt:167
# 57b522538d1148ad8981f29c5e1ac13f
msgid "If you look at the connection string in <SrcDataSource>"
msgstr ""

#: ../../en/input/vector/mysql.txt:169
# e1153a2b36f04e07ae5e1afc226f351f
msgid "The MySQL database name is 'aqiTest'"
msgstr ""

#: ../../en/input/vector/mysql.txt:170
# 23d2d9f3298c43588e0f9e5b144616eb
msgid "'testdata' is the table containing the coordinate data"
msgstr ""

#: ../../en/input/vector/mysql.txt:171
# 810616f6efe94011b0c334044d1e4023
msgid "host and port are for MySQL server"
msgstr ""

#: ../../en/input/vector/mysql.txt:173
# 3cc14e671e3f449bb326827cf155378c
msgid "Use the GeometryField element to tell OGR which fields store the x and y coordinate data. Mine are simply named x and y."
msgstr ""

#: ../../en/input/vector/mysql.txt:183
# f3ff69c63583480487c05d8410672a33
msgid "ogrinfo returns"
msgstr ""

#: ../../en/input/vector/mysql.txt:193
# 8beb4cdea0f9449aae5010bdea268f80
msgid "*Don't worry about the error, this is just telling you that it is a read-only driver. If it really bugs you, call ogrinfo with the -ro (read only) flag.*"
msgstr ""

#: ../../en/input/vector/mysql.txt:196
# e4498675b39b4716b4fd85cdd2c491b0
msgid "To see the actual data"
msgstr ""

#: ../../en/input/vector/mysql.txt:224
# c313e34ea41f48d18ca9c7b8a5f230c4
msgid "DATA in the LAYER definition should be the same as the name attribute of the OGRVRTLayer element in the ovf file."
msgstr ""

#: ../../en/input/vector/mysql.txt:227
# f0bfe3d967424b339dba15349f318a62
msgid "*For this to draw, you need to have a SYMBOLSET defined in your mapfile and have a symbol called 'circle' in your symbols.sym file.*"
msgstr ""

#: ../../en/input/vector/mysql.txt:233
# 707aa7754f3c493ca56bb04f196616a3
msgid ":ref:`ogr` (MapServer OGR document)"
msgstr ""

#: ../../en/input/vector/mysql.txt:235
# 6b82c2b0bd5a4ac9bf5ee7ade7b56cd4
msgid "`MySQL wiki page <http://trac.osgeo.org/mapserver/wiki/MySQL>`__ (describes the deprecated mygis support)"
msgstr ""

#: ../../en/input/vector/ntf.txt:5
# 32ec9404930942ff87e470c81ecb4b12
msgid "NTF"
msgstr ""

#: ../../en/input/vector/ntf.txt:7
# bd34abba7b8b4adab3457ebd3966ccfd
msgid "NTF files are mostly used by the United Kingdom Ordnance Survey (OS). For more on the Ordnance Survey, see their website at: http://www.ordnancesurvey.co.uk/oswebsite/"
msgstr ""

#: ../../en/input/vector/ntf.txt:13
# 1bd5e6d9c29544dbb08340a3c2e1a293
msgid "NTF files have an NTF extension."
msgstr ""

#: ../../en/input/vector/ntf.txt:18
# 4aa8df940c304f029b50f59c17872e35
msgid "NTF access requires OGR."
msgstr ""

#: ../../en/input/vector/ntf.txt:19
# 38d1895cdbd24fc5a1e1b4d559228ace
msgid "The path to the NTF file is required in the CONNECTION string. It may be relative to the SHAPEPATH setting in the map file or the full path."
msgstr ""

#: ../../en/input/vector/ntf.txt:22
# 53e06a8b588243debe1f8162e23f7d23
msgid "The DATA parameter is used to specify the layer to use"
msgstr ""

#: ../../en/input/vector/ntf.txt:27
# 5da9fbf5165645efaea8b72710fcdf82
msgid "Using ogrinfo on an NTF file to retrieve layer names:"
msgstr ""

#: ../../en/input/vector/ntf.txt:41
# 6a83e627f066431ea492ab796264193b
msgid "Using ogrinfo to examine the structure of an NTF layer:"
msgstr ""

#: ../../en/input/vector/ogr.txt:5
# 0686ff07f87c45b3a816576a4022b659
msgid "OGR"
msgstr ""

#: ../../en/input/vector/ogr.txt:9
# afd9423d65664db3bde83872e9cdb7a8
msgid "2010-10-16"
msgstr ""

#: ../../en/input/vector/ogr.txt:19
# dd25bca6d237491595cbc79a19d953e5
msgid "Starting with version 3.5, MapServer included the ability to access vector data sets in formats other than Shapefile in their native format using the OGR library. The following document describes the process for implementing OGR support within MapServer applications."
msgstr ""

#: ../../en/input/vector/ogr.txt:26
# 48c0931e186545dbb78626a55abf7181
msgid "Experimental OGR support was included in MapServer version 3.4 but this initial implementation had some limitations and is not covered in this document."
msgstr ""

#: ../../en/input/vector/ogr.txt:30
# ae72f0a05d224aaf87fad5ba8a6c0087
msgid "This document assumes that you are already familiar with certain aspects of MapServer:"
msgstr ""

#: ../../en/input/vector/ogr.txt:33
# 4896630914404f29b64b202b9a486530
msgid "MapServer application development and especially setting up :ref:`.map files <mapfile>`."
msgstr ""

#: ../../en/input/vector/ogr.txt:36
# b41a7ef21aa44259ba6cf423886d6037
msgid "Some compilation skills if you don't have ready access to a pre-compiled installation and need to compile your own copy of MapServer with OGR support."
msgstr ""

#: ../../en/input/vector/ogr.txt:40
# c8e27aea2b0846549a75597e5325f5d1
msgid "access to OGR utilities, such as *ogrinfo*, which are available in the `FWTools`_ and `MS4W`_ packages."
msgstr ""

#: ../../en/input/vector/ogr.txt:43
# f7a35df3b9bc4711946e62f6f1ed705b
msgid "Readers should also check out the :ref:`Vector Data Access Guide <vector>`, which has lots of examples of how to access specific vector formats."
msgstr ""

#: ../../en/input/vector/ogr.txt:47
# 1ccde41eb98d4e7d8d77fd8c03401021
msgid "What is OGR?"
msgstr ""

#: ../../en/input/vector/ogr.txt:49
# 5bc209026c7f427fa800a2d177d11115
msgid "The OGR Simple Features Library is a C++ open source library (and command-line tools) providing read (and sometimes write) access to a variety of vector file formats including ESRI Shapefiles, and MapInfo mid/mif and TAB formats."
msgstr ""

#: ../../en/input/vector/ogr.txt:53
# 6e5044af154d48e8973385acf98acb61
msgid "OGR is actually part of the GDAL library, so you will notice that some references point to GDAL (such as the mailing list)."
msgstr ""

#: ../../en/input/vector/ogr.txt:57
# adf82478a18d4de6adf93cb010635148
msgid "What Does OGR Add to MapServer?"
msgstr ""

#: ../../en/input/vector/ogr.txt:59
# b43380f2e0d541d1a6f1cc97b492be6e
msgid "The OGR Simple Features Library allows MapServer users to display several types of vector data files in their native formats. For example, MapInfo Mid/Mif and TAB data do not need to be converted to ESRI shapefiles when using OGR support with MapServer."
msgstr ""

#: ../../en/input/vector/ogr.txt:65
# 2a28c0ad23dc4a4d8a7a70813e3d704b
msgid "What Data Formats are Supported?"
msgstr ""

#: ../../en/input/vector/ogr.txt:67
# fa91aa3b81824933a4144177bfa7dcfc
msgid "See http://www.gdal.org/ogr/ogr_formats.html for the latest list of supported formats. At the date this document was written, the following formats were supported:"
msgstr ""

#: ../../en/input/vector/ogr.txt:71
# e9f8cc0215d0480abad5056d1ab28f6e
msgid "`ArcInfo Binary Coverages`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:72
# 649fa78278194fe684439d8b8a850f6a
msgid "`ArcInfo E00 Coverages`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:73
# a92f108010bb4287a6a5e0f25f3edf11
msgid "`Atlas BNA`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:74
# 979e4f05f91d4c05a88f47d44f2e6a37
msgid "`Comma Separated Value (.csv)`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:75
# d44bc7724267488aaee0301d3a18b0b2
msgid "`DODS/OPeNDAP`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:76
# c323b113d099405c988efe7c3ef90eca
msgid "`ESRI ArcSDE`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:77
# ddc13bc446d146a39d6f2c923214c475
msgid "`ESRI Personal GeoDatabase`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:78
# 9ef063c599df46fda0d3290d839d5445
msgid "`ESRI Shapefiles`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:79
# 196acd12acd04d048ab1e2c34f4c1ed4
msgid "`FMEObjects Gateway`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:80
# 8415a6755a8e42c18900b744b37bf545
msgid "`Géoconcept Export`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:81
# fa3c10361ca24586b18abbe724581af3
msgid "`GeoJSON`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:82
# 193c64ef316c4d0ea1b5adeb4d5503e2
msgid "`GeoRSS`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:83
# f20ab120d40343749fef9e5d28269722
msgid "`GML`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:84
# 88cdbdfdf7fd42f6b477453a5a02f119
msgid "`GMT`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:85
# 897ea204e9fd4e509e77ba479266beb8
msgid "`GRASS`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:86
# c17c478a3a014839b265d5c631a5ae0a
msgid "`GPX`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:87
# f7f93d2a0c7648d49db6d8e7612abf48
msgid "`Informix DataBlade`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:88
# de6367c3beba41c29ea507a0b170b477
msgid "`INGRES`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:89
# a1c9dc3fff054ffba3f47d3dea2a2c34
msgid "`INTERLIS`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:90
# 1344af3f37094b59970eb903a9a6096e
msgid "`KML`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:91
# f43e682e739d456d8b9ece64be40de6b
msgid "`MapInfo files`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:92
# 2db591923da94c1494863da75233ff42
msgid "`Memory`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:93
# 341197f9c83e4e48965eadd14ebc27ec
msgid "`Microstation DGN files`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:94
# 18c7148b5c7c4fc28727bc467a12463f
msgid "`MySQL`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:95
# 3420e0f42cdb44eca9f89bcda64b9eb9
msgid "`ODBC`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:96
# cf897a1aeeee42e592120beb5b0acb09
msgid "`OGDI Vectors`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:97
# b66c6ed8cb1a45ae9ea1bc453417a15e
msgid "`Oracle Spatial`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:98
# 6c1dbc2e4cbd4fdc98e053210151e1ea
msgid "`PostgreSQL`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:99
# 0ced70d601cb4a0b9a7b4ddca8479e75
msgid "`SDTS`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:100
# c79f81e7e9dd4680aa88b0760c7b3dcd
msgid "`SQLite`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:101
# 5dac41f73937404d9dbe6315fb11e707
msgid "`UK.NTF (National Transfer Format)`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:102
# 3417450f07404029b07d711294f6bf86
msgid "`US Census TIGER/Line`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:103
# 688af2bfad2d44c8a32b6f76ee77ca51
msgid "`VRT - Virtual Datasource`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:104
# 5e8ce9862ed94ff1bd8d95ace131a99b
msgid "`X-Plane/Flighgear aeronautical data`_"
msgstr ""

#: ../../en/input/vector/ogr.txt:108
# 90f5ef7bd9bd488d8706099730735759
msgid "Some of the above formats (e.g. OGDI) have external dependencies and are not always included in the pre-compiled binary distributions of MapServer with OGR support.*"
msgstr ""

#: ../../en/input/vector/ogr.txt:114
# 4a5ee717e29b41cea4db2c3354ae44b3
msgid "Some of the above formats are not well suited for random access by nature, that's the case of MapInfo MIF/MID files which is a TEXT format and will give very poor performance for a web application. On the other hand, some binary formats such as MapInfo TAB are better suited for random access and will give performance comparable to native shapefile access in MapServer.*"
msgstr ""

#: ../../en/input/vector/ogr.txt:121
# cfee8187299240d39fed0920e64c9d98
msgid "How to Get More Information on the OGR Project"
msgstr ""

#: ../../en/input/vector/ogr.txt:123
# 07556b6eb9304b58adce4a7143d5fb6d
msgid "More information on the OGR Simple Features Project can be found at http://www.gdal.org/ogr/."
msgstr ""

#: ../../en/input/vector/ogr.txt:126
# 50aa06cad2be454aaf141d06fc89716f
msgid "The `GDAL mailing list`_ can be used for OGR related questions. Always search the list archives before sending new questions."
msgstr ""

#: ../../en/input/vector/ogr.txt:129
# 4553c7b1055244e0ab1cb610d4cad373
msgid "The `GDAL Wiki`_ has lots of good information for users and developers."
msgstr ""

#: ../../en/input/vector/ogr.txt:131
# 83be12efe70c4618a8a9a9b2a112503f
msgid "The #gdal IRC channel on irc.freenode.net might also be of help.  For info on IRC see the :ref:`MapServer IRC page <irc>`."
msgstr ""

#: ../../en/input/vector/ogr.txt:134
# 4909be30c3814637a78730f2fade847c
msgid "The main developer of the OGR library is Frank Warmerdam and the integration of OGR within MapServer was done by Daniel Morissette."
msgstr ""

#: ../../en/input/vector/ogr.txt:138
# 950a21ec1abe43aeacf115075ae6940a
msgid "Obtaining and Compiling MapServer with OGR Support"
msgstr ""

#: ../../en/input/vector/ogr.txt:140
# ca0ad6adf5d74223b11b0c037f1b5c5b
msgid "Follow the instructions on the `OGR page`_ to compile/install OGR/GDAL."
msgstr ""

#: ../../en/input/vector/ogr.txt:142
# 079c885dd81d4a18b21f9fddd09c9d9f
msgid "Obtain the MapServer :ref:`source <download>`."
msgstr ""

#: ../../en/input/vector/ogr.txt:144
# eea3542920f2430bbffedcce064fe1c9
msgid "For UNIX users, see the README.CONFIGURE file in the MapServer source, or see the :ref:`UNIX Compilation and Installation <unix>`. If GDAL/OGR is normally installed it should be sufficient to add --with-ogr to the configure line before (re)building MapServer. Linux users might want to try `FGS`_, a Linux installer for MapServer."
msgstr ""

#: ../../en/input/vector/ogr.txt:150
# 99ade098431e4127afbdb7db4f3cb1b7
msgid "For Windows users, it is recommended to look for a pre-compiled binary on the MapServer site (`MS4W`_ is recommended). If you want to compile your own then see the README.WIN32 file in the MapServer source."
msgstr ""

#: ../../en/input/vector/ogr.txt:155
# 87dab850557b4107a562e43366b289a1
msgid "Integrating OGR Support with MapServer Applications"
msgstr ""

#: ../../en/input/vector/ogr.txt:157
# 28ba8a0f0966494e97cc386271d78e31
msgid "The only change that is needed to integrate OGR support with a MapServer application is with the .map file. The LAYER's DATA parameter is expanded to three parameters (CONNECTIONTYPE OGR, CONNECTION and DATA)."
msgstr ""

#: ../../en/input/vector/ogr.txt:161
# 224ac130b4d94dc79c0a174340d8a6b7
msgid "The syntax for this differs depending on the type of data being used (the :ref:`Vector Data Access Guide <vector>` is an excellent resource for this). In OGR, a data source can be either a set of files that share a common basename (e.g. .shp/.shx/.dbf for ArcView Shapefiles, or .tab/.map/.dat/.ind/.id for MapInfo TAB files) or a whole directory of files (e.g. TIGER)."
msgstr ""

#: ../../en/input/vector/ogr.txt:168
# 8fabcb31c6aa4dcf93402c86f08dabb2
msgid "Let's call the former \"File-based data sources\" and the later \"Directory-based data sources\". When accessing a **file-based data source** you specify the filename of one of the files in the set (e.g. roads.shp or roads.tab) and when accessing a **directory-based data source** you specify the directory name and OGR reads all the files in the directory as a single data source with potentially several layers (e.g. TIGER files)."
msgstr ""

#: ../../en/input/vector/ogr.txt:175
# e5ba509a94674e71942deaf2a4e46425
msgid "Some OGR drivers (e.g. SHP, TAB) can have dual behaviors, that is if they're pointed to a single file then they behave as a file-based data source and if they're pointed to a directory then they will behave as a directory-based data source and then every file in the directory becomes a new layer in the data source."
msgstr ""

#: ../../en/input/vector/ogr.txt:181
# dc770289a37244c995798628d3e0ca3e
msgid "See the `OGR formats page`_ for more info on the specific file format you're using. (Click on the format name for more specific driver info on that format)"
msgstr ""

#: ../../en/input/vector/ogr.txt:185
# 30ecb14175f14bdcbab67da6e6c23814
msgid "Using OGR Data Sources in the Map File"
msgstr ""

#: ../../en/input/vector/ogr.txt:187
# c5ad15fe8d544086a23466857e4689f9
msgid "The .map file LAYER definition for file-based sources is as follows:"
msgstr ""

#: ../../en/input/vector/ogr.txt:200
# 7c9a41f315b5493297cd95d1fbb6146f
msgid "**<datasource_name>** is the name of the datasource to read from and is prefixed by the CONNECTION keyword. The exact organization depends on the format driver in use. The format driver to use is automatically selected by OGR based on the nature of the string passed as the datasource, and/or the format of the file referenced by it."
msgstr ""

#: ../../en/input/vector/ogr.txt:207
# 31bd42b788734ee78497bca34e0c7bf1
msgid "For file based datasources this is the name of the file, including the extension, using an absolute path, or a relative path. Relative paths are interpreted relative to the SHAPEPATH first, if not found then we try again relative to the .map file location."
msgstr ""

#: ../../en/input/vector/ogr.txt:214
# 26183080131d4cdc985131f088bc5f2c
msgid "Before version 4.1 the SHAPEPATH was ignored for OGR datasources."
msgstr ""

#: ../../en/input/vector/ogr.txt:216
# d8e48b356d714af6b5de755e2d3875b9
msgid "For directory based datasources, such as TIGER/Line, or Arc/Info Binary Coverages this is the name of the directory containing the files. If the path is relative it is interpreted relative to the .map file."
msgstr ""

#: ../../en/input/vector/ogr.txt:220
# dae4210d10b4403a9443e817b7fdaeb6
msgid "For virtual datasources such as database systems, and OGDI this is the service connection string and is generally not related to the filesystem. For instance, for Oracle Spatial this might be \"OCI:warmerda/Password@gdal800.velocet.ca\"."
msgstr ""

#: ../../en/input/vector/ogr.txt:225
# 4f485aefc5c648d78d535a8915a9603e
msgid "**<layer_definition>** is the name, number or SQL definition of the layer to use from the datasource. It is indicated via the DATA keyword in the map file."
msgstr ""

#: ../../en/input/vector/ogr.txt:228
# cf058fc094064efb8788685500a00a5a
msgid "Layer Name: The (case insenstive) layer name may be used to select a layer."
msgstr ""

#: ../../en/input/vector/ogr.txt:231
# ee16864080dc437cb53463ca0a77bede
msgid "Layer Number: The layer number (starting from 0 for the first layer) may be used to select a layer. Generally the layer name is preferred to this since it is more self describing."
msgstr ""

#: ../../en/input/vector/ogr.txt:235
# 2963fabdba2c45d4b204f48ccb77208a
msgid "Omitted: If no DATA keyword is provided, this is equivalent to selecting layer 0."
msgstr ""

#: ../../en/input/vector/ogr.txt:238
# 8a5f482922434ad280ac4cd7c9a154c9
msgid "SQL SELECT: If an SQL SELECT statement is used, it is interpreted in a driver specific manner to try and generate a temporary pseudo-layer. For some formats this a restricted subset of SQL is interpreted within OGR. For RDBMS based drivers (such as PostGIS and Oracle) this is passed through to the underlying database."
msgstr ""

#: ../../en/input/vector/ogr.txt:244
# b5d11b84ed974c03bf8ed58d291ba2e8
msgid "The OGRINFO utility can be used to find out the list of layers and their names in a data source."
msgstr ""

#: ../../en/input/vector/ogr.txt:248
# 4344d2f1536740439c54d713fc2d271a
msgid "Examples of Layer Definitions Using OGR"
msgstr ""

#: ../../en/input/vector/ogr.txt:250
# a9e778edbcdc427a89e0aa2a1bc0379e
msgid "Please see the :ref:`Vector Data Access Guide <vector>` for details and examples of each data format supported."
msgstr ""

#: ../../en/input/vector/ogr.txt:253
# 42ebb5533bda46049634dd95058c5d8e
msgid "**Example 1. MapInfo TAB file**"
msgstr ""

#: ../../en/input/vector/ogr.txt:269
# 701acce1b41e49a4ac285d928fb568a0
msgid "**Example 2. Microstation DGN file using <layer_index>**"
msgstr ""

#: ../../en/input/vector/ogr.txt:271
# b6c1cf3b1f1f46e69b692023cba777e8
msgid "The entire DGN file is represented in OGR as one layer (see the `DGN driver page`_ for more details):"
msgstr ""

#: ../../en/input/vector/ogr.txt:288
# d9b0fa28df4244f0b23232e5d032582f
msgid "**Example 3. TIGER/Line file using <layer_name>**"
msgstr ""

#: ../../en/input/vector/ogr.txt:304
# c3779e0daf534dcb9bc3fa02741a04df
msgid "**Example 4. Directory of Shapefiles using SQL JOIN**"
msgstr ""

#: ../../en/input/vector/ogr.txt:322
# 1f70ecad92174b398214522544893cbd
msgid "How to Use \"OGRINFO\""
msgstr ""

#: ../../en/input/vector/ogr.txt:324
# 520f83083a2d4276843ce65c7e9ef3d4
msgid "OGRINFO is part of the GDAL/OGR distribution (it is also included in `FWTools`_ and `MS4W`_). It is an executable that can be used to obtain layer information about OGR supported files. The parameters are:"
msgstr ""

#: ../../en/input/vector/ogr.txt:328
# c6e511e6928f4acfbffbd9140ad86bb5
msgid "*ogrinfo* [-ro] [-q] datasource_name [layer [layer...]]"
msgstr ""

#: ../../en/input/vector/ogr.txt:330
# 5a5a2c889d0d4d13b870c71a97e9c286
msgid "-ro opens the file as read only (optional)"
msgstr ""

#: ../../en/input/vector/ogr.txt:332
# b4eb61dd8126401a9f920026d239a650
msgid "-q executes in quiet mode, only the layer idex line will be returned (optional)"
msgstr ""

#: ../../en/input/vector/ogr.txt:334
# 4f9512b5583c4c0d96b4753f35eb0246
msgid "datasource_name is the filename including extension (eg. roads.tab); for TIGER/Line files, datasource_name is the directory containing the TIGER files (eg. ogrinfo TGR25001)"
msgstr ""

#: ../../en/input/vector/ogr.txt:339
# d299d1d76e8f4737addef32bb5fa63f3
msgid "**Example 5. To get the list of layers in a file:**"
msgstr ""

#: ../../en/input/vector/ogr.txt:351
# 24d92e0cfa1345ae948ba4e7e726fd07
msgid "which shows that there is one point layer in the popplace.tab file."
msgstr ""

#: ../../en/input/vector/ogr.txt:353
# 8ab0a76b73344f5db1355ed90aeea3bd
msgid "**Example 6. To get a dump of a specific layer, including field names, projection, etc:**"
msgstr ""

#: ../../en/input/vector/ogr.txt:391
# e224a4cf3cac4b03a39b420f8189e1be
msgid "**Example 7. To get a list of layers in a TIGER/Line Directory:**"
msgstr ""

#: ../../en/input/vector/ogr.txt:416
# 991f871f4dd5456cb76878920683ec7e
msgid "The above example shows that there are 14 layers in the TGR25001 directory."
msgstr ""

#: ../../en/input/vector/ogr.txt:418
# 420eebda5156499c8904938e0e55d4d8
msgid "**Example 8. To get a summary of a specific TIGER layer, including only field names, projection, and extent**"
msgstr ""

#: ../../en/input/vector/ogr.txt:445
# 8cf1417b04544986a56930cc6fcd4942
msgid "Queries Through OGR Format"
msgstr ""

#: ../../en/input/vector/ogr.txt:447
# 7fe2c9160ae1486389aa98a343211883
msgid "OGR layers can be queried the same way as regular shapefiles in MapServer."
msgstr ""

#: ../../en/input/vector/ogr.txt:450
# 8a841a3c63994e5ab6d01697c30d1749
msgid "TILEINDEX with OGR"
msgstr ""

#: ../../en/input/vector/ogr.txt:452
# 0d491fe2a07c44f295ed290394d8b526
msgid "OGR layers can utilize tile indexes in a similar fashion to Shapefile based layers. The TILEINDEX keyword should contain the connection string for the tile index file. The tile index file may be any supported OGR format, including shapefiles."
msgstr ""

#: ../../en/input/vector/ogr.txt:457
# 46f720df368b4cd29de40d4d4b7f4497
msgid "The TILEITEM keyword in the LAYER definition indicates what attribute from the tile index file should be used as the datasource location. If omitted, the default TILEITEM value is \"location\". The value in the location field should be a connection string the same as would have been used in the CONNECTION field for OGR layers. The CONNECTION keyword is not needed (and will be ignored) for layers using the OGR connection type and having the TILEINDEX keyword."
msgstr ""

#: ../../en/input/vector/ogr.txt:464
# 71a0f391c32a4a7aaf7a84ad01ade20b
msgid "Tileindex files can be prepared in an external GIS, or using the OGR utility ogrtindex. Details can be found on the `OGR Utilities Page`_."
msgstr ""

#: ../../en/input/vector/ogr.txt:467
# b19f348aa1e94b8fa257c3f6023f9194
msgid "The following is a simple example of a point layer using a tile index."
msgstr ""

#: ../../en/input/vector/ogr.txt:487
# a716dec656df4425a4f4531aa5038fc9
msgid "OGR tileindex layers should support all normal query and attribute fetching mechanisms, including from MapScript; however, this has not been heavily tested as of April/2002. Please report problems via the MapServer Trac. If auto projection support is used for tileindexed OGR layers, the tileindex is read for the projection (not the component tiles). Problems may (or may not) be encountered if the component tiles have differing schemas (different sets of attributes)."
msgstr ""

#: ../../en/input/vector/ogr.txt:496
# 195b62d8be264a35a3afe456e1e98957
msgid "Connection Pooling"
msgstr ""

#: ../../en/input/vector/ogr.txt:498
# 168aab73632b43db9e4eda32a518d6a9
msgid "For some OGR supported formats, connecting to the dataset is quite expensive in terms of CPU use and amount of disk IO. For instance, establishing access to an S-57 dataset results in a complete read into memory of the data files. Connection pooling control aims at reducing this overhead in situations where the same file is used for several different map layers."
msgstr ""

#: ../../en/input/vector/ogr.txt:504
# 84ffb32b66d248b7b5daaa3512490b69
msgid "To ensure that an OGR supported dataset is only opened once per map render (instead of separately for each map LAYER referencing the dataset, use the CLOSE_CONNECTION PROCESSING option. The default value is for CLOSE_CONNECTION is NORMAL, but if set to DEFER the dataset will be kept open till the map render is complete. It will be reused by any other layers with using the same datasource."
msgstr ""

#: ../../en/input/vector/ogr.txt:511
# 78673fefbca8433dac0dd0c9e4265e24
msgid "**Example 9. Preserve S-57 connection for two layers**"
msgstr ""

#: ../../en/input/vector/ogr.txt:513
# 73e38c6e5f42406283eb1ccde0364802
msgid "In this example, we are using the same dataset (NO410810.000) for two layers. To avoid re-reading the dataset, we mark the first layer to defer closing the connection till layer. In the second (or last) layer we request NORMAL connection handling (though this could have been left out as normal handling is the default)."
msgstr ""

#: ../../en/input/vector/ogr.txt:541
# c93e0ca3ffc84d6d844d751f7fddb17c
msgid "The text of the CONNECTION keyword must match exactly between layers for the connection to be reused."
msgstr ""

#: ../../en/input/vector/ogr.txt:544
# 3cd5287ae15c4609992f8058e7cb68a4
msgid "Some dataset connections are quite memory expensive, and keeping them open may result in increased memory use."
msgstr ""

#: ../../en/input/vector/ogr.txt:547
# f9aec037bd5446248fe2d33ae28a98fc
msgid "If all layers rendered for a particular connection defer closing the connection, it will remain open till MapServer terminates. For normal cgi or MapScript use this is likely OK."
msgstr ""

#: ../../en/input/vector/ogr.txt:551
# 6da314944b104e2d956a5a9545272637
msgid "This use of CLOSE_CONNECTION handling is unique to OGR layers, and may be changed at some point in the future as part of a broader implementation of connection pooling in MapServer."
msgstr ""

#: ../../en/input/vector/ogr.txt:556
# 6dee1dac30ca4729a0ace760835c5aa5
msgid "STYLEITEM \"AUTO\" - Rendering Layers Using Style Information from the OGR File"
msgstr ""

#: ../../en/input/vector/ogr.txt:561
# a4fef317cec04b2abe8eb5064d301502
msgid "This feature is only supported with MapInfo TAB and Microstation DGN files at the moment, but eventually other formats that carry colors and styles at the shape-level may also be supported through OGR.*"
msgstr ""

#: ../../en/input/vector/ogr.txt:565
# 2ba050008a324fc39ccbac6f99e20af7
msgid "In MapServer, ArcView, and other shapefile-based applications, colors and styles are usually defined at the layer level. This means that all the shapes in a given layer are usually rendered using the same color and styles."
msgstr ""

#: ../../en/input/vector/ogr.txt:569
# 1e4eb0214eb24e5abbf0f839975750c2
msgid "On the other hand, some formats supported by OGR such as MapInfo TAB do have color and style information attached to each shape. OGR adds support for the 'STYLEITEM \"AUTO\"' layer parameter which allows you to request that the shapes in a layer be rendered using colors and styles coming from the data source instead of being driven by CLASSes as was traditionally done with MapServer."
msgstr ""

#: ../../en/input/vector/ogr.txt:576
# bfecbf0ff5fb45f0956d19143c0b2a8f
msgid "How to Implement"
msgstr ""

#: ../../en/input/vector/ogr.txt:578
# c5737dbd79a5494a98d54c753d9668ee
msgid "In order to have a layer rendered using colours and styles coming from the OGR data source, your must do the following:"
msgstr ""

#: ../../en/input/vector/ogr.txt:581
# 6e27e56fd51c4855bc9123c125cc6652
msgid "Your layer definition must contain the STYLEITEM \"AUTO\" parameter."
msgstr ""

#: ../../en/input/vector/ogr.txt:583
# 11f33bfbe7d04df287f7c7b5368acf80
msgid "Your layer definition needs to contain at least one CLASS (which may be empty) and optionally a CLASSITEM to match the expressions if your CLASS contains an expression. The empty CLASS in the layer will be updated dynamically at runtime to contain colours and styles coming from the data source for each shape."
msgstr ""

#: ../../en/input/vector/ogr.txt:589
# 84c51fcb095e48768f42a5d83f74094f
msgid "Examples"
msgstr ""

#: ../../en/input/vector/ogr.txt:591
# 38f004c6f55f403aa9c8807ae9af6914
msgid "**Example 10. Layer Definition Using STYLEITEM \"AUTO\" without a CLASSITEM**"
msgstr ""

#: ../../en/input/vector/ogr.txt:613
# 3aac6f8d54474be28446fec772e00a9d
msgid "**Example 11. Layer Definition Using STYLEITEM \"AUTO\" with a CLASSITEM**"
msgstr ""

#: ../../en/input/vector/ogr.txt:636
# 6e9ee68a5712456aa80412b457cae3b9
msgid "**Please Note:**"
msgstr ""

#: ../../en/input/vector/ogr.txt:638
# 85d70fe4dd3f4db78b1e4e8ae3987479
msgid "CLASS EXPRESSIONs are still working, so it is still possible to query and classify layers that are using STYLEITEM \"AUTO\". The only difference is that instead of using static class definitions, the colors and style will be read from the data file."
msgstr ""

#: ../../en/input/vector/ogr.txt:644
# be9e3ab880884e88b126dc9fe2f43afe
msgid "Important Notes"
msgstr ""

#: ../../en/input/vector/ogr.txt:646
# 3ec9ef200b304747a174098f1d047f03
msgid "Even though MapInfo and other OGR data sources may support layers with mixed geometry types (e.g. points, lines and polygons in the same file) this is not yet supported in MapServer. So you still have to define a layer 'TYPE' and make sure that all the shapes in the OGR data source are compatible with that layer type, otherwise MapServer may produce an error about incompatible geometry types at runtime."
msgstr ""

#: ../../en/input/vector/ogr.txt:653
# 85c253da7c114d33bc4ceea11654913a
msgid "Due to the dynamic nature of this feature, it is not compatible with the labelcache, so the labelcache is automatically disabled for layers that make use of 'STYLEITEM \"AUTO\"'."
msgstr ""

#: ../../en/input/vector/ogr.txt:657
#: ../../en/input/vector/ogr.txt:847
# ce1ac394a1cb41b2a352c95d0c46d5e2
# 4de49f80f7d64f4b9e72baede6daca7c
msgid "When you use STYLEITEM AUTO, MapServer tries to match symbol names returned by OGR to names in your symbol file. For a quick solution, try using the following symbol file:"
msgstr ""

#: ../../en/input/vector/ogr.txt:661
#: ../../en/input/vector/ogr.txt:851
# c5f72774028e4a88bc3b0dc6ec640a7e
# 0878df9ddcd04c45a9adc8d50c2c61d2
msgid "http://demo.mapserver.org/ogr-demos/yk_demo/etc/symbols_mapinfo.txt"
msgstr ""

#: ../../en/input/vector/ogr.txt:663
#: ../../en/input/vector/ogr.txt:853
# 9f7f9965e256482a946d78030084a939
# 99db207e5c6e438ebd62812f1a25ede8
msgid "The name of the symbols returned by OGR to MapServer depends on the file format. In the case of MapInfo files, it will be:"
msgstr ""

#: ../../en/input/vector/ogr.txt:666
#: ../../en/input/vector/ogr.txt:856
# 836d7bfbae2441e5a2eb1a9893dd2f73
# 7df472fd5d6c4c1fb2392430b8e40280
msgid "For \"old-style\" symbols (default MapInfo 3.0 symbols numbered 32 to 67) the symbol name will be 'mapinfo-sym-##' where '##' is the symbol number, e.g. 'mapinfo-sym-32'."
msgstr ""

#: ../../en/input/vector/ogr.txt:669
#: ../../en/input/vector/ogr.txt:860
# 29dce0f763da484ea9306b3d5da98642
# 93e6cacf78a34fc0b802381722c7598b
msgid "For \"Font Symbols\", the symbol name is also 'mapinfo-sym-##' where '##' is the symbol number in the font. In this case, the name of the font itself is ignored by MapServer."
msgstr ""

#: ../../en/input/vector/ogr.txt:673
#: ../../en/input/vector/ogr.txt:864
# 611b67da84f841cd929dbf11cafe6979
# 51e1b97624ae41dca6a0db5a076420c0
msgid "MapInfo also supports \"custom symbols\" (bitmap symbols)... I'm not sure what you would get from OGR for this, but I'm pretty sure that MapServer doesn't do anything useful with them."
msgstr ""

#: ../../en/input/vector/ogr.txt:677
#: ../../en/input/vector/ogr.txt:868
# 8ecf75c06173423896a8ae28784cd606
# 103caf54756c4944ab46126bfde5af84
msgid "The OGRINFO utility can be used to find out exactly which symbol names OGR will return to MapServer. Look at the \"Style\" string in the ogrinfo output for each shape that is read."
msgstr ""

#: ../../en/input/vector/ogr.txt:682
# 605a82f663864c2ca5cc4a4b73fa0861
msgid "Mapping of OGR Style Info to the MapServer CLASS Members"
msgstr ""

#: ../../en/input/vector/ogr.txt:684
# df779264c2f1438ca5b185933ed5c649
msgid "Here is the list of style parameters that are currently supported from OGR data sources and how they're mapped in MapServer:"
msgstr ""

#: ../../en/input/vector/ogr.txt:688
# 657068071a224216be9fc841e693de46
msgid "The line colour is mapped to CLASS.COLOR"
msgstr ""

#: ../../en/input/vector/ogr.txt:691
# 89482ccae6634146ab408393ce85fcaa
msgid "The line thickness is mapped to CLASS.STYLE.WIDTH. The default will be 1 pixel line (as it always is with MapServer)."
msgstr ""

#: ../../en/input/vector/ogr.txt:695
# bda7905eb333406980ac694ba5939336
msgid "Polygon fill color is mapped directly to CLASS.COLOR"
msgstr ""

#: ../../en/input/vector/ogr.txt:697
# c778af7b8dd346f183aaab9bffa90eb7
msgid "Note that at this time, transparent polygons are not supported (they're always opaque)."
msgstr ""

#: ../../en/input/vector/ogr.txt:701
# 1fea2cdb854b44728e5d1e23ee4161f7
msgid "If a polygon has an outline color and thickness defined in the data source then the same rule as for line color and thickness above will apply, except that the outline color is mapped to CLASS.OUTLINECOLOR"
msgstr ""

#: ../../en/input/vector/ogr.txt:706
# 39476eae1941428498378d840897a6d4
msgid "Point symbol color is directly mapped to CLASS.COLOR. Point symbol size is directly mapped to CLASS.SIZE."
msgstr ""

#: ../../en/input/vector/ogr.txt:709
# fba8b585d22746639827142c0c74b7e1
msgid "If your symbolset contains a symbol called \"default-marker\" then this symbol will be used, otherwise the default will be CLASS.SYMBOL=0 (i.e. a 1 pixel dot)"
msgstr ""

#: ../../en/input/vector/ogr.txt:712
# e064136ab8604bb59fda4dd24316e2c9
msgid "It is also possible (with a bit of work) to control which symbol gets used in rendering point symbols. OGR provides MapServer with symbol names, and if the symbol name returned by OGR to MapServer matches the name of one of the symbols in your symbolset then this symbol will be used."
msgstr ""

#: ../../en/input/vector/ogr.txt:717
# 424f9d54d7f5452a9a3ac95996a625cd
msgid "For MapInfo point symbols (numbered 32 to 67 in the MapInfo MIF spec), the name returned by OGR is \"mapinfo-sym-X\" where X should be replaced with the MapInfo symbol number (e.g. \"mapinfo-sym-35\" is the star symbol)."
msgstr ""

#: ../../en/input/vector/ogr.txt:721
# 32c89291ef774e469abb546585baefc5
msgid "If the OGR symbol id is a web reference (http://.../mysymbol.png), the symbol will be downloaded and a new symbol entry will be created referring to it."
msgstr ""

#: ../../en/input/vector/ogr.txt:726
# c7bc7b80df0e41838386b52297dda182
msgid "The text string is mapped to CLASS.TEXT"
msgstr ""

#: ../../en/input/vector/ogr.txt:728
# bf597c6f5f1e4af398f3bfdecef3c277
msgid "Text color is mapped to CLASS.LABEL.COLOR"
msgstr ""

#: ../../en/input/vector/ogr.txt:730
# e925a9431cc04c83a638d01e670f8882
msgid "Text background color is mapped to CLASS.LABEL.BACKGROUNDCOLOR"
msgstr ""

#: ../../en/input/vector/ogr.txt:732
# 8ce0eb4ffd4e41d1b13d8fa089ed1435
msgid "Text height is mapped to CLASS.LABEL.SIZE"
msgstr ""

#: ../../en/input/vector/ogr.txt:734
# 5affb2f52615483192e4998d43d72922
msgid "Text angle is mapped to CLASS.LABEL.ANGLE"
msgstr ""

#: ../../en/input/vector/ogr.txt:737
# 15001f057a4b4883945c897c1d286f5f
msgid "Text font mapping follows the following rules:"
msgstr ""

#: ../../en/input/vector/ogr.txt:739
# 1fc756aa366c4278aa7bf3f29dfb6324
msgid "If TTF fonts are supported:"
msgstr ""

#: ../../en/input/vector/ogr.txt:741
# d04d2dcf7dec408a85da9f0205db7c1e
msgid "If the native font name (e.g. \"Arial\") is found in your fontset then this font will be used.  The font styles `bold` and `italic` are supported as follows: Arial bold fontname maps to `arial-bold`.  Arial italic fontname maps to `arial-italic`.  Arial bold italic fontname maps to `arial-bold-italic`.  If the styles are not available, arial will be used."
msgstr ""

#: ../../en/input/vector/ogr.txt:749
# d88a17a6d2a6404e970e1055c947e8e9
msgid "If 1a. failed and a font called \"default\" is present in your fontset then this \"default\" font will be used."
msgstr ""

#: ../../en/input/vector/ogr.txt:752
# b5743c68752b45018b09079116bec2f6
msgid "If TTF fonts are not supported or if all above cases failed, then BITMAP MEDIUM font will be used."
msgstr ""

#: ../../en/input/vector/ogr.txt:756
# e88afe9af3744e44a408f53bcd2f0c70
msgid "If the color parameter from the OGR style contains an alpha value, the value will be used to set the `OPACITY` parameter in the `STYLE` object."
msgstr ""

#: ../../en/input/vector/ogr.txt:763
# 24fd6a40498a4590b0f315c5659e5301
msgid "Accessing OGR STYLEITEMAUTO Label Styles Through MapScript"
msgstr ""

#: ../../en/input/vector/ogr.txt:765
# 21b55323eed1416fba6a4ddd4033bcab
msgid "OGR STYLEITEMAUTO label styles can be accessed through MapScript, such as PHP/MapScript's getshape() or getvalue() methods, by setting the LAYER's PROCESSING parameter to \"GETSHAPE_STYLE_ITEMS=all\".  Therefore, the LAYER may contain:"
msgstr ""

#: ../../en/input/vector/ogr.txt:777
# 275fa92e99454eb6a68c2abbed5b0d00
msgid "The following label styles are supported:"
msgstr ""

#: ../../en/input/vector/ogr.txt:780
# 1be9f89e0f5e434c80cdf5712a1f5271
msgid "Label Style"
msgstr ""

#: ../../en/input/vector/ogr.txt:780
# 6eface5eb45d46ad91abf03e9e03cf7f
msgid "Description"
msgstr ""

#: ../../en/input/vector/ogr.txt:780
# 127bb8002fcf4bcca50bd5fdbba1d6f4
msgid "MapServer Version Implemented"
msgstr ""

#: ../../en/input/vector/ogr.txt:783
# 7f191ca1bee6403db914cf1558fb6d70
msgid "OGR:LabelFont"
msgstr ""

#: ../../en/input/vector/ogr.txt:783
# 1e648a93221c446288059bae4d74a976
msgid "Comma-delimited list of fonts names"
msgstr ""

#: ../../en/input/vector/ogr.txt:783
#: ../../en/input/vector/ogr.txt:787
#: ../../en/input/vector/ogr.txt:788
#: ../../en/input/vector/ogr.txt:789
#: ../../en/input/vector/ogr.txt:791
#: ../../en/input/vector/ogr.txt:794
#: ../../en/input/vector/ogr.txt:795
#: ../../en/input/vector/ogr.txt:796
#: ../../en/input/vector/ogr.txt:797
#: ../../en/input/vector/ogr.txt:798
#: ../../en/input/vector/ogr.txt:799
#: ../../en/input/vector/ogr.txt:800
#: ../../en/input/vector/ogr.txt:803
#: ../../en/input/vector/ogr.txt:804
#: ../../en/input/vector/ogr.txt:807
#: ../../en/input/vector/ogr.txt:809
#: ../../en/input/vector/ogr.txt:811
#: ../../en/input/vector/ogr.txt:812
# 89b7a5f501014790a2769c744da702ec
# cc540402b90f45f2929b6b8d6e976bab
# 7d13dbbcbb8840b5ae3664e7f3422181
# 5a84925f1dee4d6abb81796d29f72dd6
# 796002cca2f94fb2b58b3ed7f74962df
# bd4a335afafe44dbb2ca3b04979fbd34
# ff1ac564344248cc8a2e66f3afa2edd4
# b9241c392eea42dc8cd478f1af493799
# 265b2706078c487cab1bec0814027026
# 1a6c5dfbeed04bc5bef3d9fdc5f613ba
# 0a9ef3e82b6545bf8bbe8b00eb32d161
# dbae92fc58c849989cc80d01c4d282a6
# 05f604a9e0c148c1821acdd798bce672
# acf6b0a87fe84335aa40d52f62d0f766
# 1e279595b3ec4f8aa3eda2a22caf37b6
# 0376aec0bd6444569d68bf0380edbaaf
# c83f3298922b4c80ad500ffde45e79b4
# 78f2413a87a74dc3a2cfb392f2dce8ed
msgid "5.4"
msgstr ""

#: ../../en/input/vector/ogr.txt:784
# 3f566acc17164b7e89917d2bb511b34f
msgid "OGR:LabelSize"
msgstr ""

#: ../../en/input/vector/ogr.txt:784
# c3c0b60def554ef299bf3352bd99d962
msgid "Numeric value with units"
msgstr ""

#: ../../en/input/vector/ogr.txt:784
#: ../../en/input/vector/ogr.txt:785
#: ../../en/input/vector/ogr.txt:786
# d24db9701d8c4880a9f9a3dfa2506837
# 120eabd7de264317acd5462ed5d58a45
# 109f7744a5614bd5b779f828e9ba6792
msgid "5.2.0"
msgstr ""

#: ../../en/input/vector/ogr.txt:785
# 401f0d541fbb4bfe83f11563120782ec
msgid "OGR:LabelText"
msgstr ""

#: ../../en/input/vector/ogr.txt:785
# 8f8ab17055ea4e89880b2d7050d0b540
msgid "Label text string"
msgstr ""

#: ../../en/input/vector/ogr.txt:786
# 0e89a531e7e4486e9f25ebe9df0a5907
msgid "OGR:LabelAngle"
msgstr ""

#: ../../en/input/vector/ogr.txt:786
# 40ca869de75d43b0ad3dbb96385060ab
msgid "Rotation angle (in degrees)"
msgstr ""

#: ../../en/input/vector/ogr.txt:787
# ae0a818836354d30a6b2c6619d5aa0ae
msgid "OGR:LabelFColor"
msgstr ""

#: ../../en/input/vector/ogr.txt:787
# 8a072e8a453e49da8d6e36b97c7e95de
msgid "Foreground color"
msgstr ""

#: ../../en/input/vector/ogr.txt:788
# b5a9f12749754d77945590cd8b176f2b
msgid "OGR:LabelBColor"
msgstr ""

#: ../../en/input/vector/ogr.txt:788
# 1f1204b1fc7d4dd585dc868392611a35
msgid "Background color"
msgstr ""

#: ../../en/input/vector/ogr.txt:789
# e449b384609f421abf62b65b0aaa0199
msgid "OGR:LabelPlacement"
msgstr ""

#: ../../en/input/vector/ogr.txt:789
# 3c3c6c5d65b54e8fbd23dd9fb09b4e99
msgid "How is the text drawn relative to the feature's geometry"
msgstr ""

#: ../../en/input/vector/ogr.txt:791
# e59a23f791b24e85a65e50fa3027bd14
msgid "OGR:LabelAnchor"
msgstr ""

#: ../../en/input/vector/ogr.txt:791
# 62412ddbbc8b4eae80a25457123bf4ef
msgid "A value from 1 to 12 defining the label's position relative to the point to which it is attached."
msgstr ""

#: ../../en/input/vector/ogr.txt:794
# 17fb0c9010864199bf69e6d02dfe7632
msgid "OGR:LabelDx"
msgstr ""

#: ../../en/input/vector/ogr.txt:794
# 9b3d24081526443c8f71c7cabce451be
msgid "X offset"
msgstr ""

#: ../../en/input/vector/ogr.txt:795
# f6bcbb5706b44e50b7071df271062bfa
msgid "OGR:LabelDy"
msgstr ""

#: ../../en/input/vector/ogr.txt:795
# c72468718faf402a9fbf4b1ec4186acb
msgid "Y offset"
msgstr ""

#: ../../en/input/vector/ogr.txt:796
# 66d0afb18426451ab82976b0a293a2a9
msgid "OGR:LabelPerp"
msgstr ""

#: ../../en/input/vector/ogr.txt:796
# b97f01c045a5439395940e14877bf36f
msgid "Perpendicular offset"
msgstr ""

#: ../../en/input/vector/ogr.txt:797
# da7bdc41541a44618d10817dea871a33
msgid "OGR:LabelBold"
msgstr ""

#: ../../en/input/vector/ogr.txt:797
# 603376b80bac4936afc20e19f47ada2b
msgid "Bold text"
msgstr ""

#: ../../en/input/vector/ogr.txt:798
# eb7c02fa5a814bbfbf6589a6e078f123
msgid "OGR:LabelItalic"
msgstr ""

#: ../../en/input/vector/ogr.txt:798
# 71c45b6e19c54d749cf9e7253dbde43c
msgid "Italic text"
msgstr ""

#: ../../en/input/vector/ogr.txt:799
# 10b0bf464bb542578831d116417755e7
msgid "OGR:LabelUnderline"
msgstr ""

#: ../../en/input/vector/ogr.txt:799
# 76676836bff6422c9a8e2a0419f0741c
msgid "Underlined text"
msgstr ""

#: ../../en/input/vector/ogr.txt:800
# 16f4ec0202a548ab9d201d3b86527e77
msgid "OGR:LabelPriority"
msgstr ""

#: ../../en/input/vector/ogr.txt:800
# 5934e383d435423891ffbfbdf887b430
msgid "Numeric value defining the order in which style parts should be drawn."
msgstr ""

#: ../../en/input/vector/ogr.txt:803
# 2cf4b69cfff5478a84aaaec925b7ede5
msgid "OGR:LabelStrikeout"
msgstr ""

#: ../../en/input/vector/ogr.txt:803
# 37651f532e55485f88ec62b9e77b8adc
msgid "Strike out text (gdal >= 1.4.0)"
msgstr ""

#: ../../en/input/vector/ogr.txt:804
# 53c552568b534e85942b3ce5ae2ae764
msgid "OGR:LabelStretch"
msgstr ""

#: ../../en/input/vector/ogr.txt:804
# 9d1ac54c97f34e95a512b380268b8d11
msgid "Stretch factor changes the width of all characters in the font by factor percent. (gdal >= 1.4.0)"
msgstr ""

#: ../../en/input/vector/ogr.txt:807
# c3dd95f156e34dc8ad1b778721ac7d17
msgid "OGR:LabelAdjHor"
msgstr ""

#: ../../en/input/vector/ogr.txt:807
# 2ec1f043860842e29c0290d8596a720e
msgid "Horizontally adjacent text (gdal >= 1.4.0)"
msgstr ""

#: ../../en/input/vector/ogr.txt:809
# 9018f3452f374cd6a11459ba8a6a3c72
msgid "OGR:LabelAdjVert"
msgstr ""

#: ../../en/input/vector/ogr.txt:809
# 95bfe37bfbcc44d49efba9e936e8b675
msgid "Vertically adjacent text (gdal >= 1.4.0)"
msgstr ""

#: ../../en/input/vector/ogr.txt:811
# 8d5433fe299f43b28a1c73caecb3c2f1
msgid "OGR:LabelHColor"
msgstr ""

#: ../../en/input/vector/ogr.txt:811
# a9ef85aaf85d44fcbe47695a3dc6af87
msgid "Shadow color (gdal >= 1.4.0)"
msgstr ""

#: ../../en/input/vector/ogr.txt:812
# e801214ace234fc98d0f4c856157bac2
msgid "OGR:LabelOColor"
msgstr ""

#: ../../en/input/vector/ogr.txt:812
# b2d8f2ab44374af3a158507f5b7da6dc
msgid "Outline color (gdal > 1.6.0)"
msgstr ""

#: ../../en/input/vector/ogr.txt:815
# 20b87bc6666843c2a9145ae162b6d4ba
msgid "Please see the `OGR Feature Style Specification`_ document for more details on those specific styles."
msgstr ""

#: ../../en/input/vector/ogr.txt:819
# cda6266eb0164d8f936151fa51f336b3
msgid "Sample Sites Using OGR/MapServer"
msgstr ""

#: ../../en/input/vector/ogr.txt:821
# f66375435eb444a5a298c8e8f8032f88
msgid "The following sites use OGR's STYLEITEM \"AUTO\" feature:"
msgstr ""

#: ../../en/input/vector/ogr.txt:823
# f8fb3115bef34a4588d9f4c30f5c18ce
msgid "http://demo.mapserver.org/ogr-demos/yk_demo/demo_init.html"
msgstr ""

#: ../../en/input/vector/ogr.txt:825
# 0f24565ec64a4403b2e4523a9bc9e6a5
msgid "http://demo.mapserver.org/ogr-demos/nfld_demo/demo_init.html"
msgstr ""

#: ../../en/input/vector/ogr.txt:827
# 97e114a03c314747a536ea89a20637d7
msgid "The following site uses OGR, as well as MapInfo's 'Seamless Map Layers' feature:"
msgstr ""

#: ../../en/input/vector/ogr.txt:829
# cc9a6abf487f417fb0855cda97527681
msgid "http://demo.mapserver.org/ogr-demos/ro_demo/demo_init.html"
msgstr ""

#: ../../en/input/vector/ogr.txt:831
# 06dee4dbf48f4240b801111a319bea6b
msgid "The following site uses OGR to display TIGER 2000 files:"
msgstr ""

#: ../../en/input/vector/ogr.txt:833
# 85beb7c1e6e8435ca282dd5b5b05bd0a
msgid "http://demo.mapserver.org/ogr-demos/tig_demo/demo_init.html"
msgstr ""

#: ../../en/input/vector/ogr.txt:836
# 57bc99c95d304906bd2464c7dea2047f
msgid "FAQ / Common Problems"
msgstr ""

#: ../../en/input/vector/ogr.txt:838
# ebc0cd5c97a947a9ad9b704f7d39e324
msgid "**What Does \"OGR\" Stand For?**"
msgstr ""

#: ../../en/input/vector/ogr.txt:840
# 07debcbad29c442aac7ed17e5eeb912a
msgid "Basically, OGR does not stand for anything. For a detailed explanation of how OGR was named, see GDAL's FAQ at http://trac.osgeo.org/gdal/wiki/FAQ."
msgstr ""

#: ../../en/input/vector/ogr.txt:845
# eecc93cc200f4dd98ae3d3823ce56544
msgid "**When using STYLEITEM AUTO, what should I have in my .sym symbols file?**"
msgstr ""

#: ../../en/input/vector/oracle.txt:5
# 62b74511ff47473eaed487998483e341
msgid "Oracle Spatial"
msgstr ""

#: ../../en/input/vector/oracle.txt:7
# 4122fbc083034ac999c7dde1c8c24eea
msgid "Bart van den Eijnden"
msgstr ""

#: ../../en/input/vector/oracle.txt:8
# 5b3012e5dae845448bc68c5b7768549b
msgid "2005/12/12"
msgstr ""

#: ../../en/input/vector/oracle.txt:17
# 7b233c49dba54734bbc4be804108f39d
msgid "Oracle Spatial is a spatial cartridge for the Oracle database. Remember that all Oracle databases come with Locator, which has less features than Oracle Spatial. The differences between Locator and Spatial can be found in the `Oracle Spatial FAQ`_."
msgstr ""

#: ../../en/input/vector/oracle.txt:22
# 47843036252447cf87fd84bce0ccc3dd
msgid "You can also see the original `OracleSpatial wiki page <https://github.com/mapserver/mapserver/wiki/OracleSpatial>`__ that this document was based on."
msgstr ""

#: ../../en/input/vector/oracle.txt:26
# de00ad94186d495fa08ef99067b27aa2
msgid "What MapServer 5.2 with Oracle Spatial"
msgstr ""

#: ../../en/input/vector/oracle.txt:28
# 7caa3af408db49c6aae2d1b39f814eed
msgid "mode=map"
msgstr ""

#: ../../en/input/vector/oracle.txt:29
# d4c0eae82103449dae7523aec30dbc8d
msgid "query modes: query, nquery, itemnquery"
msgstr ""

#: ../../en/input/vector/oracle.txt:30
# ed5c452512994cf9ad96fcdd93775a6e
msgid ":ref:`mapscript` query functions such as querybyattributes"
msgstr ""

#: ../../en/input/vector/oracle.txt:31
# 3969d1dadece42b2834dc38ebfbc80b2
msgid ":ref:`OGC:WMS <wms_server>`: GetCapabilities, GetMap, GetFeatureInfo, DescribeLayer"
msgstr ""

#: ../../en/input/vector/oracle.txt:32
# 88b9ee78330f42c0864816bca01bee6a
msgid ":ref:`OGC:WFS <wfs_server>`, GetCapabilities, DescribeFeatureType, GetFeature"
msgstr ""

#: ../../en/input/vector/oracle.txt:36
# a387880c31304665a4e667ecf4e66444
msgid "Binaries"
msgstr ""

#: ../../en/input/vector/oracle.txt:38
# c871cff9a4cd4f789bef0102d1cc2c96
msgid "MapServer Windows plugins with Oracle spatial support can be downloaded from :ref:`MS4W <windows>`. But you need Oracle client software in the server on which you are running MapServer. Oracle client software can be obtained for development purposes from the Oracle website, but you need to register, which by the way is free. The most recent version is Oracle Database 10g Release 1 Client. The ORACLE TECHNOLOGY NETWORK DEVELOPMENT LICENSE AGREEMENT applies to this software. The instant client will be satisfactory, and you can download the `instant client`_. Make sure though your MapServer is compiled against the same version as your Oracle client, for compiling you need a full client install, not just the instant client."
msgstr ""

#: ../../en/input/vector/oracle.txt:50
# 6ed7a38ed8804c868f88ffa4f51032e0
msgid "Installation"
msgstr ""

#: ../../en/input/vector/oracle.txt:52
# 020903f00060421eb8971745f3be679f
msgid "See :ref:`oci_install` for more configuration and installation information for MapServer's native Oracle support"
msgstr ""

#: ../../en/input/vector/oracle.txt:56
# 794300f83bf84546bea0b9aaa6bf1560
msgid "If you receive error messages like \"Error: .\". It's likely related to MapServer being unable access or locate the ORACLE_HOME."
msgstr ""

#: ../../en/input/vector/oracle.txt:60
# 7d0361061e2b481e9464f99b7021fdcb
msgid "Two options for using Oracle Spatial with MapServer"
msgstr ""

#: ../../en/input/vector/oracle.txt:62
# 851f12e94087490294e78dd31746046f
msgid "Oracle Spatial layers in MapServer can be used through 2 interfaces:"
msgstr ""

#: ../../en/input/vector/oracle.txt:64
# a14b1732355e4a628e21025ff5cf2a35
msgid "The native built-in support through maporaclespatial.c"
msgstr ""

#: ../../en/input/vector/oracle.txt:65
# 1e925010f52149c180d5dc4d8f0d0952
msgid "OGR, but watch out: OGR is not compiled with Oracle Spatial support so it won't work without compiling in OCI (Oracle client) yourself. This requires both recompiling GDAL/OGR as well as recompiling MapServer itself against the new GDAL/OGR !!!!"
msgstr ""

#: ../../en/input/vector/oracle.txt:71
# aa5897a922ce4ec8b30e500bb1e2a233
msgid "Mapfile syntax for native Oracle Spatial support"
msgstr ""

#: ../../en/input/vector/oracle.txt:73
# f68a335719ca45818d6ec49238c8a70b
msgid "The DATA statement for a LAYER of CONNECTIONTYPE oraclespatial can now have 4 options. This change is backwards compatible, i.e. the old ways of specifying DATA still work. The new options are an extension to the old DATA statements, as they needed to include identification of the primary key to be used for the query modes (UNIQUE)."
msgstr ""

#: ../../en/input/vector/oracle.txt:79
# 9e3e75e7e57d4b859b5a9e7536a4c5cb
msgid "The following options are valid DATA statements:"
msgstr ""

#: ../../en/input/vector/oracle.txt:97
# 380bd997690c406092cb4f297f08f40a
msgid "Example 1"
msgstr ""

#: ../../en/input/vector/oracle.txt:99
# 43f8d4dd591a4092b08fcc30bccd982e
msgid "The most simple DATA statement, in this case you only need to define one geometry column and one table. This option assumes you do not have an SRID defined."
msgstr ""

#: ../../en/input/vector/oracle.txt:114
# d82c167647d8482b925f416f78ec8605
msgid "Example 2"
msgstr ""

#: ../../en/input/vector/oracle.txt:116
# b95a9e6535554868941c822cb6c25822
msgid "It's composed of the first option plus the USING UNIQUE parameter. These new features are necessary when you want to use any query function. When it is used you must pass a numeric column type. This option assumes you do not have an SRID defined."
msgstr ""

#: ../../en/input/vector/oracle.txt:131
# 13b7158c70ba487d837cc86b1e530d35
msgid "Example 3"
msgstr ""

#: ../../en/input/vector/oracle.txt:133
# e995e8e3b4d0476dbeedca22bb789d7b
msgid "This option is an extension to the first option. In this mode you must define the USING SRID parameter when the SRID value in your data is different from NULL."
msgstr ""

#: ../../en/input/vector/oracle.txt:148
# b37fcdf6d2964fc0965a9d0a5aebedb9
msgid "Example 4"
msgstr ""

#: ../../en/input/vector/oracle.txt:150
# 29e2b303ed854af7affd22549db2e65a
msgid "This option is a combination of examples 2 and 3."
msgstr ""

#: ../../en/input/vector/oracle.txt:164
# 34d1949d372c42eebed51c5b8c520455
msgid "Using subselects in the DATA statement"
msgstr ""

#: ../../en/input/vector/oracle.txt:166
# 0a389d0e00d8486e9ab5aa639ef47241
msgid "It is possible to define the source of the date as a subselect and not only as a table. As source of data, used in FROM token, you can define any SQL, table, function, or operator that returns a SDO_GEOMETRY. For example:"
msgstr ""

#: ../../en/input/vector/oracle.txt:174
# 262e843f48044e909703172aa979e753
msgid "If the LAYER definition contains a CLASSITEM, LABELITEM or FILTER, it is necessary that the fields used are returned by the query. When you define CLASSITEM you can use an expression without any problems."
msgstr ""

#: ../../en/input/vector/oracle.txt:181
# 7d916cf3c01a4f838bdde0733ecddc4a
msgid "Additional keywords - [FUNCTION]"
msgstr ""

#: ../../en/input/vector/oracle.txt:183
# d3dd5eb0e4fa4c7f8ff77aa351f08d28
msgid "You can add three keywords to the DATA statement for [FUNCTION] option that influence the query which will be executed in Oracle:"
msgstr ""

#: ../../en/input/vector/oracle.txt:187
# 9389616f6f6e4425896729a2848008a8
msgid "USING FILTER"
msgstr ""

#: ../../en/input/vector/oracle.txt:193
# 73a0125861c74b0e9a94492dff229308
msgid "Using this keyword triggers MapServer to use the Oracle Spatial SDO_FILTER operator. This operator executes only the Oracle Spatial primary filter over your query data. In the Oracle User guide they explain: The primary filter compares geometric approximations, it returns a superset of exact result. The primary filter therefore should be as efficient (that is, selective yet fast) as possible. This operator uses the spatial index, so you need to define your spatial index correctly to retrieve an exact result. If the result of the query is not exact you can try the next option."
msgstr ""

#: ../../en/input/vector/oracle.txt:204
# dd86bb2071124e858342f004e767325e
msgid "USING RELATE"
msgstr ""

#: ../../en/input/vector/oracle.txt:210
# 6d4fc6922e55404da5e3ffbf384402c7
msgid "Using this keyword triggers MapServer to use the Oracle Spatial SDO_RELATE operator. This operator applies the primary and secondary Oracle Spatial filters. It's performance can be slightly slow but the result is extremely correct. You can use this mode when you want a perfect result or when you can't readjust the spatial index."
msgstr ""

#: ../../en/input/vector/oracle.txt:218
# 9267c8d18cb34ed5ae8d2f4db423b07e
msgid "USING GEOMRELATE"
msgstr ""

#: ../../en/input/vector/oracle.txt:224
# b7608a552fd4472da84e57092c410bed
msgid "Using this keyword triggers MapServer to use the geometry function SDO_GEOM.RELATE, a function that searches the relations between geometries. SDO_GEOM.RELATE does not use the spatial index and your performance is more slow than operators but it's very accurate. You can use this mode when you can't use the spatial index or when it doesn't exist."
msgstr ""

#: ../../en/input/vector/oracle.txt:231
# 1b2fc4dcfe7445268dceb109f1287bd5
msgid "USING NONE"
msgstr ""

#: ../../en/input/vector/oracle.txt:237
# 407a1eaf1b2c4773b98aeba2f52ed740
msgid "Using this keyword triggers MapServer to don't use any geometry function or spatial operator. So, the internal SQL don't retrict, bases in the extent, the data from source. All the data from source will be returned for MapServer. The NONE token is very useful when the source of the data don't contains any spatial index. It's usually occur when the source is a function like SDO_BUFFER, SDO_XOR, SDO_INTERSECTION...... So this mode is recomended when you can't use the spatial index or when it doesn't exist."
msgstr ""

#: ../../en/input/vector/oracle.txt:246
# cc6b282d6ba942148ffd59cc9e7c0566
msgid "Additional keywords - [VERSION]"
msgstr ""

#: ../../en/input/vector/oracle.txt:248
# 8b738c1eb29d4628b272b3ba5f9f6be2
msgid "You can define what version of database you are using to improve the internal sql. This is very useful when using geodetic SRIDs and MapServer functions that retrieve the extent from data."
msgstr ""

#: ../../en/input/vector/oracle.txt:253
# b0505df62f194aec9c6e95cda60189e8
msgid "USING VERSION 8i"
msgstr ""

#: ../../en/input/vector/oracle.txt:259
# be414ab522ea49f694e690dd57b6f0c9
msgid "This indicates MapServer to use a internal SQL that it's compatible with Oracle 8i version."
msgstr ""

#: ../../en/input/vector/oracle.txt:263
# bd7308f16ed5418ca35e05c85ca68737
msgid "USING VERSION 9i"
msgstr ""

#: ../../en/input/vector/oracle.txt:269
# 0191c994ee894d54b30ae1bc84137b06
msgid "The second indicates MapServer to use 9i version, is recommended to use this parameter if you are using 9i version because the internal SQL will use specific spatial functions that is need to retrieve data correctly from 9i Oracle Spatial versions."
msgstr ""

#: ../../en/input/vector/oracle.txt:275
# 5b4c8c4984864820bf00a83f775359bc
msgid "USING VERSION 10g"
msgstr ""

#: ../../en/input/vector/oracle.txt:281
# 39a6c77ec3a5490f805fe11df5177130
msgid "This indicates MapServer to use a internal SQL that it's compatible with Oracle 10g version."
msgstr ""

#: ../../en/input/vector/oracle.txt:285
# 5055c27e69b743758ae7592cc24d7b64
msgid "More information"
msgstr ""

#: ../../en/input/vector/oracle.txt:287
# 95398cc2eb404056b729fab5be8a2cb0
msgid "You can define any :ref:`PROJECTION` to your :ref:`LAYER` without problem, can be used for data with or without an SRID in Oracle."
msgstr ""

#: ../../en/input/vector/oracle.txt:290
# c161e7b41f484440bbb3191c763260dd
msgid "The native support for Oracle Spatial supports the defaults definition for SDO_GEOMETRY in database, the Oracle Spatial SDO package."
msgstr ""

#: ../../en/input/vector/oracle.txt:293
# a64bfacca45943deaff8c5f554f2757e
msgid "Information about the primary and secondary Oracle Spatial filters can be found in the Oracle Spatial User Guide (the \"Query Model\" section). Information about the SDO_FILTER and SDO_RELATE operators can be found in the \"Spatial Operators\" section, and information about the SDO_GEOM.RELATE function can be found in the \"Geometry Function\" section of the Oracle Spatial User Guide."
msgstr ""

#: ../../en/input/vector/oracle.txt:301
# 0b61eea8c60c4c13ab3fdceaac53ae63
msgid "Example of a :ref:`LAYER`"
msgstr ""

#: ../../en/input/vector/oracle.txt:319
# d6b91ed66109425f9c237e0993319e7c
msgid "You can specify the SID for your database, the SID alias needs to be supplied in the tnsnames.ora file of the Oracle client, e.g."
msgstr ""

#: ../../en/input/vector/oracle.txt:322
# bb93a319fd684bb78f27a1e9496e1b50
msgid "Example for tnsnames.ora:"
msgstr ""

#: ../../en/input/vector/oracle.txt:336
# 6c2b25c50a3a4f6b994978f4c3db014b
msgid "So after this you can define you layer connection as:"
msgstr ""

#: ../../en/input/vector/oracle.txt:343
# b00a80baabb44958a3c155068a7757c2
msgid ":ref:`Mapfile <mapfile>` syntax for OGR Oracle Spatial support"
msgstr ""

#: ../../en/input/vector/oracle.txt:345
# 54be391c9e61457e9107d6e318372b42
msgid "Syntax for your MAP file:"
msgstr ""

#: ../../en/input/vector/oracle.txt:354
# ec1e759df75244c0911d935bf498614b
msgid "Make sure you set the wms_extent METADATA for the LAYER, as otherwise the \"Getcapabilities\" request takes a lot of time."
msgstr ""

#: ../../en/input/vector/pgeo.txt:5
# f5b70bd7307644debd1e7344bcec41fc
msgid "ESRI Personal Geodatabase (MDB)"
msgstr ""

#: ../../en/input/vector/pgeo.txt:7
# e1a06c8910f34d45a31bf50b292409ac
msgid "ESRI Personal Geodatabases are basically Microsoft Access files that contain spatial information.  For more information see the ESRI `description page`_."
msgstr ""

#: ../../en/input/vector/pgeo.txt:14
# c30f9f793ef34a789e8cb2aa12450352
msgid "Similar to other database formats, the mdb file consists of several tables.  The geometry is held in a BLOB table column."
msgstr ""

#: ../../en/input/vector/pgeo.txt:19
# bc995e02580d4065afc58ea12f36a1d7
msgid "Personal geodatabase access is available through OGR. See the OGR `driver page`_ for specific driver information.  The driver is standard in any win32 build of GDAL/OGR version 1.3.2 or later.  For Linux/Unix, `MDBTools`_ ODBC drivers can be used for this (with some difficulty)."
msgstr ""

#: ../../en/input/vector/pgeo.txt:27
# a86471147db34743b0202b5593352757
msgid "OGR uses the names of spatial tables within the personal geodatabase (tables with a Shape column) as layers."
msgstr ""

#: ../../en/input/vector/pgeo.txt:30
# 31f10e83e41d4727b05ac6a1da786a61
msgid "The CONNECTION parameter must include the mdb extension, and the DATA parameter should be the name of the spatial table (or OGR layer)."
msgstr ""

#: ../../en/input/vector/pgeo.txt:42
# a4acd6417ed44dce87def1d451577d28
msgid "First you should make sure that your GDAL/OGR build contains the personal geodatabase \"PGeo\" driver, by using the '--formats' command:"
msgstr ""

#: ../../en/input/vector/pgeo.txt:61
# 15a81289b4d8490ea1f757c2f16ac33a
msgid "Once you have the PGeo driver you are ready to try an ogrinfo command on your database to get a list of spatial tables:"
msgstr ""

#: ../../en/input/vector/pgeo.txt:71
#: ../../en/input/vector/postgis.txt:141
#: ../../en/input/vector/sqlite.txt:76
# 6bf5bcb12d7e41f58530c6cc132f2e95
# fd1873f3865447c6b69cbccff035cd53
# ee6dbb8b812b47d6ae645a008756ab3b
msgid "Now use ogrinfo to get information on the structure of the spatial table:"
msgstr ""

#: ../../en/input/vector/pgeo.txt:98
# 2b6cd962bab14a7bb2cb78fcf8b0a75b
msgid "Note that you can also use an ODBC connection to access all of the tables in your geodatabase:"
msgstr ""

#: ../../en/input/vector/pgeo.txt:111
# f58623d6cc1049c99d36d80df243eada
msgid "(where \"testDSN\" is the name of your System DSN)"
msgstr ""

#: ../../en/input/vector/pgeo.txt:117
# 7c84845e5e204fc6b0088bb5583106e9
msgid "Direct Access to MDB"
msgstr ""

#: ../../en/input/vector/pgeo.txt:137
# 6b84b01b7fa94722a80809d4d65ddee7
msgid "Through an ODBC Connection"
msgstr ""

#: ../../en/input/vector/postgis.txt:5
#: ../../en/input/vector/postgis.txt:12
# fdcf551009044287bb28d6cdd8a79da8
# ce34b508e7c542cd8361a1b5687eb517
msgid "PostGIS/PostgreSQL"
msgstr ""

#: ../../en/input/vector/postgis.txt:14
# d0424d208ff246ddad611fe1875be839
msgid "`PostGIS <http://postgis.org/>`_ spatially enables the Open Source `PostgreSQL`_ database."
msgstr ""

#: ../../en/input/vector/postgis.txt:19
# 1aa0a0fdd72d492f833be4a6b86a8c82
msgid "The `PostGIS wiki page <https://github.com/mapserver/mapserver/wiki/PostGIS>`__ may include additional information."
msgstr ""

#: ../../en/input/vector/postgis.txt:24
# 3dee6d74d2874f5da35d2dc34d673978
msgid "Data Access /Connection Method"
msgstr ""

#: ../../en/input/vector/postgis.txt:26
# d202112999b0451db12f3e6d493b2138
msgid "PostGIS is supported directly by MapServer and must be compiled into MapServer to work."
msgstr ""

#: ../../en/input/vector/postgis.txt:29
# 4201a9a0ba3448d1acf83b7faeaf9a9c
msgid "The PostgreSQL client libraries (libpq.so or libpq.dll) must be present in the system's path environment for functionality to be present."
msgstr ""

#: ../../en/input/vector/postgis.txt:33
# f6b4b71a93ec4214a3170a4338595afa
msgid "The CONNECTIONTYPE parameter must be set to POSTGIS."
msgstr ""

#: ../../en/input/vector/postgis.txt:35
# 8c86370a2df244f1981b6584d93f3092
msgid "The CONNECTION parameter is used to specify the parameters to connect to the database.  CONNECTION parameters can be in any order.  Most are optional.  dbname is required.  user is required.  host defaults to localhost, port defaults to 5432 (the standard port for PostgreSQL)."
msgstr ""

#: ../../en/input/vector/postgis.txt:40
# 7e0f808d4011451fa1415b8afd481819
msgid "The DATA parameter is used to specify the data used to draw the map. The form of DATA is \"[geometry_column] from [table_name|sql_subquery] using unique [unique_key] using srid=[spatial_reference_id]\".  The \"using unique\" and \"using srid=\" clauses are optional when drawing features, but using them improves performance. If you want to make MapServer query calls to a PostGIS layer, your DATA parameter must include \"using unique\". Omitting it will cause the query to fail."
msgstr ""

#: ../../en/input/vector/postgis.txt:48
# a40cacb08f654b6c8fc2449726e06cfb
msgid "Here is a simple generic example:"
msgstr ""

#: ../../en/input/vector/postgis.txt:57
# 2574462b00ac4084a13bcf362e422c98
msgid "This example shows specifying the unique key and srid in the DATA line:"
msgstr ""

#: ../../en/input/vector/postgis.txt:65
# ceff275087ca4ff48e7aefe9c15a5bc3
msgid "This example shows using a SQL subquery to perform a join inside the database and map the result in MapServer. Note the \"as subquery\" string in the statement -- everything between \"from\" and \"using\" is sent to the database for evaluation:"
msgstr ""

#: ../../en/input/vector/postgis.txt:78
# 41b50b5039a148859f0a3b63f63d86bb
msgid "This example shows using a geometry function and database sort to limit the number of features and vertices returned to MapServer:"
msgstr ""

#: ../../en/input/vector/postgis.txt:89
# cf90b3f784a544bb84a002ae430ddd19
msgid "This example shows the use of the !BOX! substitution string to over-ride the default inclusion of the map bounding box in the SQL. By default the spatial box clause is appended to the SQL in the DATA clause, but you can use !BOX! to insert it anywhere you like in the statement. In general, you won't need to use !BOX!, because the PostgreSQL planner will generate the optimal plan from the generated SQL, but in some cases (complex sub-queries) a better plan can be generated by placing the !BOX! closer to the middle of the query:"
msgstr ""

#: ../../en/input/vector/postgis.txt:110
# 81ec795a53d64835ab41177a3c9b6185
msgid "OGRINFO can be used to read out metadata about PostGIS tables directly from the database."
msgstr ""

#: ../../en/input/vector/postgis.txt:113
# 260c89576a9946b7810a5bc0d249f1bd
msgid "First you should make sure that your GDAL/OGR build contains the PostgreSQL driver, by using the '--formats' command:"
msgstr ""

#: ../../en/input/vector/postgis.txt:132
# 77c161b746d44b3c85d90f1b62451b06
msgid "Once you have the driver you are ready to try an ogrinfo command on your database to get a list of spatial tables:"
msgstr ""

#: ../../en/input/vector/postgis.txt:182
# 3b72e6ab35e94bbb9ea1aa5e47b37e4b
msgid "For more info about PostGIS and MapServer see the PostGIS docs: http://postgis.org/documentation/"
msgstr ""

#: ../../en/input/vector/postgis.txt:186
# 522a4e916e184248ac21ce488fe888a5
msgid "Support for SQL/MM Curves"
msgstr ""

#: ../../en/input/vector/postgis.txt:188
# 8a204b76e5c048218ab66b512045de51
msgid "PostGIS is able to store circular interpolated curves, as part of the SQL Multimedia Applications Spatial specification (read about the `SQL/MM specification <http://subs.emis.de/LNI/Proceedings/Proceedings26/GI-Proceedings.26-17.pdf>`__)."
msgstr ""

#: ../../en/input/vector/postgis.txt:193
# 71069d8f46964a4d868b86a9f0785128
msgid "For more information about PostGIS' support, see the *SQL-MM Part 3* section in the PostGIS documentation, such as `here <http://www.postgis.org/documentation/manual-1.5/ch04.html#SQL_MM_Part3>`__."
msgstr ""

#: ../../en/input/vector/postgis.txt:197
# d5f99fa13a3a4179a0ebab77405dd719
msgid "As of MapServer 6.0, the PostGIS features CircularString, CompoundCurve, CurvePolygon, MultiCurve, and MultiSurface can be drawn through MapServer directly."
msgstr ""

#: ../../en/input/vector/postgis.txt:202
# 01f93c464abb4ca9b566ecca2fb53286
msgid "Example#1: CircularString in MapServer"
msgstr ""

#: ../../en/input/vector/postgis.txt:204
#: ../../en/input/vector/postgis.txt:237
#: ../../en/input/vector/postgis.txt:270
#: ../../en/input/vector/postgis.txt:304
#: ../../en/input/vector/postgis.txt:337
# f01fc7fc100c4d30a6a63d9de117499f
# f65576abc54a486ca420056300556fd5
# 7b58a92364e4413583c9b4968addc726
# 50d87ce56f414884a3e29f833542c5e0
# 898d3f8625af4eff9bffb3d5bbbe85b6
msgid "The following is the Well Known Text of the feature loading into PostGIS:"
msgstr ""

#: ../../en/input/vector/postgis.txt:211
#: ../../en/input/vector/postgis.txt:244
#: ../../en/input/vector/postgis.txt:278
#: ../../en/input/vector/postgis.txt:311
#: ../../en/input/vector/postgis.txt:346
# cd1ef60b33d94f9296911d734ec90237
# 542f96211b664fcb97fa945981bac5ce
# 1b511ed86d8c46d8b2fdc0e8b0f2b528
# cf67646c15414c04997e1ec1f91a38d0
# d6f29b4bb36041acacf18ade3b796ed5
msgid "An example MapServer layer might look like:"
msgstr ""

#: ../../en/input/vector/postgis.txt:230
#: ../../en/input/vector/postgis.txt:263
#: ../../en/input/vector/postgis.txt:297
#: ../../en/input/vector/postgis.txt:330
#: ../../en/input/vector/postgis.txt:365
# 7604b86eb6994f4da20616735f574b54
# aebe36cb002b4df086dd44204ea1e0af
# c3cc38ec9eac4231a066e4f3ac5d02d5
# 52478d3e12ba423581c3596652531b1e
# c838f895f2c74b77ab8aa4a9d1c6cc1b
msgid "And testing with :ref:`shp2img` should produce a map image of:"
msgstr ""

#: ../../en/input/vector/postgis.txt:235
# be76d7e127974f828038b7f658355cb5
msgid "Example#2: CompoundCurve in MapServer"
msgstr ""

#: ../../en/input/vector/postgis.txt:268
# f2c8ac07c65a48b5a56b50ce227cb796
msgid "Example#3: CurvePolygon in MapServer"
msgstr ""

#: ../../en/input/vector/postgis.txt:302
# ca605a479966458f9b5fd1d590135e31
msgid "Example#4: MultiCurve in MapServer"
msgstr ""

#: ../../en/input/vector/postgis.txt:335
# 2df21f07d3a647a1a96940c1236193f2
msgid "Example#5: MultiSurface in MapServer"
msgstr ""

#: ../../en/input/vector/postgis.txt:370
# cdc6d5cbe21641b193ae4955cfd9e7a9
msgid "Using MapServer < 6.0"
msgstr ""

#: ../../en/input/vector/postgis.txt:372
# 432ce03a6eca4a98b07e6ba5aa1dbb3e
msgid "If you cannot upgrade to MapServer 6.0, then you can use the PostGIS function *ST_CurveToLine()* in your MapServer LAYER to draw the curves (note that this is much slower however):"
msgstr ""

#: ../../en/input/vector/sdts.txt:5
# 1297a1dc8a974eb29ce4397ec49dc19a
msgid "SDTS"
msgstr ""

#: ../../en/input/vector/sdts.txt:7
# 19f828258a80462e8904c5c627c60b3f
msgid "This is a United States Geological Survey (USGS) format. SDTS has a raster and a vector format.  The raster format is not supported in MapServer.  Only the vector formats are supported, including VTP and DLG files."
msgstr ""

#: ../../en/input/vector/sdts.txt:11
# 6880b18695ce45a986ee51006d982745
msgid "SDTS files are often organized into state-sized pieces.  For example, all of the state of Maryland (MD), U.S.A."
msgstr ""

#: ../../en/input/vector/sdts.txt:13
# 11b3e5239ffb415692905b680f3adba5
msgid "Files are also available for multiple types of features including hydrography, transportation and administrative boundaries."
msgstr ""

#: ../../en/input/vector/sdts.txt:16
# 042766df72ca4881b679f10972cc4da4
msgid "This example uses transportation data, which consists of 35 separate files, each with the suffix DDF:"
msgstr ""

#: ../../en/input/vector/sdts.txt:36
# 6c1f35e745344b828ad58d025860a5f4
msgid "SDTS access is available in MapServer through OGR."
msgstr ""

#: ../../en/input/vector/sdts.txt:38
# 8553d143a5754cc38ebae2728a0f64d3
msgid "The path (which can be relative) to the catalog file (????CATD.DDF) is required, including file extension."
msgstr ""

#: ../../en/input/vector/sdts.txt:40
# 20014c9509d74cdf89cac1f5372f93bc
msgid "There are multiple layers in the SDTS catalog, some of which are only attributes and have no geometries."
msgstr ""

#: ../../en/input/vector/sdts.txt:42
# dc5344dfcd99499e9b73d2680471fa85
msgid "The layer name is specified with the DATA parameter"
msgstr ""

#: ../../en/input/vector/sdts.txt:47
# 28823981e27448a08754a10f059c6d0f
msgid "Using ogrinfo on a catalog file (note that the first 7 layers do not have geometries):"
msgstr ""

#: ../../en/input/vector/shapefiles.txt:5
# 0ce3781be97c4afaad9c97fe458c4ca4
msgid "ESRI Shapefiles (SHP)"
msgstr ""

#: ../../en/input/vector/shapefiles.txt:7
# eaf8556955184f68a891cb5602adbce3
msgid "Also known as ESRI ArcView Shapefiles or ESRI Shapefiles.  ESRI is the company that introduced this format.  ArcView was the first product to use shapefiles."
msgstr ""

#: ../../en/input/vector/shapefiles.txt:13
# de7bef89c4434c9e824450465bab21d5
msgid "Shapefiles are made up of a minimum of three similarly named files, with different suffixes::"
msgstr ""

#: ../../en/input/vector/shapefiles.txt:22
# 367805b69c9941f5b3575ca0c98f1b1d
msgid "Shapefile access is built directly into MapServer.  It is also available through OGR, but direct access without OGR is recommended and discussed here. The path to the shapefile is required.  No file extension should be specified. Shapefiles only hold one layer of data, therefore no distinction needs to be made."
msgstr ""

#: ../../en/input/vector/shapefiles.txt:31
# 0b466e0d0d664a42adfb72cc6e95c408
msgid "The directory can serve as a data source."
msgstr ""

#: ../../en/input/vector/shapefiles.txt:32
# 73eef848fd2345e0b2698486add94afe
msgid "Each shapefile in a directory serves as a layer."
msgstr ""

#: ../../en/input/vector/shapefiles.txt:33
# 466116819e3a4dc6a2e396db41d355d9
msgid "A shapefile can also be a data source.  In this case the layer has the same prefix as the shapefile."
msgstr ""

#: ../../en/input/vector/shapefiles.txt:36
# facabdbda8eb4a50bdcb599ec894e7a9
msgid "Using ogrinfo on a directory with multiple shapefiles::"
msgstr ""

#: ../../en/input/vector/shapefiles.txt:46
# 78ab3782122a4171be4253cfd013d363
msgid "Using ogrinfo on a single shapefile::"
msgstr ""

#: ../../en/input/vector/shapefiles.txt:54
# 6fce6e725ce14967aa3597e225bae432
msgid "Using ogrinfo to examine the structure of the file/layer::"
msgstr ""

#: ../../en/input/vector/shapefiles.txt:75
# fd8783adbeac46bb830c48e1ff7a00bb
msgid "Map File Example::"
msgstr ""

#: ../../en/input/vector/sqlite.txt:8
# b79a0d0b17df4ea099a3d899c40c88b7
msgid "SpatiaLite"
msgstr ""

#: ../../en/input/vector/sqlite.txt:10
# 70536de72fdb436aaabba4f6b07ed431
msgid "SpatiaLite spatially enables the file-based SQLite database.  For more information see the SpatiaLite `description page`_."
msgstr ""

#: ../../en/input/vector/sqlite.txt:18
# 2dde8ec2a28f40ed9c1255f043ad0aac
msgid "Similar to other database formats, the .sqlite file consists of several tables.  The geometry is held in a BLOB table column."
msgstr ""

#: ../../en/input/vector/sqlite.txt:24
# 0c732b57ebb4435181ea68e97fdfcc83
msgid "Spatialite access is available through OGR. See the OGR `driver page`_ for specific driver information.  The driver is available in GDAL/OGR version 1.7.0 or later."
msgstr ""

#: ../../en/input/vector/sqlite.txt:30
# 22318c72d84647b6bf4c7987f9c3e53c
msgid "OGR uses the names of spatial tables within the SpatiaLite database (tables with a geometry column that are registered in the geometry_columns table) as layers."
msgstr ""

#: ../../en/input/vector/sqlite.txt:34
# 8fdca41582434c0dac6013c96301d9c9
msgid "The CONNECTION parameter must include the sqlite extension, and the DATA parameter should be the name of the spatial table (or OGR layer)."
msgstr ""

#: ../../en/input/vector/sqlite.txt:46
# 9e459db96a17416abb5e43b364bb8dc6
msgid "First you should make sure that your GDAL/OGR build contains the spatialite \"SQLite\" driver, by using the '--formats' command:"
msgstr ""

#: ../../en/input/vector/sqlite.txt:59
# 7f17497ec37e460092c5d625312d9b1a
msgid "If you don't have the driver, you might want to try the `MS4W`_ or `OSGeo4W`_ packages, which include the driver."
msgstr ""

#: ../../en/input/vector/sqlite.txt:65
# 6555d28687ad48f6b1e4c8747d5447a1
msgid "Once you have confirmed that you have the SQLite driver you are ready to try an ogrinfo command on your database to get a list of spatial tables:"
msgstr ""

#: ../../en/input/vector/sqlite.txt:126
# db56281328504022ba8e144f789875ef
msgid "Standard connection"
msgstr ""

#: ../../en/input/vector/sqlite.txt:146
# 20855a04e1fb46c7a5c9438346c1150d
msgid "Connection utilizing SQL syntax"
msgstr ""

#: ../../en/input/vector/sqlite.txt:166
# ef3668d039114150b72efcfb6891d9c5
msgid "Connection utilizing joined table for additional attributes"
msgstr ""

#: ../../en/input/vector/sqlite.txt:187
# 7835a007a1f74ebdbce1ce8efd41035c
msgid "Standard Connection with a filter"
msgstr ""

#: ../../en/input/vector/sqlite.txt:208
# b03f3a790f4e4072b1f28ff77a6296b5
msgid "Filter utilizing SQL syntax"
msgstr ""

#: ../../en/input/vector/tiger.txt:5
# c3526934a89444fd983ce7c07b2bf84d
msgid "USGS TIGER"
msgstr ""

#: ../../en/input/vector/tiger.txt:7
# 1fa5da85fa2249ea98a45e38d66a21f7
msgid "TIGER/Line files are created by the US Census Bureau and cover the entire US.  They are often referred simply as TIGER files.  For more information see: http://www.census.gov/geo/www/tiger/."
msgstr ""

#: ../../en/input/vector/tiger.txt:13
# d3cc4e31738b44e0a9762534c2c8e4bb
msgid "TIGER/Line files are text files and directory-based data sources. For example, one county folder TGR06059 contains several associated files:"
msgstr ""

#: ../../en/input/vector/tiger.txt:26
# b74c2043f94b4852a87c7488701ee4ca
msgid "TIGER/Line access occurs through an OGR CONNECTION"
msgstr ""

#: ../../en/input/vector/tiger.txt:27
# 891829185c994f988640f2d8b46a838c
msgid "The full path to the directory containing the associated files is required in the CONNECTION string."
msgstr ""

#: ../../en/input/vector/tiger.txt:29
# 0f2c91513c0d4efaacbfee8061e042d4
msgid "The feature type is specified in the DATA parameter"
msgstr ""

#: ../../en/input/vector/tiger.txt:34
# 766dbb4b47d442f984241601fd91cc74
msgid "Using ogrinfo on a TIGER directory to retrieve feature types:"
msgstr ""

#: ../../en/input/vector/tiger.txt:61
# 13529bb1b0534d56a23f5165ad1a0d47
msgid "Using ogrinfo to examine the structure of the TIGER feature type CompleteChain:"
msgstr ""

#: ../../en/input/vector/wfs.txt:5
# 792a7ce819ad4179a1fedd876ac25eb8
msgid "WFS"
msgstr ""

#: ../../en/input/vector/wfs.txt:7
# 06d051d6ef4b43bf98fc933a766bbdd1
msgid "WFS is an Open Geospatial Consortium (OGC) specification.  For more information about the format itself, see: http://www.opengeospatial.org/standards/wfs"
msgstr ""

#: ../../en/input/vector/wfs.txt:9
# a261d5374f7e44d2b345f22de1c38deb
msgid "WFS allows a client to retrieve geospatial data encoded in Geography Markup Language (GML) from multiple Web Feature Services.  GML is built on the standard web language XML."
msgstr ""

#: ../../en/input/vector/wfs.txt:13
# 44cdd99f8327429f83a2b7d680e7c20f
msgid "WFS differs from the popular Web Map Service (WMS) specification in that WFS returns a subset of the data in valid GML format, not just a graphic image of data."
msgstr ""

#: ../../en/input/vector/wfs.txt:19
# d837a31425e9447985c6ab083111e8cd
msgid "Capabilities"
msgstr ""

#: ../../en/input/vector/wfs.txt:21
# 3986bb305b8342bf960496b6693c108c
msgid "Requesting the capabilities using the GetCapabilities request to a WFS server returns an XML document showing what layers and  projections are available, etc. Example of a WFS GetCapabilities URL:"
msgstr ""

#: ../../en/input/vector/wfs.txt:26
# 49aac53342a440729412ca1a1e3406dc
msgid "http://demo.mapserver.org/cgi-bin/wfs?SERVICE=WFS&VERSION=1.0.0&REQUEST=GetCapabilities"
msgstr ""

#: ../../en/input/vector/wfs.txt:28
# ce6ca4ee3a914defb2f9ef74779cf875
msgid "Example of the Resulting XML from GetCapabilties:"
msgstr ""

#: ../../en/input/vector/wfs.txt:55
# 6e9fb32f9035463f96c8d30d11f9d913
msgid "WFS access is a core MapServer feature. MapServer currently supports WFS version 1.0.0"
msgstr ""

#: ../../en/input/vector/wfs.txt:58
# f89e9b4c34474171996f36e7082797ab
msgid "The CONNECTIONTYPE WFS parameter must be used."
msgstr ""

#: ../../en/input/vector/wfs.txt:60
# b0cc614610954a8ea2ced6ed21596a37
msgid "WFS layers can be requested through a layer in a map file, or you can request the GML directly through the browser with a GetFeature request.  You can specify a specific layer with the TypeName request.  In a map file the name/value pairs should be put into a METADATA object."
msgstr ""

#: ../../en/input/vector/wfs.txt:66
# 3fa9ec1059cc405ab072ed532210f0c3
msgid "You can limit the number of features returned in the GML by using the MaxFeatures option (e.g. &MAXFEATURES=100)."
msgstr ""

#: ../../en/input/vector/wfs.txt:69
# 576f4145ca77497495ea76cf1a1389de
msgid "Example of a WFS Request Directly Through the Browser:"
msgstr ""

#: ../../en/input/vector/wfs.txt:71
# ca43618abfc8491eb4735750c329fe0e
msgid "The following URL requests the GML for the layer continents.  (see the GetCapabilities above for the possible layers available on this test server) .  The URL is all one line, broken up here for readability (click `here <http://demo.mapserver.org/cgi-bin/wfs?SERVICE=WFS&VERSION=1.0.0&REQUEST=getfeature&TYPENAME=continents&MAXFEATURES=100>`__ for a working link). ::"
msgstr ""

