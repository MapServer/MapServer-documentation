# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Regents of the University of Minnesota
# This file is distributed under the same license as the MapServer package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MapServer 6.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-22 13:22+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../en/optimization/debugging.txt:8
# f2beb499e9fa4794b3a33bedf7f2de58
msgid "Debugging MapServer"
msgstr ""

#: ../../../en/optimization/debugging.txt:10
# 5347e82ba37e4529b7bf36bdd5646922
msgid "Jeff McKenna"
msgstr ""

#: ../../../en/optimization/debugging.txt:11
# ec32ce1316a3457ca87c7ba62bbca7a1
msgid "jmckenna at gatewaygeomatics.com"
msgstr ""

#: ../../../en/optimization/debugging.txt:12
# 7f3ea3bdf49f46a9890813240c9290b6
msgid "2013-07-02"
msgstr ""

#: ../../../en/optimization/debugging.txt:19
#: ../../../en/optimization/fastcgi.txt:24
#: ../../../en/optimization/mapfile.txt:21
#: ../../../en/optimization/tileindex.txt:20
# 82775845a13f4de8907ec8252532ddc2
# 1eb6bfa09ddb4bb08cbe8fc4cee412ea
# d2dc1df7c73d43d8a107f624a5c0030d
# a7b0125e00af4918bc4540494bab6119
msgid "Introduction"
msgstr ""

#: ../../../en/optimization/debugging.txt:21
# 6528eda3a39f42259100947de6b26deb
msgid "When developing an application for the Internet, you will inevitably across problems many problems in your environment.  The goal of this guide is to assist you with locating the problem with your MapServer application."
msgstr ""

#: ../../../en/optimization/debugging.txt:27
# 13a9de12376d442fb8159dd5c2c541ec
msgid "Links to Related Information"
msgstr ""

#: ../../../en/optimization/debugging.txt:29
# df238b31569646fa9ea1e706800bca2c
msgid ":ref:`RFC 28: Redesign of LOG/DEBUG output mechanisms <rfc28>`"
msgstr ""

#: ../../../en/optimization/debugging.txt:30
# 730e84593d374f308014fb80217059b4
msgid ":ref:`MapServer Errors <errors>`"
msgstr ""

#: ../../../en/optimization/debugging.txt:33
# c9c710e9ab1549c1a2d46b2e081995c8
msgid "Steps to Enable MapServer Debugging"
msgstr ""

#: ../../../en/optimization/debugging.txt:35
# 87155b8940044f6d999d1ddd5254d215
msgid "Starting with MapServer 5.0, you are able to control the levels of debugging/logging information returned to you by MapServer, and also control the location of the output log file."
msgstr ""

#: ../../../en/optimization/debugging.txt:39
# cbb89cbde7674fcca750cc905f079ed7
msgid "In technical terms, there are msDebug() calls in various areas of the MapServer code that generate information that may be useful in tuning and troubleshooting applications."
msgstr ""

#: ../../../en/optimization/debugging.txt:47
# 989bc1b36c9e4e19aeb359742b528b6e
msgid "Step 1: Set the MS_ERRORFILE Variable"
msgstr ""

#: ../../../en/optimization/debugging.txt:49
# 6ed5d97370a24e548a0bbacd19e77347
msgid "The **MS_ERRORFILE** variable is used to specify the output of debug messages from MapServer.  You can pass the following values to **MS_ERRORFILE**:"
msgstr ""

#: ../../../en/optimization/debugging.txt:63
# a62dc32f509f4297bc53b7cda92f6847
msgid "**[filename]**"
msgstr ""

#: ../../../en/optimization/debugging.txt:54
# 584edb42063943f09aa45f1db5b7b884
msgid "Full path and filename of a log file, to contain MapServer's debug messages.  Any file extension can be used, but *.log* or *.txt* is recommended.  The file will be created, if it does not already exist."
msgstr ""

#: ../../../en/optimization/debugging.txt:59
# 4f83686ae94449ee88fcc1185d2d5da9
msgid "Starting with MapServer 6.0, a filename with relative path can be passed via the CONFIG MS_ERRORFILE directive, in which case the filename is relative to the mapfile location. Note that setting MS_ERRORFILE via an environment variable always requires an absolute path since there would be no mapfile to make the path relative to."
msgstr ""

#: ../../../en/optimization/debugging.txt:71
# 13ec4af82c8945ffb0e7d5268d9e040c
msgid "**stderr**"
msgstr ""

#: ../../../en/optimization/debugging.txt:66
# 632125922a744cb3bda82a5f9b635196
msgid "Use this to send MapServer's debug messages to the Web server's log file (i.e. \"standard error\").  If you are using Apache, your debug messages will be placed in the Apache *error_log* file.  If you are using Microsoft IIS, your debug messages will be sent to *stdout* (i.e. the browser), so its use is discouraged. With IIS it is recommended to direct output to a file instead."
msgstr ""

#: ../../../en/optimization/debugging.txt:75
# ed241f6ccc414b2485e8c21d3c4e6487
msgid "**stdout**"
msgstr ""

#: ../../../en/optimization/debugging.txt:74
# 6969efaa2a8e439a9bdc71a17ad05e12
msgid "Use this to send MapServer's debug messages to the standard output (i.e. the browser), combined with the rest of MapServer's output."
msgstr ""

#: ../../../en/optimization/debugging.txt:81
# cf8b92f010bb4f4c90ed11e5ff2c8717
msgid "**windowsdebug**"
msgstr ""

#: ../../../en/optimization/debugging.txt:78
# 915b798ea7ec4bffa52e662989db9466
msgid "Use this to send MapServer's debug messages to the Windows OutputDebugString API, allowing the use of external programs like SysInternals debugview to display the debug output."
msgstr ""

#: ../../../en/optimization/debugging.txt:84
# 8161959088cf427ebc35bb36084daf87
msgid "Through the Mapfile"
msgstr ""

#: ../../../en/optimization/debugging.txt:86
# b0ddb2720aab4261b4a56c9be15ff1b7
msgid "The recommended way to set the **MS_ERRORFILE** variable is in your mapfile, within the :ref:`MAP` object, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:101
# c5663dfdce464798b44817ddd620c225
msgid "Through an Environment Variable"
msgstr ""

#: ../../../en/optimization/debugging.txt:103
# d30fdda5492744e49e20931d2a46be3d
msgid "You can also set the **MS_ERRORFILE** variable as an environment variable on your system.  Apache users can set the environment variable in Apache's *httpd.conf* file, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:111
#: ../../../en/optimization/debugging.txt:243
# ce48141edcca4e76a0a4003d636f22b6
# b9f0df0fafb04036b2f6059771ea2fd1
msgid "Windows users can alternatively set the environment variable through the Windows System Properties; but make sure to set a SYSTEM environment variable."
msgstr ""

#: ../../../en/optimization/debugging.txt:116
# fb2104c47f084c4a8d6152af2aa745df
msgid "If both the *MS_ERRORFILE* environment variable is set and a *CONFIG MS_ERRORFILE* is also set, then the CONFIG directive takes precedence."
msgstr ""

#: ../../../en/optimization/debugging.txt:124
# be0361677b04430b8a1442156b09ba1b
msgid "Step 2: Set the DEBUG Level"
msgstr ""

#: ../../../en/optimization/debugging.txt:126
# 7ab1fc7ea72c48d29f426f360d1126a3
msgid "You can retrieve varying types of debug messages by setting the *DEBUG* parameter in the :ref:`mapfile`.  You can place the *DEBUG* parameter in any LAYER in the mapfile for layer-specific debug information, or instead, set it once in the MAP object to get general debug information. Use the value of the *DEBUG* parameter to set the type of information returned, as follows:"
msgstr ""

#: ../../../en/optimization/debugging.txt:134
# e2cc2c42236e487fb01f8636152f8c12
msgid "DEBUG Levels"
msgstr ""

#: ../../../en/optimization/debugging.txt:141
# 69cd154e9cbf4eeda637528beb030c4d
msgid "**Level 0**"
msgstr ""

#: ../../../en/optimization/debugging.txt:137
# 844c176373d3436982ae723af503d91d
msgid "Errors only (DEBUG OFF, or DEBUG 0)"
msgstr ""

#: ../../../en/optimization/debugging.txt:139
# 631d34a4881b48898f5c6f4c71f35fe3
msgid "In level 0, only msSetError() calls are logged to MS_ERORFILE. No msDebug() output at all.  This is the default and corresponds to the original behavior of MS_ERRORFILE in MapServer 4.x"
msgstr ""

#: ../../../en/optimization/debugging.txt:150
# 49a94eb828044cdf9835563946ae7e48
msgid "**Level 1**"
msgstr ""

#: ../../../en/optimization/debugging.txt:144
# 1c6169a47b1b4e959642c8ef9f1f67d7
msgid "Errors and Notices (DEBUG ON, or DEBUG 1)"
msgstr ""

#: ../../../en/optimization/debugging.txt:146
# 03a6e281e0d34a8ea3870838db746bce
msgid "Level 1 includes all output from Level 0 plus msDebug() warnings about common pitfalls, failed assertions or non-fatal error situations (e.g. missing or invalid values for some parameters, missing shapefiles in tileindex, timeout error from remote WMS/WFS servers, etc.)"
msgstr ""

#: ../../../en/optimization/debugging.txt:157
# 91f5f73ed12c40d8ae08b5a9318077ca
msgid "**Level 2**"
msgstr ""

#: ../../../en/optimization/debugging.txt:153
# 5fa93c7a59484674920a0efdbcf61b00
msgid "Map Tuning (DEBUG 2)"
msgstr ""

#: ../../../en/optimization/debugging.txt:155
# 54462c0ced9a4dceb7eccdcb32df4273
msgid "Level 2 includes all output from Level 1 plus notices and timing information useful for tuning mapfiles and applications.  *this is the recommended minimal debugging level*"
msgstr ""

#: ../../../en/optimization/debugging.txt:164
# ec4a39247c9f44738e081c7fc94510ce
msgid "**Level 3**"
msgstr ""

#: ../../../en/optimization/debugging.txt:160
# 4246c5efd15340cf908084db5413700f
msgid "Verbose Debug (DEBUG 3)"
msgstr ""

#: ../../../en/optimization/debugging.txt:162
# 804cc30abc9a4baca054d4dbcd5cc5e2
msgid "All of Level 2 plus some debug output useful in troubleshooting problems such as WMS connection URLs being called, database connection calls, etc."
msgstr ""

#: ../../../en/optimization/debugging.txt:169
# bc3d0b3413cb4ba1987d4bbc20bfcb92
msgid "**Level 4**"
msgstr ""

#: ../../../en/optimization/debugging.txt:167
# 8e569af462134781a890767fee68e83a
msgid "Very Verbose Debug (DEBUG 4)"
msgstr ""

#: ../../../en/optimization/debugging.txt:169
# 9a718196bc3f42f0b082c39317a00779
msgid "Level 3 plus even more details..."
msgstr ""

#: ../../../en/optimization/debugging.txt:176
# 4ad58d1e8d2843deba76434568b1b6a7
msgid "**Level 5**"
msgstr ""

#: ../../../en/optimization/debugging.txt:172
# 5fb0b5b77bbf4ff887104567f8ebee3a
msgid "Very Very Verbose Debug (DEBUG 5)"
msgstr ""

#: ../../../en/optimization/debugging.txt:174
# c41dfc4b50c348359f3475bad699a582
msgid "Level 4 plus any msDebug() output that might be more useful to developers than to users."
msgstr ""

#: ../../../en/optimization/debugging.txt:179
# 3e39fa9d24eb400fa062bb13640c6f20
msgid "Mapfile Example: Map-Level Debug"
msgstr ""

#: ../../../en/optimization/debugging.txt:181
# bb129feba19c4760b56379ecd176fdef
msgid "The following example is the recommended method to set the *DEBUG* parameter for the map-level:"
msgstr ""

#: ../../../en/optimization/debugging.txt:200
# 20f79ec5e56a46118ae2a1541c509cd5
msgid "Mapfile Example: Layer-Level Debug"
msgstr ""

#: ../../../en/optimization/debugging.txt:202
# a964456c9f034b8fbd26e1fc89b16c50
msgid "The following example is the recommended method to set the *DEBUG* parameter for a layer:"
msgstr ""

#: ../../../en/optimization/debugging.txt:221
# 420f69de703540bcac687a344c2d1371
msgid "The MS_DEBUGLEVEL Environment Variable"
msgstr ""

#: ../../../en/optimization/debugging.txt:223
# dec8937411174f7f8f305e20e0a7aafe
msgid "Instead of setting the *DEBUG* Debug level in each of your mapfiles, you can also be set the level globally by using the *MS_DEBUGLEVEL* environment variable."
msgstr ""

#: ../../../en/optimization/debugging.txt:227
# 179881a1eadd44dc974cb5fdedc49c30
msgid "When set, this value is used as the default debug level value for all map and layer objects as they are loaded by the mapfile parser. This option also sets the debug level for any msDebug() call located outside of the context of a map or layer object, for instance for debug statements relating to initialization before a map is loaded. If a DEBUG value is also specified in the mapfile in some map or layer objects then the local value (in the mapfile) takes precedence over the value of the environment variable."
msgstr ""

#: ../../../en/optimization/debugging.txt:236
# a502e0bf8ac745538420d7eb14b34f95
msgid "Apache users can set the environment variable in Apache's *httpd.conf* file, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:251
# 67c5c6cee3114e7fac2a895a8a95f04f
msgid "Step 3: Turn on CPL_DEBUG (optional)"
msgstr ""

#: ../../../en/optimization/debugging.txt:253
# 2a0bb0e4ed604723be70e1b9696115aa
msgid "MapServer relies on the `GDAL <http://www.gdal.org/>`__ library to access most data layers, so you may wish to turn on GDAL debugging, to hopefully get more information on how GDAL is accessing your data file.  This could be very helpful for problems with accessing raster files and PostGIS tables.  You can trigger this GDAL output by setting the **CPL_DEBUG** variable in your mapfile, within the :ref:`MAP` object, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:276
# 54073d33580146cd99c4ade3c127212d
msgid "Step 4: Turn on PROJ_DEBUG (optional)"
msgstr ""

#: ../../../en/optimization/debugging.txt:278
# 7148dc733ccc4466acc35d494910ef51
msgid "MapServer relies on the `PROJ.4 <http://trac.osgeo.org/proj/>`__ library to handle data projections, so you may wish to turn on PROJ debugging, to hopefully get more information back from the PROJ library.  You can trigger this PROJ output by setting the **PROJ_DEBUG** variable in your mapfile, within the :ref:`MAP` object, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:297
# 04be25589b334382a61e0b22f295c7bd
msgid "Step 5: Test your Mapfile"
msgstr ""

#: ../../../en/optimization/debugging.txt:299
# b28ce9e72fac44188f36718c8bc8b435
msgid "Once you have set the *MS_ERRORFILE* and *DEBUG* level in your mapfile, you should now test your mapfile and read your generated log file."
msgstr ""

#: ../../../en/optimization/debugging.txt:307
# 4b9dd7670b8546b7a672e3f754380f39
msgid "Using shp2img"
msgstr ""

#: ../../../en/optimization/debugging.txt:309
# 73098ec4c5c94d278ea4006c8d17ec5a
msgid "The recommended way to test your mapfile is to use the MapServer commandline utility :ref:`shp2img`, to verify that your mapfile creates a valid map image. :ref:`shp2img` should be included in your MapServer installation (`MS4W <http://www.maptools.org/ms4w>`__ users need to execute *setenv.bat* before using the utility)."
msgstr ""

#: ../../../en/optimization/debugging.txt:315
# f906eb2b38c14bc4ae380ce9898fd995
msgid "You can set the *DEBUG* level by passing the :ref:`shp2img` following parameters to your commandline call:"
msgstr ""

#: ../../../en/optimization/debugging.txt:319
# 281ec637f328409eb8d9c3ea1ab3af30
msgid "If you have already set *MS_ERRORFILE* in your mapfile, you must comment this out in order to use these :ref:`shp2img` options"
msgstr ""

#: ../../../en/optimization/debugging.txt:323
# a280db0caf7540adba3c307a7ba4b906
msgid "When using :ref:`shp2img` to debug, your layer's STATUS should be set to ON or DEFAULT.  If the layer's STATUS is set to OFF, you must additionally pass the layer name to :ref:`shp2img` by using the \"``-l layername``\" syntax"
msgstr ""

#: ../../../en/optimization/debugging.txt:329
# d514d377af6c4eb4853eb54c2c0bef3f
msgid "-all_debug"
msgstr ""

#: ../../../en/optimization/debugging.txt:331
# dd41e2499ba247bfb8e3fcf77b5b10c7
msgid "Use this setting to set the debug level for the MAP object and all layers. *this is the recommended switch to use*"
msgstr ""

#: ../../../en/optimization/debugging.txt:360
# 8693028c09864255aa5da139796e50e8
msgid "-map_debug"
msgstr ""

#: ../../../en/optimization/debugging.txt:362
# a66971f275694902a0374afd791426de
msgid "Use this setting to set the debug level for the MAP object only."
msgstr ""

#: ../../../en/optimization/debugging.txt:380
# 34ddf89804ed4ac48dce4ffa73ffa37d
msgid "-layer_debug"
msgstr ""

#: ../../../en/optimization/debugging.txt:382
# 8069af018ca141379138a6d20af571f9
msgid "Use this setting to set the debug level for one layer object only."
msgstr ""

#: ../../../en/optimization/debugging.txt:396
# 0dde0cd5bd384058bf76a3f376b0db29
msgid "Set CPL_DEBUG"
msgstr ""

#: ../../../en/optimization/debugging.txt:398
# 6f45da3a5c5f4aab86a01b91b45c06e3
msgid "At the commandline execute the following:"
msgstr ""

#: ../../../en/optimization/debugging.txt:418
# 01d1930ac5114087b11dfdc419a89348
msgid "Reading Errors Returned by shp2img"
msgstr ""

#: ../../../en/optimization/debugging.txt:420
# 174a17eb21394648855b6c036390efe4
msgid "If there is a problem with your mapfile, :ref:`shp2img` should output the line number in your mapfile that is causing the trouble.  The following tells us that there is a problem on line 85 of my mapfile:"
msgstr ""

#: ../../../en/optimization/debugging.txt:428
# eeeb7668d2774f60a82a82e8c8e7e4ed
msgid "If you are using mapfile :ref:`INCLUDEs <include>`, it may be tricky to track down this line number, but most of the time the line number is useful."
msgstr ""

#: ../../../en/optimization/debugging.txt:433
# 7815766058b54f269d2459d7e4c73917
msgid "Using mapserv CGI"
msgstr ""

#: ../../../en/optimization/debugging.txt:435
# a7ef0f2b485241c5b6761d179ba79483
msgid "Another handy way to test your mapfile is to call the mapserv CGI executable at the :ref:`commandline <mapserv>`, such as the following:"
msgstr ""

#: ../../../en/optimization/debugging.txt:446
#: ../../../en/optimization/debugging.txt:442
# 8a5f10fb15184ca6bea84a7b600b4f70
# 5a01c0bfecda40fe8daac627c173964c
msgid "ON_MISSING_DATA"
msgstr ""

#: ../../../en/optimization/debugging.txt:448
# 1974d163495c4996aff40df6bac1c9a6
msgid "If you are using tile indexes to access your data, you should also be aware of the configuration settings added in MapServer 5.4 that allow you to tell MapServer how to handle missing data in tile indexes. Please see the *CONFIG* parameter's *ON_MISSING_DATA* setting in the :ref:`map` object for more information."
msgstr ""

#: ../../../en/optimization/debugging.txt:455
# 9044acf49bff48e4976e5974e74e0bed
msgid "You can check the attributes in the tileindex by executing \"*ogrinfo -al*\" on your data file"
msgstr ""

#: ../../../en/optimization/debugging.txt:459
# 6bbfbc0e838c49e5a2fb98c007a4745e
msgid "Step 6: Check your Web Server Logs"
msgstr ""

#: ../../../en/optimization/debugging.txt:461
# 76cf3cf4c36d4131a184ff9226d11ce5
msgid "Once you have verified that there are no problems with you mapfile, next you should check your Web server log files, for any related information that may help you narrow down your problem."
msgstr ""

#: ../../../en/optimization/debugging.txt:466
# 8455b3c76e70448d949c6215098abf92
msgid "Apache"
msgstr ""

#: ../../../en/optimization/debugging.txt:468
# 69422d42f52a41ffa7c82dbe5125476b
msgid "Unix users will usually find Apache's *error_log* file in a path similar to:"
msgstr ""

#: ../../../en/optimization/debugging.txt:475
# 73f2004b5db745bba2abf98fb796f56c
msgid "Windows users will usually find Apache's log files in a path similar to:"
msgstr ""

#: ../../../en/optimization/debugging.txt:481
# 322b7453634e41678126abe9b041a014
msgid "MapServer for Windows (`MS4W <http://www.maptools.org/ms4w>`__) users will find Apache's log files at:"
msgstr ""

#: ../../../en/optimization/debugging.txt:489
# ea40aa82d65847499c6751c751c5acf3
msgid "Microsoft IIS"
msgstr ""

#: ../../../en/optimization/debugging.txt:491
# 6ccc0235e9a648e0a257ce6e66a172e8
msgid "IIS log files can be located by:"
msgstr ""

#: ../../../en/optimization/debugging.txt:493
#: ../../../en/optimization/debugging.txt:511
# 791754c924ef458b96e1388d7a8a0215
# 336fb1a24e544b02959c23f5018fba74
msgid "Go to Start -> Control Panel -> Administrative Tools"
msgstr ""

#: ../../../en/optimization/debugging.txt:494
# 7610a9d8207d4e2caafc15cf29bcb2f6
msgid "Open the Internet Information Services (IIS) Manager."
msgstr ""

#: ../../../en/optimization/debugging.txt:495
# d70aee0be6e5422eb8793078327b7423
msgid "Find your Web site under the tree on the left."
msgstr ""

#: ../../../en/optimization/debugging.txt:496
# 8deb0a010693467f8f0ed1527740aa2f
msgid "Right-click on it and choose Properties."
msgstr ""

#: ../../../en/optimization/debugging.txt:497
# dbea463393d34fa7b805fd34f00548dd
msgid "On the Web site tab, you will see an option near the bottom that says \"Active Log Format.\" Click on the Properties button."
msgstr ""

#: ../../../en/optimization/debugging.txt:502
# 2d5194f845de4242b4a0b8e13e3a84d8
msgid "At the bottom of the General Properties tab, you will see a box that contains the log file directory and the log file name. The full log path is comprised of the log file directory plus the first part of the log file name, for example::"
msgstr ""

#: ../../../en/optimization/debugging.txt:509
# 23d313515f294cca8975161eb47aefc8
msgid "You may also want to check the Windows Event Viewer logs, which is located at:"
msgstr ""

#: ../../../en/optimization/debugging.txt:512
# cdb185c8fa2b4f65a4492ed94e3170cb
msgid "Computer Management"
msgstr ""

#: ../../../en/optimization/debugging.txt:513
# 1d66758cda2245cfb42e989609f62d15
msgid "Event Viewer"
msgstr ""

#: ../../../en/optimization/debugging.txt:516
# 911c5ab4cbf14e928c8fdc4915ac9db5
msgid "As mentioned previously, in IIS the MapServer *stderr* debug output is returned to the client instead of routed to the Web Server logs, so be sure to log the output to a file, using:"
msgstr ""

#: ../../../en/optimization/debugging.txt:525
# 6c0c0e5af8ec4ff886ac8b2ddb46d2a8
msgid "CGI Error - The specified CGI application misbehaved by not returning a complete set of HTTP headers"
msgstr ""

#: ../../../en/optimization/debugging.txt:527
# aba0828e3705492e8a5f15be8f8c8a2d
msgid "This error is often caused by missing DLL files.  You should try to execute \"*mapserv -v* at the commandline, to make sure that MapServer loads properly."
msgstr ""

#: ../../../en/optimization/debugging.txt:533
# a1a1bd67610a4c368fbaa3ea8ae2524e
msgid "Step 7: Verify your Application Settings"
msgstr ""

#: ../../../en/optimization/debugging.txt:535
# 167633c69e774134af8dcadc2e1e65fb
msgid "If you have verified that MapServer creates a valid map image through :ref:`shp2img`, you've checked your MapServer log files, and there are no problems noted in your Web server logs, then you should focus your attention on possible application configuration problems. \"Application\" here means how you are displaying your map images on the Web page, such as with `OpenLayers <http://www.openlayers.org>`__."
msgstr ""

#: ../../../en/optimization/debugging.txt:546
# a7681b07036a47faa0b9660d8b8ffae0
msgid "PHP MapScript"
msgstr ""

#: ../../../en/optimization/debugging.txt:548
# 8febba12090448c7bf940a9ac2dc37b2
msgid "If you are using PHP MapScript in your application, here are some important notes for debugging:"
msgstr ""

#: ../../../en/optimization/debugging.txt:551
# 0c168adb559442e4b7721a70fa7f930c
msgid "1. Make sure your *php.ini* file is configured to show all errors, by setting:"
msgstr ""

#: ../../../en/optimization/debugging.txt:559
# d42eabba7f184f66a85e8593c89756af
msgid "To enable debugging in PHP MapScript, if you are using MapServer 5.6.0 or more recent, make sure to define *ZEND_DEBUG* in the PHP source."
msgstr ""

#: ../../../en/optimization/debugging.txt:563
# e33f2a73ad384251a6b339125a6b973e
msgid "If you are using MapServer < 5.6.0, then:"
msgstr ""

#: ../../../en/optimization/debugging.txt:565
# 0416fd6266b14ef0b409028f0cc3f03f
msgid "open the file */mapscript/php3/php_mapscript.c*"
msgstr ""

#: ../../../en/optimization/debugging.txt:567
# db1a37d9c4534ab097382a3c7a3729c2
msgid "change the following:"
msgstr ""

#: ../../../en/optimization/debugging.txt:578
# 252c7b6463c54dd6aeb5cc109bf22842
msgid "Debugging MapServer using Compiler Debugging Tools"
msgstr ""

#: ../../../en/optimization/debugging.txt:584
# 98db82ab4a14464899d1cf7f4a156c67
msgid "Running MapServer in GDB (Linux/Unix)"
msgstr ""

#: ../../../en/optimization/debugging.txt:589
# 18ac2975e62948fa95ba3426eec3d5dc
msgid "Building with Symbolic Debug Info"
msgstr ""

#: ../../../en/optimization/debugging.txt:591
# 49f28a7efd074fcc89d3ae664cb9fd80
msgid "It is not strictly necessary to build MapServer with debugging enabled in order to use `GDB <http://www.gnu.org/software/gdb/>`__ on linux, but it does ensure that more meaningful information is reported within GDB.  To enable full symbolic information use the *--enable-debug* configure switch.  Note that use of this switch disables optimization and so it should not normally be used for production builds where performance is important."
msgstr ""

#: ../../../en/optimization/debugging.txt:606
# 8b3e0f53cf9e4da6849e1c9ffb891dc4
msgid "Running in the Debugger"
msgstr ""

#: ../../../en/optimization/debugging.txt:608
# 82a405ebc3714883890f2edb5ecd7091
msgid "To run either mapserv or shp2img, give the name of the executable as an argument to the \"gdb\" command.  If it is not in the path, you will need to provide the full path to the executable."
msgstr ""

#: ../../../en/optimization/debugging.txt:627
# 943e71f8f2f54d41a1de039855b4b0d7
msgid "Once you are at the \"(gdb)\" prompt you can use the run command with the arguments you would normally have passed to the mapserv or shp2img executable."
msgstr ""

#: ../../../en/optimization/debugging.txt:645
# 74f89baadd784eddbc6aae589a416019
msgid "If the program is crashing, you will generally get a report like the above indicating the function the crash occurred in, and some minimal information on why.  It is often useful to request a traceback to see what functions led to the function that crashed.  For this use the \"where\" command."
msgstr ""

#: ../../../en/optimization/debugging.txt:674
# 2df3383ac0ff4798bbbadc9397746e49
msgid "It may also be helpful to examine variables used in the line where the crash occured.  Use the print command for this."
msgstr ""

#: ../../../en/optimization/debugging.txt:682
# c0ffd008fb7d4f91bb396afe493e3251
msgid "In this case we see that the program crashed because poOpenInfo was NULL (zero).  Including a traceback like the above in bug report can help the developers narrow down a problem more quickly, especially if it is one that is difficult for the developers to reproduce themselves."
msgstr ""

#: ../../../en/optimization/debugging.txt:689
# 1194b47ecb4147648a52e6145491d5f6
msgid "Debugging Older Versions of MapServer (before 5.0)"
msgstr ""

#: ../../../en/optimization/debugging.txt:691
# 20bc0700d3c84168ac9bae86d56bf5e0
msgid "Make sure that MapServer is compiled in debug mode (on unix this is enabled through *./configure --enable-debug*)."
msgstr ""

#: ../../../en/optimization/debugging.txt:694
# 01f0fb040066496db36fcdbef3ed3999
msgid "You can verify that your build was compiled in debug mode, by executing the following at the commandline (look for \"DEBUG=MSDEBUG\"):"
msgstr ""

#: ../../../en/optimization/debugging.txt:708
# 9035d031f2e2422ea4262c010db2bbd5
msgid "Set the *MS_ERRORFILE* variable is in your mapfile, within the :ref:`MAP` object, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:722
# 00ed9e3abaf64b73b727c71eac2009f2
msgid "If you don't use the *MS_ERRORFILE* variable, you can use the LOG parameter in your :ref:`WEB` object of the mapfile, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:738
# 965b74b638204a4f9bf97c36bd565261
msgid "Specify *DEBUG ON* in your MAP object, or in your LAYER objects, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:755
# ee0c18c5412246819b939c0a4d5bb53f
msgid "Note that only errors will be written to the log file; all DEBUG output goes to stderr, in the case of Apache that is Apache's *error_log* file. If you are using Microsoft IIS, debug output is routed to *stdout* (i.e. the browser), so be sure to remove *DEBUG ON* statements if using IIS on a production server."
msgstr ""

#: ../../../en/optimization/debugging.txt:761
# 8442d52cbc05444cb0f7176435fb1589
msgid "."
msgstr ""

#: ../../../en/optimization/debugging.txt:1
#: ../../../en/optimization/debugging.txt:43
#: ../../../en/optimization/debugging.txt:120
#: ../../../en/optimization/debugging.txt:196
#: ../../../en/optimization/debugging.txt:217
#: ../../../en/optimization/debugging.txt:247
#: ../../../en/optimization/debugging.txt:272
#: ../../../en/optimization/debugging.txt:303
#: ../../../en/optimization/debugging.txt:442
#: ../../../en/optimization/debugging.txt:542
#: ../../../en/optimization/debugging.txt:580
# 99cfb93faeec42a88d6c74cad94f924c
# 9ae5f87033874f88ba7c9280f32722d5
# 8720a437d02644bba9e2adeeba6e5556
# 3868d3c907cf481d832da411c3308cff
# f560afc9507f42d88e345415f29c32d2
# 467f5299189c4c9d9fcfadaf436554a7
# 24c94debaf6f4844b7e2c38c0dc7bea0
# f7196078b22e43bd80db1b1ad4f241dd
# 5a01c0bfecda40fe8daac627c173964c
# bf1691bdf5214f1f83868481a47f7739
# 77a02cc3d56f4c89a8df9369ed9293e8
msgid "Debugging"
msgstr ""

#: ../../../en/optimization/debugging.txt:43
# 9ae5f87033874f88ba7c9280f32722d5
msgid "MS_ERRORFILE"
msgstr ""

#: ../../../en/optimization/debugging.txt:120
# 8720a437d02644bba9e2adeeba6e5556
msgid "Debug levels"
msgstr ""

#: ../../../en/optimization/debugging.txt:196
#: ../../../en/optimization/debugging.txt:217
# 3868d3c907cf481d832da411c3308cff
# f560afc9507f42d88e345415f29c32d2
msgid "MS_DEBUGLEVEL"
msgstr ""

#: ../../../en/optimization/debugging.txt:247
# 467f5299189c4c9d9fcfadaf436554a7
msgid "CPL_DEBUG"
msgstr ""

#: ../../../en/optimization/debugging.txt:272
# 24c94debaf6f4844b7e2c38c0dc7bea0
msgid "PROJ_DEBUG"
msgstr ""

#: ../../../en/optimization/debugging.txt:303
# f7196078b22e43bd80db1b1ad4f241dd
msgid "shp2img"
msgstr ""

#: ../../../en/optimization/debugging.txt:542
# bf1691bdf5214f1f83868481a47f7739
msgid "PHP Mapscript"
msgstr ""

#: ../../../en/optimization/debugging.txt:580
# 77a02cc3d56f4c89a8df9369ed9293e8
msgid "GDB"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:8
#: ../../../en/optimization/fastcgi.txt:1
# 8ea9489fa240450684584467270428ab
# 9bd3b90718db49df8f339bb65fb1fb47
msgid "FastCGI"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:10
# d78124ccae964d9286495fd5cf997e2a
msgid "Frank Warmerdam"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:11
# 45a62546c7a349feaa395b58be34af60
msgid "warmerdam at pobox.com"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:12
# 74ed714fbb554b4a96d7270cfd20f8bb
msgid "Howard Butler"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:13
# efaa8b726394428a9d6cd54c802b1af0
msgid "hobu.inc at gmail.com"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:14
#: ../../../en/optimization/mapfile.txt:12
#: ../../../en/optimization/raster.txt:11
#: ../../../en/optimization/tileindex.txt:11
#: ../../../en/optimization/vector.txt:11
# 23c17308cb7540a0acb07010635b722a
# 1577d9f5860f4b36bd737ee044d85241
# 1026815897ad4c87b6b6f2b12d1731b9
# 27eb252f22f24889b5bb0dd06f7b8551
# 484716e8e18e46aaa641d98aa6315a7d
msgid "$Revision$"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:15
#: ../../../en/optimization/mapfile.txt:13
#: ../../../en/optimization/raster.txt:12
#: ../../../en/optimization/tileindex.txt:12
#: ../../../en/optimization/vector.txt:12
# a75d6f15a03b42239b1bb68cef24a4c9
# 59db4ddf193f488fb6f6d5d757c56bbc
# d699f651a1ca440abe2df26ea84bfac3
# 17290636ef954c989b44c601ec57b656
# 54ac07f8e5d54311b5464765d5496afa
msgid "$Date$"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:16
# b71a714a57b745f983ca077db233ecfa
msgid "2008/07/15"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:26
# de364f1ca54b494caf2dac94ca7debc7
msgid "FastCGI is a protocol for keeping cgi-bin style web applications running as a daemon to take advantage of preserving memory caches, and amortizing other high startup costs (like heavy database connections) over many requests."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:32
# 224da68f21b84ed2822a1f96cf30942d
msgid "Obtaining the necessary software"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:34
# 7d69dbc340e940a7afac2418c06fa425
msgid "There are three pieces to the MapServer FastCGI puzzle.  First, you need the actual FastCGI library.  This can be downloaded from `http://www.fastcgi.com/ <http://www.fastcgi.com/>`__.  This library does the usual *configure, make, make install* dance.  One added complication is that it installs by default in /usr/local, and you might give the *configure* command a --prefix=/usr to put it in a location that is already visible to ldconfig."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:42
# 8bf4d7fadd7247ae855780d02cd8e19c
msgid "Assuming you are running `Apache <http://httpd.apache.org>`__, the next piece you need is the fastcgi module. There are two fastcgi implementations for apache:"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:46
# b3ae645dc8ab4a4292c8390f9c1db693
msgid "*mod_fcgid*: mod_fcgid is the newer and recommended way to run fastcgi programs under recent apache versions. It can be downloaded from the `Apache fcgid homepage <http://httpd.apache.org/mod_fcgid/>`__"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:49
# d7e7e332f24d4d1bbeb24dd26274dce8
msgid "**deprecated** *mod_fcgi*:  Mod_fcgi depends on the version of Apache you are running, so make sure to download the correct fork (Apache 1.3 vs. Apache 2)."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:53
# da4f8b026c0c4dd68f5a721f5655aef0
msgid "The third and final piece is to compile MapServer with FastCGI support. This is pretty straightforward, and all you need to do is tell *configure* where the FastCGI library is installed.  If you changed the prefix variable as described above, this would be:"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:62
# 250d73a9e2934d06bf8ad993cf66a2d8
msgid "With those pieces in place, the MapServer CGI (mapserv) should now be FastCGI-enabled.  You can verify this by testing it on with the command line:"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:76
# 597ddcee459844a09827b688b5c00c99
msgid "mod_fcgid Configuration"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:78
#: ../../../en/optimization/fastcgi.txt:107
# 24a069b90a474140b3ee0f2619f4d18c
# 6122632a48d749fea07e88248fdb2a8e
msgid "Modify http.conf to load the FastCGI module."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:84
#: ../../../en/optimization/fastcgi.txt:113
# 2a54f879b63b45e790e3e63f1e0e238c
# 29aaea96274b4a739e2b8b81c232e193
msgid "Add an Apache handler for FastCGI applications."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:90
#: ../../../en/optimization/fastcgi.txt:119
# 1bdb6044a5984845ab9e2bb4ec854c72
# bb05870078b9493b8fb2cc57248fb97d
msgid "Set FastCGI processing information"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:102
# cdeafea1a2a941bba288e94f6eb92074
msgid "Deprecated mod_fcgi Configuration"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:104
# d0da7cc467c249e88692619386d1d1f7
msgid "This section is left for reference. The recommended way to run fastcgi programs under apache is to use mod_fcgid, as detailed above."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:130
# f4a826d7f6794296b632142dd8a97dac
msgid "Common mod_fcgid/mod_fcgi Configuration"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:132
# 3a5e621c2c42479593db707a69b74844
msgid "Install a copy of the mapserv executable (originally **mapserv** or **mapserv.exe**) into the cgi-bin directory with the extension **.fcgi** (ie. **mapserv.fcgi**).  Use this executable when you want to utilize fastcgi support."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:137
# a65342bc10b34f75b955766044650ebc
msgid "For some platforms, the MapServer  link would then have to changed from:"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:144
#: ../../../en/optimization/fastcgi.txt:157
# 49c69011797e4a6db86692eeba115fac
# 820ec80e207a4a559180149badd0c05c
msgid "To:"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:150
# fd1b92659c82429a878d4bd670e2ffd4
msgid "For other platforms, the MapServer  link would then have to changed from:"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:164
# 7d5e5a8d60dd495083fc2bb74d3f257c
msgid "In your mapfile, set a PROCESSING directive to tell FastCGI to cache the connections and layer information on all layers for which connection caching is desired - ie. all slow layers."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:175
# 905a554598e44ac1ad7c08eb4fb1a67c
msgid "Common Problems"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:177
# 5c86f2da90cb48688017064f7b3d9e50
msgid "File permissions"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:178
# 3b2ea9cd870840dfb0814eb51c8f143e
msgid "Fedora Core 3 doesn't allow FastCGI to write to the process logs (when you use RedHat's Apache 2 rather than your own).  This is described `here <http://www.fastcgi.com/archives/fastcgi-developers/2005-March/003638.html>`__."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:182
# 74b0de63c3274baab5f123185abd0fcf
msgid "Also, FastCGI needs to write its socket information somewhere.  This can be directed with the *FastCgiIpcDir* directive."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:187
# ab2bcef4d6b24f499d935d31285e10b6
msgid "FastCGI on Win32"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:190
# 3af443ac84ce4fa29d9b20f1a3afe6d6
msgid "MS4W Users"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:192
# 847d55bdca7f4289abf88e70778a74ed
msgid "`MS4W (MapServer for Windows)`_ >= version 2.2.2 contains MapServer compiled with FastCGI support. MS4W version >= 2.2.8 also contains the required Apache module (mod_fcgid), and users must follow the `README instructions`_ to setup FastCGI with their application."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:202
# 60a8af2357d942a98d95f6f59f6fe1f9
msgid "Building fcgi-2.4.0"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:204
# a2f74ceb579740acbd87b68b6e1d8ce5
msgid "I used libfcgi-2.4.0 for use with Apache2 from http://www.fastcgi.com."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:207
# e42a4285dcf24e92a0c7eef6817b3c8f
msgid "Binary IO Patch"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:209
# a72c59b67af640a7bf6c8160efa5abe2
msgid "It is critical that stdio be in binary mode when PNG and other binary images are written to it. To accomplish this for stdio handled through the FastCGI library, I had to do the following hack to libfcgi/fcgi_stdio.c within the fcgi-2.4.0 distribution."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:214
# 57e697d2f3724e4383c97ef2b9108242
msgid "In FCGI_Accept() made he following change"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:235
# c46bba4d0d654a0aa15e42a575caadc5
msgid "Also, add the following just before the FCGI_Accept() function"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:244
# 7ba15b0bb1094a7e9af56d93fcf9f560
msgid "I'm sure there is a better way of accomplishing this. If you know how, please let me know!"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:248
# 2e97dbb9a8cc40c6968c3bd08eccd046
msgid "Building libfcgi"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:250
# 64f765c8dac243278b6b11c60a22b122
msgid "The makefile.nt should be fine. Just ensure you have run VCVARS32.BAT (as is needed for building MapServer) and then issue the command::"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:255
# 9aee5a433c5441378c0197e729ffb106
msgid "Then the .lib and .dll will be in libfcgi/Debug?. Make sure you copy the DLL somewhere appropriate (such as your cgi-bin directory)."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:259
# 8004e49f9e974ffb87a2c7d17f35c7b6
msgid "Other Issues"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:261
# 6ed997303aa845e0a5633ad036f2d7f3
msgid "1) FastCGI's receive a very limited environment on win32, seemingly even more restricted than normal cgi's started by apache. Make sure that all DLLs required are either in the fastcgi directory or in windows\\system32. Any missing DLLs will result in very cryptic errors in the error_log, including stuff about Overlapping read requests failing or something like that."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:267
# 3179949baa1f4bd69187020c3dededde
msgid "2) Make sure you use a libfcgi.dll built against the same runtime library as your mapserv.exe (and possibly libmap_fcgi.dll) or you will suffer a world of pain! Different runtime libraries have different \"environ\" variables (as well as their own stdio and heaps). You can check that everything is using MSVCRT.DLL (or all using MSVCRTD.DLL) using the MS SDK Dependency Walker."
msgstr ""

#: ../../../en/optimization/index.txt:8
#: ../../../en/optimization/index.txt:1
#: ../../../en/optimization/mapfile.txt:29
#: ../../../en/optimization/mapfile.txt:72
#: ../../../en/optimization/mapfile.txt:148
#: ../../../en/optimization/mapfile.txt:162
#: ../../../en/optimization/raster.txt:1
#: ../../../en/optimization/raster.txt:32
#: ../../../en/optimization/raster.txt:55
#: ../../../en/optimization/tileindex.txt:1
#: ../../../en/optimization/tileindex.txt:58
#: ../../../en/optimization/vector.txt:1
#: ../../../en/optimization/vector.txt:32
#: ../../../en/optimization/vector.txt:54
#: ../../../en/optimization/vector.txt:84
# 79af1be7a3664fc3b735a8dab09bd17e
# dfdcd1ec6e4c408ea2ee27df6ad45f4d
# b2b83a8a8fa046babd69392f8ad6f3e9
# 3d768698252e4e70a569807e198a6621
# d1d36475b6654443bb85bf725e6b95ab
# 285603363b8649f6979432e023477908
# ddf4906b334847d0ad2eaac19b7d7e34
# 4a81bae3ed494c77a5af2a5032d8f7f3
# 35323e2a5639413b9f583c810c82e23c
# 81f658d63acc4151b25d0c1be2e75d1e
# 027e6e05a3c9470c81809f2b703e7d1a
# ef28268c2afc4774aa750a280f231a0c
# 870aae2cb04b4640a56b983e9f967e96
# 6d200e6f27d34d378477dc2ebd8e4ffa
# 0103ba4b43b541db895748e4d68024b2
msgid "Optimization"
msgstr ""

#: ../../../en/optimization/mapfile.txt:8
# cff44a54595f410f95ba3bb07dbca649
msgid "Mapfile"
msgstr ""

#: ../../../en/optimization/mapfile.txt:10
# f909366bd39f4afb802974185d9d5515
msgid "David Fawcett"
msgstr ""

#: ../../../en/optimization/mapfile.txt:11
# 5ab24d61bdf244c5983f9d0d0016bc17
msgid "david.fawcett at gmail.com"
msgstr ""

#: ../../../en/optimization/mapfile.txt:14
# cecd35b979af4bf681b2eb15576de77a
msgid "2007/08/01"
msgstr ""

#: ../../../en/optimization/mapfile.txt:23
# b21a979366c24f589cc36e5d549da791
msgid "The contents of a Map File are used by MapServer for configuration, data access, projection, and more. Because the Map File is parsed every time a map image is requested, it is important to think about what you include in the file in order to optimize performance. The optimal Map File is one that doesn't include or reference anything that isn't needed."
msgstr ""

#: ../../../en/optimization/mapfile.txt:33
# 85311f4d081140b7887e213127c8f7e9
msgid "1. Projections"
msgstr ""

#: ../../../en/optimization/mapfile.txt:35
# f209caca3a6d4e3795b71ae1d971395d
msgid "There are two ways to define projections in a Map File. You can either use inline projection parameters or specify an EPSG code for that projection. If you use the :term:`EPSG` code method, :term:`Proj.4` looks up the projection parameters in the Proj4 database using the EPSG code as an ID. This database lookup takes significantly more resources than when the projection parameters are defined inline. This lookup takes place for each projection definition using EPSG codes in a Map File."
msgstr ""

#: ../../../en/optimization/mapfile.txt:43
# dfbb96d00e6c494e93c45d645b8871df
msgid "**Projection defined using inline projection parameters**"
msgstr ""

#: ../../../en/optimization/mapfile.txt:57
# f985e0c34ff3428f88e48e422116bc2a
msgid "**Projection defined using EPSG Code**"
msgstr ""

#: ../../../en/optimization/mapfile.txt:65
#: ../../../en/optimization/mapfile.txt:82
#: ../../../en/optimization/mapfile.txt:157
#: ../../../en/optimization/mapfile.txt:173
# 44a1da87a7c741e3b8a4ee5f8bb65fd9
# 0cd41f86e7b34177867fe5da36befcb2
# 6257c158172b44248e4f2a357ec4669e
# 09510dd1210648f4be1c4418dfdc0e08
msgid "**Optimization Suggestions**"
msgstr ""

#: ../../../en/optimization/mapfile.txt:67
# 4749793283c84563bd5f6532fa82b9ad
msgid "Use inline projection parameter definitions in place of EPSG codes."
msgstr ""

#: ../../../en/optimization/mapfile.txt:69
# e236f5bb62b4477eb8bb0ef2bca83576
msgid "If you want to use EPSG codes, remove all unneeded projection definition records from the Proj.4 :term:`EPSG` database."
msgstr ""

#: ../../../en/optimization/mapfile.txt:76
# 486b36fbcb644ed89a7b73288f3622e8
msgid "2. Layers"
msgstr ""

#: ../../../en/optimization/mapfile.txt:78
# f0ab6f2a4d154ef7b748a9cc4dcc0dfe
msgid "For every layer in a Map File that has a status of ON or DEFAULT, MapServer will load that layer and prepare it for display, even if that layer never gets displayed."
msgstr ""

#: ../../../en/optimization/mapfile.txt:84
# 23007d59b84640949413b130cd7cd10a
msgid "Build lean Map Files, only include layers that you plan to use."
msgstr ""

#: ../../../en/optimization/mapfile.txt:86
# 5c4f923495d4404fa8e3b2e4b83b575e
msgid "Turn off unnecessary layers; the more layers MapServer is displaying, the more time it takes. Have your opening map view show only the minimum necessary to orient the user, and allow them to turn on additional layers as needed. This is particularly true of remote WMS or very large rasters."
msgstr ""

#: ../../../en/optimization/mapfile.txt:91
# 801659c5858a4d98b66c877f6e9e89af
msgid "Related to turning off layers, is turning them on but using MINSCALEDENOM and MAXSCALEDENOM to determine at what zoomlevels the layer is available. If a map's display is outside of the layer's MINSCALEDENOM and MAXSCALEDENOM range, then MapServer can skip processing that layer. It also makes for a really cool effect, that the national boundaries magically change to state boundaries."
msgstr ""

#: ../../../en/optimization/mapfile.txt:98
# 9bd53b2387414a4e9f475cc98e10cfce
msgid "If you have a complex application, consider using multiple simple and specific Map Files in place of one large 'do everything' Map File."
msgstr ""

#: ../../../en/optimization/mapfile.txt:101
# 3695388fd18a4b00bd3e04f20117e970
msgid "In a similar vein, each class also supports MINSCALEDENOM and MAXSCALEDENOM. If your dataset has data that are relevant at different zoomlevels, then you may find this a very handy trick. For example, give a MINSCALEDENOM of 1:1000000, county roads a MINSCALEDENOM of 1:100000, and streets a MAXSCALEDENOM of 1:50000. You get the cool effect of new data magically appearing, but you don't have MapServer trying to draw the nation's roads when the entire nation is in view!"
msgstr ""

#: ../../../en/optimization/mapfile.txt:109
# 09c2de143a4b476b859ece9ebf5d3b67
msgid "Classes are processed in order, and a feature is assigned to the first class that matches. So try placing the most commonly-used classes at the top of the class list, so MapServer doesn't have to try as many classes before finding a match. For example, if you wanted to highlight the single state of Wyoming, you would probably do this:"
msgstr ""

#: ../../../en/optimization/mapfile.txt:129
# 3335e0221b794a98871a0d239b8acd39
msgid "But it would be a lot more efficient to do this, since 98% of cases will be matched on the first try:"
msgstr ""

#: ../../../en/optimization/mapfile.txt:146
# 507d6f0669d6460689921e0610c55c5f
msgid "Use :ref:`tile indexes <tileindex>` instead of multiple layers."
msgstr ""

#: ../../../en/optimization/mapfile.txt:152
# cd89009753eb432d8686680e5c40a190
msgid "3. Symbols"
msgstr ""

#: ../../../en/optimization/mapfile.txt:154
# 9d937dd7096b4ed08f29c8c73a89ce05
msgid "When the Map File is loaded, each raster symbol listed in the symbols file is located on the filesystem and loaded."
msgstr ""

#: ../../../en/optimization/mapfile.txt:159
# 288d3997a46a40df9eda7182f55fadc9
msgid "Only include raster symbols in your symbols file if you know that they will be used by your application."
msgstr ""

#: ../../../en/optimization/mapfile.txt:166
# cd93212a6cb64739a12e61667913a65f
msgid "4. Fonts"
msgstr ""

#: ../../../en/optimization/mapfile.txt:168
# 236b94856fd14550b3b86516b1e7b62e
msgid "To load a font, MapServer opens up the fonts.list :ref:`fontset` file which contains an alias for the font and the path for that font file. If you have a fonts.list file with a long list of fonts, it will take more time for MapServer to locate and load the font that you need."
msgstr ""

#: ../../../en/optimization/mapfile.txt:175
# b0379d828e9443238face2f309cad92a
msgid "Limit the entries in fonts.list to fonts that you actually use."
msgstr ""

#: ../../../en/optimization/mapfile.txt:1
# f3346e4f8aa946aa8f497b6b43b555a7
msgid "Mapfile tuning"
msgstr ""

#: ../../../en/optimization/mapfile.txt:29
# b2b83a8a8fa046babd69392f8ad6f3e9
msgid "Projections"
msgstr ""

#: ../../../en/optimization/mapfile.txt:72
# 3d768698252e4e70a569807e198a6621
msgid "Layers"
msgstr ""

#: ../../../en/optimization/mapfile.txt:148
# d1d36475b6654443bb85bf725e6b95ab
msgid "Symbols"
msgstr ""

#: ../../../en/optimization/mapfile.txt:162
# 285603363b8649f6979432e023477908
msgid "Fonts"
msgstr ""

#: ../../../en/optimization/raster.txt:8
#: ../../../en/optimization/raster.txt:1
#: ../../../en/optimization/raster.txt:32
# 0169fd333a64497aacea849ad010c144
# ddf4906b334847d0ad2eaac19b7d7e34
# 4a81bae3ed494c77a5af2a5032d8f7f3
msgid "Raster"
msgstr ""

#: ../../../en/optimization/raster.txt:10
#: ../../../en/optimization/tileindex.txt:10
#: ../../../en/optimization/vector.txt:10
# b272307bca7043378a8686afd1bda02a
# bfe789347b384584b06b207ddad3bdd8
# e098eb079e4e4cad9b86c36828d90a10
msgid "HostGIS"
msgstr ""

#: ../../../en/optimization/raster.txt:13
#: ../../../en/optimization/vector.txt:13
# c06aac06e3d34c879604f9ed6bd6e36e
# f316046784ff46c3958ba1ab508b94e7
msgid "2008/08/08"
msgstr ""

#: ../../../en/optimization/raster.txt:22
# c6b163ba0044495d8a7b2f5a78188853
msgid "Overviews"
msgstr ""

#: ../../../en/optimization/raster.txt:23
# 4d85658813cb4899a357421535e511d3
msgid "TIFF supports the creation of \"overviews\" within the file, which is basically a downsampled version of the raster data suitable for use at lower resolutions. Use the \"gdaladdo\" program to add overviews to a TIFF, and MapServer (via GDAL) will automagically choose which downsampled layer to use. Note that overviews significantly increase the disk space required by a TIFF, and in some cases the extra disk reading may offset the performance gained by MapServer not having to resample the image. You'll just have to try it for yourself and see how it works."
msgstr ""

#: ../../../en/optimization/raster.txt:36
# bd211dea922949bbba91a77593dd6200
msgid "Tileindexes and Internal Tiling"
msgstr ""

#: ../../../en/optimization/raster.txt:37
# 6bbd1d657ca14da1b702c8dfd43b9551
msgid "Tiling is mostly effective for cases where one commonly requests only a very small area of the image."
msgstr ""

#: ../../../en/optimization/raster.txt:40
# 4080aa2528bf409dbf294547a79b7851
msgid "A tileindex is how one creates an on-the-fly mosaic from many rasters. This is described in the :ref:`tileindex`. That document describes common cases where a tileindex makes sense. In particular, if you have a very large raster and most requests are for a very small spatial area within it, you may want t consider slicing it and tileindexing it."
msgstr ""

#: ../../../en/optimization/raster.txt:46
# 88d16081b8014e3b9450b03898021388
msgid "As an alternative to slicing and mosaicing, TIFFs do support a concept of internal tiling. Like a tileindex, this is mostly effective when the requests are for a small portion of the raster. Internal tiling is done by adding \"-co TILED=YES\" to gdal_translate, e.g.:"
msgstr ""

#: ../../../en/optimization/raster.txt:59
#: ../../../en/optimization/raster.txt:55
# 4275ee2aeda04b58ab0d11a4a3bdf0bf
# 35323e2a5639413b9f583c810c82e23c
msgid "Image formats"
msgstr ""

#: ../../../en/optimization/raster.txt:61
# 672f2942c57241849793fa1d9bff67ec
msgid "The TIFF image format is the fastest to \"decipher\", but once you get beyond a certain point, the disk reading (since TIFF is very large) may become slow enough to make it worthwhile to consider other image formats."
msgstr ""

#: ../../../en/optimization/raster.txt:65
# c83551effceb43399c6391fab62bc99e
msgid "For TIFFs larger than 1 GB, ECW images tend to render faster than TIFFs, since decompressing the data (CPU and RAM) is faster than reading the uncompressed data (disk). The downside is that ECW is not open-source, and the licensing is often prohibitive."
msgstr ""

#: ../../../en/optimization/raster.txt:70
# add053c670dd40b19f8bbb967c39f1d8
msgid "JPEG2000 is a very slow image format, as is JPEG."
msgstr ""

#: ../../../en/optimization/raster.txt:73
# f47b3cc3431d4cec9cebc3fd57488b9b
msgid "Remote WMS"
msgstr ""

#: ../../../en/optimization/raster.txt:75
# 1ff8e89d3ac74d26a4f5ff6d73cc5427
msgid "Remote WMS servers are often slow, especially the public ones such as TerraServer or NASA's Landsat server. There's nothing you can do about that, except to reconsider when the remote WMS layer should be used."
msgstr ""

#: ../../../en/optimization/raster.txt:79
# 763d6f779bc6432481b2c91e83150708
msgid "For example, there may be a different WMS server (or a different set of imagery, or even vector outline maps) suitable for drawing the countries or states to orient the user. You could then have the WMS layer come on at a certain scale, or have the layer always available but turned off so the user can choose when to turn it on."
msgstr ""

#: ../../../en/optimization/raster.txt:86
# 14d8e8c2dedc4fb1a23143750a563f9e
msgid ":ref:`raster`"
msgstr ""

#: ../../../en/optimization/raster.txt:32
# 4a81bae3ed494c77a5af2a5032d8f7f3
msgid "Tiling"
msgstr ""

#: ../../../en/optimization/tileindex.txt:8
# 0d278a37dbc5401ba7bf184bbf63c044
msgid "Tile Indexes"
msgstr ""

#: ../../../en/optimization/tileindex.txt:13
# 875d4d46737e4320a06840576e0b6889
msgid "2013/07/04"
msgstr ""

#: ../../../en/optimization/tileindex.txt:21
# 84d85860123d46a68c8368c33c962403
msgid "An introduction to tileindexes, MapServer's method for doing on-the-fly mosaicing."
msgstr ""

#: ../../../en/optimization/tileindex.txt:24
# 2ab2cd30ee1041e4976871708bf31c22
msgid "What is a tileindex and how do I make one?"
msgstr ""

#: ../../../en/optimization/tileindex.txt:26
# 43f12691b7124d52abd3bbf96afd6d52
msgid "A tileindex is a shapefile that ties together several datasets into a single layer. Therefore, you don't need to create separate layers for each piece of imagery or each county's road data; make a tileindex and let MapServer piece the mosaic together on the fly."
msgstr ""

#: ../../../en/optimization/tileindex.txt:31
# 62f072da9dfa4635b221d0769e8f1747
msgid "Making a tileindex is easy using `gdaltindex`_ for GDAL data sources (rasters) and `ogrtindex`_ for OGR data sources (vectors). You just run them, specifying the index file to create and the list of data sources to add to the index."
msgstr ""

#: ../../../en/optimization/tileindex.txt:38
# f0449571bd114f30951d10036e30cdd3
msgid "For example, to make a mosaic of several TIFFs:"
msgstr ""

#: ../../../en/optimization/tileindex.txt:47
# cee814cdf0724570ac60e0bf24ec3f74
msgid "And to make a mosaic of vectors:"
msgstr ""

#: ../../../en/optimization/tileindex.txt:54
# a264df4ed4494bdea7bd3088d6d81d68
msgid "ogrtindex and gdaltindex **add** the specified files to the index. Sometimes you'll have to delete the index file to avoid creating duplicate entries."
msgstr ""

#: ../../../en/optimization/tileindex.txt:62
# ad77a287a6794e39a1f2bc00c4c78a48
msgid "Using the tileindex in your mapfile"
msgstr ""

#: ../../../en/optimization/tileindex.txt:64
# 3cecdbdc7f844c3482b905336193cac5
msgid "Using a tileindex as a layer is best explained by an example:"
msgstr ""

#: ../../../en/optimization/tileindex.txt:76
# 20c60553c0a64fabbc14866851fefea7
msgid "There are two items of note here: :ref:`TILEINDEX <tileindex_keyword>` and :ref:`TILEITEM <tileitem>`. TILEINDEX is simply the path to the index file, and TILEITEM specifies the field in the shapefile which contains the filenames referenced by the index. The TILEITEM will usually be \"LOCATION\" unless you specified the *-tileindex* option when running gdaltindex or ogrtindex."
msgstr ""

#: ../../../en/optimization/tileindex.txt:83
# fe7a80a6c52d4b92a25d77a921da3183
msgid "Two important notes about the pathnames:"
msgstr ""

#: ../../../en/optimization/tileindex.txt:85
# 3c5d8abe8c5a4ef88695da1958075bac
msgid "The path to TILEINDEX follows the same conventions as for any other data source, e.g. using the SHAPEPATH or else being relative to the location of the mapfile."
msgstr ""

#: ../../../en/optimization/tileindex.txt:88
# 98982e5d864f4bfe9bb39180acfdc3a1
msgid "The filenames specified on the command line to gdaltindex or ogrtindex will be used with the same conventions as well, following the SHAPEPATH or else being relative to the mapfile's location. I find it very useful to change into the SHAPEPATH directory and then run ogrtindex/gdaltindex from there; this ensures that I specify the correct pathnames."
msgstr ""

#: ../../../en/optimization/tileindex.txt:95
# e415a4749e4d4823a894ea9ebb062e7b
msgid "Tileindexes may make your map faster"
msgstr ""

#: ../../../en/optimization/tileindex.txt:97
# 82518848e89d4cb4b7e9a7db34181e49
msgid "A tileindex is often a performance boost for two reasons:"
msgstr ""

#: ../../../en/optimization/tileindex.txt:99
# c250dd3c3ae34bc49615f4851e1308b3
msgid "It's more efficient than having several separate layers."
msgstr ""

#: ../../../en/optimization/tileindex.txt:100
# ec13de484d404b69af7850ba4ed3dbda
msgid "MapServer will examine the tileindex to determine which datasets fall into the map's view, and will open only those datasets. This can result in a great savings for a large dataset, especially for use cases where most of the time only a very small spatial region of the data is being used. (for example, citywide maps with nationwide street imagery)"
msgstr ""

#: ../../../en/optimization/tileindex.txt:106
# f43a749c5caf4687a97289d163313804
msgid "A tileindex will not help in the case where all/most of the data sources will usually be opened anyway (e.g. street data by county, showing states or larger regions). In that case, it may even result in a decrease in performance, since it may be slower to open 100 files than to open one giant file."
msgstr ""

#: ../../../en/optimization/tileindex.txt:111
# be7a2d41f56247b5b3a03979352099a9
msgid "The ideal case for a tileindex is when the most typically requested map areas fall into very few tiles. For example, if you're showing state and larger regions, try fitting your data into state-sized blocks instead of county-sized blocks; and if you're showing cities and counties, go for county-sized blocks."
msgstr ""

#: ../../../en/optimization/tileindex.txt:116
# 994fc91fc36f4b3da250ff5c422bf46d
msgid "You'll just have to experiment with it and see what works best for your use cases."
msgstr ""

#: ../../../en/optimization/tileindex.txt:122
# 2128556479374a229729ab1e4d4ea92f
msgid "Tileindexes with tiles in different projections"
msgstr ""

#: ../../../en/optimization/tileindex.txt:124
# bb9b937bf573433cb0e1aa9c1baf1eab
msgid "Starting with MapServer 6.4, a raster tileindex can contain rasters in different projections. Such tileindex can be generated with `gdaltindex`_ (GDAL 2.0 or later), with the -t_srs and -src_srs_name options. The -t_srs instructs gdaltindex to write the envelope of each raster tile into a common target projection, so that the geometries written in the tile index are consistant. This common projection must be the projection of the raster layer."
msgstr ""

#: ../../../en/optimization/tileindex.txt:135
# fed1c7c0eb724fe4a1fc04195d2b6f66
msgid "The corresponding LAYER definition will need to specify the :ref:`TILESRS <tilesrs>` keyword with the value of the -src_srs_name option."
msgstr ""

#: ../../../en/optimization/tileindex.txt:138
# d50669e4bb4548b7a8ae8ba6239c9b4b
msgid "e.g:"
msgstr ""

#: ../../../en/optimization/tileindex.txt:156
# 537c1d64e1ef46d7b626a66898cfc749
msgid "MapServer will then be able to proceed to on-the-fly mosaicing and reprojection."
msgstr ""

#: ../../../en/optimization/tileindex.txt:158
# 1c45f4dcbf554fadb7800b816d1d4aad
msgid "For layers that must be exposed as WCS layers, a few metadata fields (\"wcs_extent\", \"wcs_size\", \"wcs_resolution\") must be specified in the LAYER definition, so as to define a \"virtual dataset\" coverage (see :ref:`wcs_server`). The GDAL wcs_virtds_params.py sample script can help generating those metadata fields."
msgstr ""

#: ../../../en/optimization/tileindex.txt:164
# 128bdd9c60cd483fa759dbb14f0b80a9
msgid "Note: this support of tileindex with mixed projections is only available for raster layers for now."
msgstr ""

#: ../../../en/optimization/tileindex.txt:1
# 81f658d63acc4151b25d0c1be2e75d1e
msgid "Tile indexes"
msgstr ""

#: ../../../en/optimization/tileindex.txt:35
# d7f5a82c18ac44979cd7c1f070d282ff
msgid "gdaltindex"
msgstr ""

#: ../../../en/optimization/tileindex.txt:44
# 00a7edd132714d08a4634dcb22ea0c42
msgid "ogrtindex"
msgstr ""

#: ../../../en/optimization/tileindex.txt:58
# 027e6e05a3c9470c81809f2b703e7d1a
msgid "TILEINDEX"
msgstr ""

#: ../../../en/optimization/vector.txt:8
#: ../../../en/optimization/vector.txt:1
# d4abeb0ca77a4a44aa2aa28c410acb7a
# ef28268c2afc4774aa750a280f231a0c
msgid "Vector"
msgstr ""

#: ../../../en/optimization/vector.txt:21
# 6ae1e3667b114714997043de970f3a36
msgid "Splitting your data"
msgstr ""

#: ../../../en/optimization/vector.txt:23
# ec88f3e001f64ba49cc20a2115c26684
msgid "If you find yourself making several layers, all of them using the same dataset but filtering to only use some of the records, you could probably do it better. If the criteria are static, one approach is to pre-split the data."
msgstr ""

#: ../../../en/optimization/vector.txt:27
# 6b5a3de6ecb245b3a84bac3897e33f6a
msgid "The *ogr2ogr* utility can select on certain features from a datasource, and save them to a new data source. Thus, you can split your dataset into several smaller ones that are already effectively filtered, and remove the FILTER statement."
msgstr ""

#: ../../../en/optimization/vector.txt:36
# 141a67c2be8442e2ae3e66c187ca797d
msgid "Shapefiles"
msgstr ""

#: ../../../en/optimization/vector.txt:37
# 87e226be301f44f49d632dc6824a6c25
msgid "Use :ref:`shptree` to generate a spatial index on your shapefile. This is quick and easy (\"shptree foo.shp\") and generates a .qix file. MapServer will automagically detect an index and use it."
msgstr ""

#: ../../../en/optimization/vector.txt:45
# 537de00cb7b2498ca88aba65ccc7d1b9
msgid "MapServer also comes with the :ref:`sortshp` utility. This reorganizes a shapefile, sorting it according to the values in one of its columns. If you're commonly filtering by criteria and it's almost always by a specific column, this can make the process slightly more efficient."
msgstr ""

#: ../../../en/optimization/vector.txt:50
# 24d90416ca6446f6b7a16bab5e0425c4
msgid "Although shapefiles are a very fast data format, :ref:`PostGIS <input_postgis>` is pretty speedy as well, especially if you use indexes well and have memory to throw at caching."
msgstr ""

#: ../../../en/optimization/vector.txt:58
#: ../../../en/optimization/vector.txt:54
# 8e8fedde80804d14972be5b743fbdb5a
# 6d200e6f27d34d378477dc2ebd8e4ffa
msgid "PostGIS"
msgstr ""

#: ../../../en/optimization/vector.txt:60
# 57084f8f69dd4628846d375d977a31d0
msgid "The single biggest boost to performance is indexing. Make sure that there's a GIST index on the geometry column, and each record should also have an indexed primary key. If you used shp2pgsql, then these statements should create the necessary indexes:"
msgstr ""

#: ../../../en/optimization/vector.txt:70
# 22da299049ba4579830e434eae653e5a
msgid "PostgreSQL also supports reorganizing the data in a table, such that it's physically sorted by the index. This allows PostgreSQL to be much more efficient in reading the indexed data. Use the CLUSTER command, e.g."
msgstr ""

#: ../../../en/optimization/vector.txt:78
# ba4d0004dfc54810a0396f4e27151bb6
msgid "Then there are numerous optimizations one can perform on the database server itself, aside from the geospatial component. The easiest is to increase *max_buffers* in the *postgresql.conf* file, which allows PostgreSQL to use more memory for caching. More information can be found at the `PostgreSQL website`_."
msgstr ""

#: ../../../en/optimization/vector.txt:88
# 2a0ae803647947a1a152e3c09c23dd46
msgid "Databases in General (PostGIS, Oracle, MySQL)"
msgstr ""

#: ../../../en/optimization/vector.txt:90
# aaace267cedd42abb537a68230efeab0
msgid "By default, MapServer opens and closes a new database connection for each database-driven layer in the mapfile. If you have several layers reading from the same database, this doesn't make a lot of sense. And with some databases (Oracle) establishing connections takes enough time that it can become significant."
msgstr ""

#: ../../../en/optimization/vector.txt:96
# f284282712714232af781c72668d4ce8
msgid "Try adding this line to your database layers:"
msgstr ""

#: ../../../en/optimization/vector.txt:102
# 5e4bc9068721484b96335ca68ca0ad06
msgid "This causes MapServer to not close the database connection for each layer until after it has finished processing the mapfile and this may shave a few seconds off of map generation times."
msgstr ""

#: ../../../en/optimization/vector.txt:32
# 870aae2cb04b4640a56b983e9f967e96
msgid "Shape datasets"
msgstr ""

#: ../../../en/optimization/vector.txt:84
# 0103ba4b43b541db895748e4d68024b2
msgid "Databases"
msgstr ""

