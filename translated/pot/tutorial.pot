# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Regents of the University of Minnesota
# This file is distributed under the same license as the MapServer package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MapServer 6.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-22 13:22+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../en/tutorial/background.txt:6
# 0f332e10267b448bbc8e70b2007f8af1
msgid "Tutorial background"
msgstr ""

#: ../../../en/tutorial/background.txt:9
# 1e618e051cb0428ab1e971ad8cebe7fe
msgid "Tutorial Timeframe"
msgstr ""

#: ../../../en/tutorial/background.txt:11
# 11f20c787f6a482db0a680104ec4484e
msgid "While some users can go through this tutorial in one day, those who work on each example in detail can probably expect to finish in one week."
msgstr ""

#: ../../../en/tutorial/background.txt:15
# f8277179c02f4cc5a5e551a090574db8
msgid "Tutorial Data"
msgstr ""

#: ../../../en/tutorial/background.txt:17
# 532fff7769b048fdafacee7b13539e9e
msgid "The dataset used in this tutorial was taken from the U.S. Department of the Interior's National Atlas of the United States. You can visit their web site at http://www.nationalatlas.gov. The dataset was clipped to the upper great lakes region (Minnesota, Michigan, and Wisconsin) to reduce storage size. Additional raster images were added courtesy of the TerraSIP project at the University of Minnesota. When using this tutorial, you are encouraged to use your own dataset."
msgstr ""

#: ../../../en/tutorial/background.txt:25
# e68cbf64a0ba4afe84991f5a7a730ca4
msgid "Like MapServer itself, this tutorial is open and customizable to anyone. This was done in the hope that someone (or some folks) will help design and develop it further."
msgstr ""

#: ../../../en/tutorial/background.txt:29
# b81ff1f19bd3488c8aaf3c3ccb9e582f
msgid "Download the data (and all html files) for this tutorial at http://download.osgeo.org/mapserver/docs/mapserver-tutorial.zip."
msgstr ""

#: ../../../en/tutorial/background.txt:32
# 95c345a5b459466aa08592fac7d51b62
msgid "Before Using the Tutorial"
msgstr ""

#: ../../../en/tutorial/background.txt:34
# 7671a7c840014451a0cb1c794b99998e
msgid "There are some prerequisites to using this tutorial:"
msgstr ""

#: ../../../en/tutorial/background.txt:36
# b669343bdedf465f9dcf91474164dcfc
msgid "Users will need to have a web server installed and running on their computer. This web server has to have support for common gateway interface (CGI) programs."
msgstr ""

#: ../../../en/tutorial/background.txt:39
# 34947072f02043a38acc55fe12cd2590
msgid "Users should have a basic understanding of web servers and internet security. A poorly configured web server can easily be attacked by malicious people. At the very least your software installation will be corrupted and you'll lose hours of productivity, at worst your computer can be used to attack other computers on the internet."
msgstr ""

#: ../../../en/tutorial/background.txt:45
# c3378c24eae548ec9a0608466ea2838f
msgid "It is recommended that users of this tutorial read the :ref:`Introduction to MapServer <introduction>` before proceeding with this tutorial."
msgstr ""

#: ../../../en/tutorial/background.txt:49
# f5ce4d6c8b0b41dab770307818978cda
msgid "To use this tutorial, users will need to have a MapServer CGI program (mapserv or mapserv.exe) installed in their systems. MapServer source code is available for download :ref:`here <download>`. Documentation exists on how to compile and install MapServer:"
msgstr ""

#: ../../../en/tutorial/background.txt:54
# c1be66acc6f94f10bcfe7e4baae2e5d1
msgid "for UNIX users, please read the :ref:`MapServer UNIX Compilation and Installation HOWTO <unix>`."
msgstr ""

#: ../../../en/tutorial/background.txt:55
# 15fe48d64a144146b0feadf486fa851a
msgid "Windows users should read the :ref:`MapServer Win32 Compilation and Installation HOWTO <win32>`"
msgstr ""

#: ../../../en/tutorial/background.txt:57
# d19a7cb9ff6f48f8a0df0a3bfbf94b6a
msgid "In addition, precompiled binaries exist for a number of platform (see the :ref:`download page <download>`)."
msgstr ""

#: ../../../en/tutorial/background.txt:61
# 654077c27f3e4a9aa587e65bc42e327a
msgid "Windows, UNIX/Linux Issues"
msgstr ""

#: ../../../en/tutorial/background.txt:64
# 5059fb15d6a94307a01dc16a414f59e6
msgid "Paths"
msgstr ""

#: ../../../en/tutorial/background.txt:66
# 5e19980b1b1f4981880b665e81d41825
msgid "This tutorial was created on Linux/UNIX but should work with minimal changes on Windows platform. The main differences are the paths in the map files. Windows users need to specify the drive letter of the hard disk where their tutorial files reside. Here's an example:"
msgstr ""

#: ../../../en/tutorial/background.txt:71
# d51e4a99d943418b953ab475fadc6011
msgid "A UNIX map file might include a parameter like this:"
msgstr ""

#: ../../../en/tutorial/background.txt:77
# 5b8d046ef293424491e4458e5cd58c84
msgid "In Windows, the same parameters might look like this:"
msgstr ""

#: ../../../en/tutorial/background.txt:83
# 3cbc3a16a9c443c684f488e64d42e7b9
msgid "or:"
msgstr ""

#: ../../../en/tutorial/background.txt:89
# ce7f56eb9532491f936d7c5fc237c0f2
msgid "Notice that either slash or backslash works in Windows. The usual backslash may work well for you if you want to make a distinction between virtual (as in URLs or web addresses) and local paths in your map file. However, if you plan to move your application to UNIX at some point, you'll have the tedious task of switching all backslashes to slashes."
msgstr ""

#: ../../../en/tutorial/background.txt:96
# 93ecf88ccc5a4114a573034e11b6cb07
msgid "While we're on the subject of paths, keep in mind that paths in mapfiles are typically relative to the system's root directory: the slash (\"/\") in UNIX or some drive letter (\"C:\") in Windows. This is true except when specifically asked to enter a URL or when referencing a URL. When working with HTML template files, paths are relative to the web server's root directory.  i.e., \"/tutorial/\" is relative to \"http://demo.mapserver.org/\". Please read http://www.alistapart.com/articles/slashforward/ for a few insights on URLs."
msgstr ""

#: ../../../en/tutorial/background.txt:107
# d14dbb8a15354873950f49891f5d8676
msgid "Executable"
msgstr ""

#: ../../../en/tutorial/background.txt:109
# 7089be0715274609b754e8df1bf8cb68
msgid "Another issue is that UNIX executable files don't require a .EXE or .COM extensions, but they do in Windows. If you are using Windows, append .exe to all instances of \"/cgi-bin/mapserv\" or \"/cgi-bin/mapserv50\" to make it \"/cgi-bin/mapserv.exe\" or \"/cgi-bin/mapserv50.exe\"."
msgstr ""

#: ../../../en/tutorial/background.txt:116
# e4be71ea33f742868de839a2c1448b40
msgid "Other Resources"
msgstr ""

#: ../../../en/tutorial/background.txt:118
# 93da4583dde34e399e5cfeedf3b5a7cd
msgid "Other documentation exist to give you better understanding of the many customizations MapServer offer. Please visit the MapServer documentation page at http://www.mapserver.org. There you will find several HOWTO documents, from getting started to using MapScript, a scripting interface for MapServer."
msgstr ""

#: ../../../en/tutorial/background.txt:126
# 54cf8ce3fc39420aad06d0a86b95a792
msgid ":ref:`Back to Tutorial home <tutorial>` | :ref:`Proceed to Section 1 <tutorial_section1>`"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:7
# b8fe6106f8f14214a245a3df6a04385c
msgid "Example 1.1"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:9
# a0ea65ee1ca44901a2f5fc03e78cf723
msgid "Map With A Single Layer"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:13
# 29fe92a6890e4b01a5640bcf91ed8d5c
msgid "MapServer can create an image and dump it to a local directory or send it directly to the requesting web browser, as in this example. You can view it without the need for an html page, just enter this URL: `<http://localhost/cgi-bin/mapserv?map=/ms4w/apps/tutorial/htdocs/example1-1.map&layer=states&mode=map>`_ .  This URL will work if you are on the web server (if not, \"localhost\" must be replaced with your web server's name (e.g. \"demo.mapserver.org\") or IP address (e.g. \"140.211.15.84\")."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:21
# bdec24553ad4424f8c553befb0eb88e6
msgid "This URL can be broken into three parts: the first part, http://localhost/cgi-bin/mapserv?, calls the MapServer CGI program. If you invoke it as is you will get this familiar message:"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:29
# 01f18d6c3e9546c984201d1b3ec28181
msgid "The next three parts make up the query string.  The query string contains the CGI parameters (variables and their values), with each parameter separated by an ampersand (\"&\"). So, looking at the query string:"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:34
# b5a6bdf0505047a7b11ef5a15462c769
msgid "The first parameter \"map\" has a value \"/ms4w/apps/tutorial/htdocs/example1-1.map\".  This tells the MapServer CGI program (**mapserv** or **mapserv.exe**) what mapfile to process/parse."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:39
# eceba88de14249fda37905f761f7e082
msgid "The next parameter (*layer=states*) tells **mapserv** to \"turn on\" the states layer.  Recall that we named our layer object \"states\"."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:43
# 7054bf5785cc4775a16c183af93874a6
msgid "The last parameter (*mode=map*) tells **mapserv** what to do with the output from the mapfile. In this case it tells **mapserv** to dump the image directly to the web browser (the client), without first creating a temporary image on the server."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:48
# 31a3c7252fe6477eb3f64fdebe973be2
msgid "The MapServer *mode* CGI variable takes values other than *map*. For example if you use *mode=browse*, MapServer will dump the image to a temporary directory on the server. The browse mode will not work now but we'll come back to it again later."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:55
# f00bc6594e26454ea1c2d3e91b876658
msgid "Mapfile Structure"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:57
# 5154c0657caf4ab5aa072beab3a7f22d
msgid "This is what the mapfile looks like: :ref:`Example1-1.map <example1-1-map>`."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:59
# 797e2e7c0b4f43dd96bf6dfa3ea718d4
msgid "The :ref:`MAPFILE <mapfile>` is MapServer's basic configuration mechanism. It is made up of \"objects\" and each object can have keywords or other objects. It has a hierarchical structure such that some objects fall under other objects... on top of this hierarchy is the MAP object, all other objects belong to it. This example shows a very straightforward heirarchy of objects.  As you go through each example, the complexity of these hierarchical trees will increase."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:67
# 411d3875229f4ababc91a4f10efc2834
msgid "A few quick notes about mapfiles: we define each object in the mapfile with the object name and we close it with \"END\" and we precede comments with a pound (#) sign."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:71
# 6459bc4fc7554a4099556a2d157ed150
msgid "Let's break \"example1-1.map\" down by objects. Its structure looks like this:"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:82
# 35695aaa49f24cc9bcf7b85beb1b70ca
msgid "MAP Object"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:84
# c7250eb8e5cc44c7bd1698307d451159
msgid "Let's look at the keywords (parameters) within the MAP object:"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:88
# f75a4f4446344509a4a83c3ee499b7ec
msgid "**MAP**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:87
# c8f14c113bc24dc38012766e01dfb9ad
msgid "Every mapfile must start with the :ref:`MAP <map>` object--the entire mapfile is the MAP object."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:99
#: ../../../en/tutorial/example1-5.txt:87
# 58dc6f409f8342a580c3a010c9e3e4a3
# 242f518b7b09494f96fbabc77f5e4a04
msgid "**IMAGETYPE**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:91
# d68e043bf65245f0b3e56acfb543ffa6
msgid "The keyword IMAGETYPE is used to define which image format the MapServer CGI program should use for output. In this case we are using indexed color PNG (similar to GIF). This could be GIF, if we compiled the GD library with GIF support, WBMP, or JPEG. We can also specify other output options (PDF, SWF, GeoTIFF) provided that we compiled support for them and specify them with the OUTPUTFORMAT object. The OUTPUTFORMAT goes beyond the scope of this tutorial but you can find out more about by reading through documentations in the MapServer web site."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:139
# e9a5fc46d44a426c9eb94f6065937b08
msgid "**EXTENT**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:102
# b7e44377d6634ee0bfc1add3855286ec
msgid "This parameter specifies the output extent of our map--the bounding box of our initial map.  The EXTENT values are given in this format::"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:108
# ce8e0c3b57c84998b5e2d0e4b567b0ef
msgid "with spaces separating each value. This needs to be in the same units as the data or, if specifying a different output projection, in the same units as the output projection."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:112
# 200321e34df347eb9fffa1777981d910
msgid "In this example our data is in geographic projection so the units are in decimal degrees.  You can use the utility `ogrinfo <http://gdal.osgeo.org/ogr_utilities.html>`_, which is part of the GDAL/OGR library package, to get the extent of a particular Shapefile dataset (or other supported vector formats).  Here is the command I used to get the extent for this example::"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:121
# 8df086ea95154036b8d2ae76f0830abe
msgid "This returned the following output::"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:135
# ccba0583423c4ff5a6d69a876df37ba9
msgid "You can also use ArcView or an open source GIS packages--QGIS, Thuban, etc."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:138
# 3f9b7616b10c48d18c80889dcc123565
msgid "Feel free to change the values of EXTENT to get a better understanding of how it changes your map."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:145
#: ../../../en/tutorial/example1-4.txt:90
# 653d4be587b146a2aec5b31522488e03
# 8e96b92c131a48ed9c21ad77d31c7ead
msgid "**SIZE**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:142
# 76339c3c8e2e419ea9b40974acb3d921
msgid "This is the size of the image (the map) that MapServer will generate, in pixels. So our map is 400 pixels wide by 300 pixels high.  Again, change this to your heart's content and see how it affects your map."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:156
# 12f95e48b7fc48c987ed46f4c7bcf504
msgid "**SHAPEPATH**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:148
# cfaf9f462d52450fb10f040f42632f1a
msgid "This is the path to your data layers. You can provide absolute paths (i.e. \"/ms4w/apps/tutorial/data\" or \"C:/ms4w/apps/tutorial/data\") or paths relative to your mapfile's location (in this example, you'd use \"../data\"). This path doesn't have to be web accessible, and probably shouldn't be unless you want anyone to download your raw data. It has nothing directly to do with the web so don't even think of URLs here.  Just make sure that the user running the web server (usually \"nobody\" or \"apache\" in the \\*nix world) can READ the data in the SHAPEPATH."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:161
# 19b53601eb754d9194530aab95d18d7c
msgid "**IMAGECOLOR**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:159
# f351e010a8394574b8a8f399f701f792
msgid "This is the background color of your map. The values are RGB values so 255 Red, 255 Green, and 255 Blue which results in a white background.  Go ahead and play with this values."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:164
# 5ba58ed442bc4bea82fa183a55b73b46
msgid "LAYER Object"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:166
# a4830b9f8c5a480dbc9bf3cc9c7de3cd
msgid "Now let's look at the LAYER object parameters:"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:172
# bf21e3e0ee9e43eabff1f651e10c4dd4
msgid "**LAYER**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:169
# 8eefb8021d3d418eae23a59a626c160f
msgid "Marks the beginning of a :ref:`LAYER <layer>` within the MAP object.  You can specify as many layers as you like (in MapServer versions < 5, there was a limit that could be changed by editing the map.h header file and recompileing MapServer)."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:178
#: ../../../en/tutorial/example1-1.txt:218
# af7d86892eb94861adbf539766fa4470
# 81fadf41e65142ea84a796480c5805c3
msgid "**NAME**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:175
# 54bce83cfb5942a399e7483bb1b560c8
msgid "This is the layer identifier.  MapServer uses this name to toggle the layer on and off.  It won't work in this example as we have the layer STATUS set to default.  We will get back to this in later examples."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:189
# 2a0ef4199b2a48ae8443b9ca38be7124
msgid "**DATA**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:181
# 47a04d74eae24115aaeace4f5f8f6b6b
msgid "The name of the data (Shapefile dataset in this case). MapServer supports vector data formats other than ESRI's Shapefile format through the use of OGR library (part of the GDAL software package). Please visit the GDAL project web site at `<http://gdal.osgeo.org/>`_ and read `<http://gdal.osgeo.org/ogr/>`_ to learn more about the different vector formats MapServer supports.  In addition, Jeff McKenna and Tyler Mitchell have written a detailed :ref:`guide to using vector data for MapServer <vector>`."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:195
#: ../../../en/tutorial/example1-4.txt:82
# 2373e500eb1a4c5587c1857943159e9e
# 0e425a6a500040899bef1bc2f05a1b48
msgid "**TYPE**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:192
# 693bbaa3b0294eab98f713583e575331
msgid "What type of data is it? If it's a vector data, you can specify whether it is a POLYGON, LINE (you use LINE even if your data is technically a POLYLINE), or a POINT. You can also specify RASTER or ANNOTATION data.  Here we want to display POLYGON."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:200
# c4af6a184d6e46139dc53ad8d10ee572
msgid "**STATUS**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:198
# b583d36b077d485e91c0a3ddb2f14072
msgid "Layers are turned on or off based on their STATUS. DEFAULT is always on.  ON or OFF works when the LAYER name is passed as part of the query string."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:203
# b69ee2296e4d4391aa6fd9da6126bef9
msgid "CLASS Object"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:205
# 9046c9dd7eb848c0ae98a05b4e82d6c4
msgid "Let's look at the CLASS object parameters:"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:211
# dea2cfff4811495c8dfa1240be9e7c61
msgid "**CLASS**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:208
# 23d3c2be9b414fe3a390684a6c9b1f87
msgid "Marks the beginning of a :ref:`CLASS <class>` object within the LAYER object. You can specify as many classes within a layer (in MapServer  versions < 5, there was a limit that could be changed by editing the map.h header file and recompiling MapServer)."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:214
# d08730d6a7c74499b1c7810ef46a2319
msgid "The descriptive identifier for this CLASS. LAYER objects can have multiple classes, just like MAP objects can have multiple layers. CLASS names are used by MapServer as labels for the legend so make sure to use an appropriate descriptive name when naming classes. We will talk about legends later in this tutorial."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:221
# 92717d71537a4924913e16bba9c493cd
msgid "STYLE Object"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:223
# 129f51a1162849bd80a4129a81fd0518
msgid "And finally, let's look at the STYLE object parameters:"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:228
# ed03f88b8ccf44508081aba38a2a81fa
msgid "**STYLE**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:226
# 74c8caba55e14c56892f9709047ff4ef
msgid "Marks the beginning of the :ref:`STYLE <style>` object.  You can define multiple styles within a class.  This is useful when you want to overlay a style over another."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:232
#: ../../../en/tutorial/example1-4.txt:59
# 0e1341c5fdeb437f8b3f9ed61f62b4f3
# 334a5763c63f4f8a9d88511221863859
msgid "**COLOR**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:231
# 0f2ec2544f9547db933bc4b814b8c861
msgid "This is the fill color of the polygon. In case the TYPE is LINE, this is the line color. The values are in RGB format."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:238
# 4a0fc232195b432ba5499eed1cb6d389
msgid "**OUTLINECOLOR**"
msgstr ""

#: ../../../en/tutorial/example1-1.txt:235
# e45a16824f9b45bc90105bdf0c47937b
msgid "This is the outline color of the polygons. The values are in RGB format.  MapServer doesn't draw polygon outlines by default, so if you want to see polygon boundaries, you will want to define an OUTLINECOLOR."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:240
# 8bf217ae286349569bf168a5cfb420b3
msgid "This ends the first example in this tutorial. You are encouraged to change the values of the keywords in the mapfile. It will help you understand what these keywords do."
msgstr ""

#: ../../../en/tutorial/example1-1.txt:246
# 88bd45df8aea42dca6a73f5a63af5528
msgid ":ref:`Back to Section 1 index <tutorial_section1>` | :ref:`Proceed to Example 1.2 <example1-2>`"
msgstr ""

#: ../../../en/tutorial/example1-1-map.txt:6
# dd20c94610394c828db39d3e5c7ead16
msgid "Example1-1.map"
msgstr ""

#: ../../../en/tutorial/example1-2.txt:7
# d8d88acb0e1f4a948f04ce883b49ba2c
msgid "Example 1.2"
msgstr ""

#: ../../../en/tutorial/example1-2.txt:10
# ae22cfd8e8d34aa9b406df41a223105b
msgid "Static Map with Two Layers"
msgstr ""

#: ../../../en/tutorial/example1-2.txt:14
# 5316fde8b4dd417a86f03464a3692903
msgid "As in the first example, this image was generated by linking the source of the <img> tag to this URL: `<http://demo.mapserver.org/cgi-bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example1-2.map&layer=states_poly&layer=states_line&mode=map>`_. This is how most of the examples in this section work."
msgstr ""

#: ../../../en/tutorial/example1-2.txt:19
# bbe75ed84bd94a8687dcfd5f1a3adb05
msgid "Anyway, you'll notice that the map here is the same as the first example.  Yes, but the mapfile is different. Have a look."
msgstr ""

#: ../../../en/tutorial/example1-2.txt:22
# 00593cb65f784c1f88b2ff4dafffded8
msgid "This is what the mapfile looks like: :ref:`Example1-2.map <example1-2-map>`"
msgstr ""

#: ../../../en/tutorial/example1-2.txt:25
#: ../../../en/tutorial/example1-3.txt:18
#: ../../../en/tutorial/example1-4.txt:26
#: ../../../en/tutorial/example1-5.txt:44
# ab27b1b346d5409daa71193b35e6ddb8
# ca49b07eb74545d487cc24d2df056bca
# 5087f75514a643a482e4d55a690268d1
# 534853f383f946ec8d98c0ce5b2526ae
msgid "MapFile Structure"
msgstr ""

#: ../../../en/tutorial/example1-2.txt:27
#: ../../../en/tutorial/example1-3.txt:22
#: ../../../en/tutorial/example1-5.txt:48
# 6645e0e3e0e54993a3042f57ba5b41d6
# edecfadd744248f2b5cac94ef665bbe3
# 5c1c22343e6446aa927edf0212f267c4
msgid "The mapfile structure, by objects, looks like this::"
msgstr ""

#: ../../../en/tutorial/example1-2.txt:34
# 035cf9291fe9401ab5a2c26a0833276c
msgid "Here we split the original layer into two layers. The first layer is still a polygon layer but the :ref:`STYLE object <style>` no longer has OUTLINECOLOR, such as:"
msgstr ""

#: ../../../en/tutorial/example1-2.txt:52
# f0af44863a73408aae9d9c20ecba63a6
msgid "The second layer is similar to the first except that the TYPE is changed to LINE and the COLOR in the STYLE is changed to the same color as the OUTLINECOLOR in the first example. This produces the same image as the first one."
msgstr ""

#: ../../../en/tutorial/example1-2.txt:71
# 5f2f5435be7c4260838bb367ffc1dd2e
msgid "So, why do it this way?"
msgstr ""

#: ../../../en/tutorial/example1-2.txt:73
# c17642a9350549f0a6c8f52236416916
msgid "If we continue to add layers on top of the states layer, the outline will most likely be covered up by these other layers.  To still see the state boundaries after we add these other layers, we have to separate the states boundary line layer from the states polygon layer and put it on top of the other other layers.  There is order in how we define/add layers and you'll see it clearly as we proceed in this section."
msgstr ""

#: ../../../en/tutorial/example1-2.txt:83
# a930e3d9b1764ee5bfa08a861e52d390
msgid ":ref:`Back to Example 1.1 <example1-1>` | :ref:`Proceed to Example 1.3 <example1-3>`"
msgstr ""

#: ../../../en/tutorial/example1-2-map.txt:6
# b8cd6a25fb08480ba23085fe9eac0669
msgid "Example1-2.map"
msgstr ""

#: ../../../en/tutorial/example1-3.txt:7
# b2882e63b91b4f2aacf500bbb91e0ad2
msgid "Example 1.3"
msgstr ""

#: ../../../en/tutorial/example1-3.txt:10
# ca4ff281c2e243ab994856d0365136f7
msgid "Displaying Classes in a Layer"
msgstr ""

#: ../../../en/tutorial/example1-3.txt:12
# 089721b91f38427f9bd5ddd65d8deb8a
msgid "By using non-spatial attribute information in the data, we can create a map like this:"
msgstr ""

#: ../../../en/tutorial/example1-3.txt:20
# 25608cce339a4cacabfaa84e5e715b3a
msgid "This is what the mapfile looks like: :ref:`Example1-3.map <example1-3-map>`."
msgstr ""

#: ../../../en/tutorial/example1-3.txt:32
# 06b9667014db4018bbc5394afe261e30
msgid "Keywords"
msgstr ""

#: ../../../en/tutorial/example1-3.txt:34
# 93a81493bd274f37abfee426b10350c3
msgid "Our mapfile still only has two layers but the polygon layer has been broken down into two classes.  Let's have a look at the additional parameters:"
msgstr ""

#: ../../../en/tutorial/example1-3.txt:52
# ef7bc04eb0b74dada24982b1613275d2
msgid "**CLASSITEM**"
msgstr ""

#: ../../../en/tutorial/example1-3.txt:39
# 385b2ab0eb8a4618b8b21fa35b90b46a
msgid "This keyword is used to specify what attribute to use in separating the class objects.  In this example that attribute is \"CLASS\".  If you open the database file associated with this layer's shapefile, you'll see that there's a column (attribute) called \"CLASS\"."
msgstr ""

#: ../../../en/tutorial/example1-3.txt:44
# 51f9152aab134029bad1e0e68693ff3a
msgid "How do we know which attribute to use?  Well, database records in shapefiles are stored in DBF files.  You can open it in a spreadsheet program such as Openoffice.org's Calc, or in a desktop GIS software such as QGIS, Thuban, or ArcView.  If your data came with a metadata (and it should!), you can skim through through that metadata file for attribute information.  You can also use \"ogrinfo\" to display basic attribute info in your shapefiles--look back at example 1.1 (the last few lines after \"Layer SRS WKT:\" show the attribute names and types)."
msgstr ""

#: ../../../en/tutorial/example1-3.txt:59
# a2fce4ac62f44246b84eb1703265d62d
msgid "**EXPRESSION**"
msgstr ""

#: ../../../en/tutorial/example1-3.txt:55
# 3c19d3e342e246bfb0508c2e34554241
msgid "For each class, we specify what attribute value to use.  This is the simplest form of EXPRESSION.  EXPRESSIONs can be even more complex than this, allowing one to evaluate regular or logical expressions.  Please look at :ref:`expressions` in the mapfile reference to see what you can do with EXPRESSION."
msgstr ""

#: ../../../en/tutorial/example1-3.txt:63
# 837ca4c708064f6d9feb04d523b9a3b9
msgid ":ref:`Back to Example 1.2 <example1-2>` | :ref:`Proceed to Example 1.4 <example1-4>`"
msgstr ""

#: ../../../en/tutorial/example1-3-map.txt:6
# dc75acaf1af44c3aa176a905e5c95b74
msgid "Example1-3.map"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:7
# c4b3d328e410475a8abc8a402632a07a
msgid "Example 1.4"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:10
# b01c27c13f4945ffa0f45bf16cf7c881
msgid "Labeling the Map"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:12
# db068e051c894b2db330734930a57ab1
msgid "We can also add labels to our map..."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:16
# 82bd6c176b1747dda7b4236eddc7c2f0
msgid "MapServer has a very flexible labeling engine.  It supports native bitmap as well as truetype fonts.  Font scaling is supported with truetype. The labeling angles and placements can be customized...  If you take the time to learn the many parameters involved in creating good labels, you will be rewarded with informative and aesthetically pleasing maps."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:23
# e5eee30e56944f79aaa7848a88cb0e76
msgid "This is what the map file looks like: :ref:`Example1-4.map <example1-4-map>`."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:28
# b549b44f60924a51ae9dc74b6f390f12
msgid "The map file structure, by objects, looks like this:"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:38
# d0443672aae4411283c9393a6a6c01b3
msgid "The LABEL Object and Keywords"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:40
# 9452a10ad412439e97f888366bbbacdb
msgid "Here we introduce a few more parameters along with the LABEL object:"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:47
# aaabd597a4ad4ca388d095e7d07f1e2d
msgid "**FONTSET**"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:43
# 006b3a8de57a480f8fd3a4160911df10
msgid "Here we specify the full path to our truetype fonts list (or fontset) file. This file lists each of the available fonts. See the file itself and the :ref:`MapServer fontset documentation <fontset>` for more info.  FONTSET is a parameter of the MAP object."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:51
# ccc1568c03ea4e1c895868798ceb9edc
msgid "**LABELITEM**"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:50
# 256a82f73da64b0cb2b21e8bed11b558
msgid "This specifies which data attribute to use for labeling, in this case \"STATE\". LABELITEM is a parameter of the LAYER object."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:55
# 83a285886775452bb4395a0e18027e9a
msgid "**LABEL**"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:54
# 1f29f02d97ad499c8f7c2fc10a99348e
msgid "Marks the beginning of the LABEL object. The label object can be used under other objects (i.e. the SCALEBAR object)."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:58
# 9bb8d220e4ac481cb96e3787811bae58
msgid "Within the LABEL object, COLOR specifies the color of the label text."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:67
# d6d23ebe7d1a488da7aeba83b459c046
msgid "**SHADOWCOLOR - deprecated**"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:62
# a262e8da0cfa46878efdf915fc76ad09
msgid "This specifies the shadow color of the label text."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:66
#: ../../../en/tutorial/example1-4.txt:76
# 5fe52f224c2d43798972e37f60d1d0d7
# a70543cc51874b0685d47786807997aa
msgid "Since MapServer  6, LABEL STYLE with GEOMTRANSFORM LABELPOLY must be used instead.  The tutorial files have not been updated."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:77
# 1b91eb73df194e6d83f050214bd30a79
msgid "**SHADOWSIZE - deprecated**"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:70
# 62887410ef53492d897c5e0c73968026
msgid "Specifies the shadow size. The value corresponds to the X and the Y shifts in pixels. So, \"2 2\" means two pixels wide by two pixels high."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:80
# 5e2e2789b6f74700b6917113223379a0
msgid "Within the LABEL object, TYPE specifies what type of font to use. We have the choice of TRUETYPE or BITMAP (the built-in fonts). We choose TRUETYPE."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:86
# 2feba8bc14234e198385f656f2b2f4f4
msgid "**FONT**"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:85
# d6cb4f3dcde948a98860943bb959d558
msgid "If you specify TYPE as TRUETYPE, you need to specify what font to use.  The value here is the \"alias\" in the font list file."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:89
# 2da3966415d947c0a7c2c394a01793ce
msgid "If using truetype fonts, the value is size in pixels. If bitmap, you can say something like \"small\" or \"large\"."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:94
# b4296c441565400a9858f93f68649398
msgid "**ANTIALIAS**"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:93
# 03a453c3ccfb41cba924574daae7f989
msgid "This turns truetype antialiasing on or off. Remember the value isn't on or off but TRUE or FALSE."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:106
# e13902b20acf4a6cb6b549c6da559db5
msgid "**POSITION**"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:97
# 34cebc135f0a442b8f266bd7c01bf6e0
msgid "Where to position the label text in relation to the label points. The value is a combination of vertical and horizontal positions. You have the following choices for vertical alignment: C for center, U for upper, and L for lower. For horizontal alignment you have the following choices: C for center, L for left, and R for right. So, to align the label text to the center of label ID you'd use the value \"CC\" (center-center). Or if you'd like it to be on the lower left of the ID, you'd use LL. Another way is to let MapServer decide the best position for your labels. For this you would use the value \"AUTO\"."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:111
# d97c950753c24c46b51e869235da6be9
msgid "**PARTIALS**"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:109
# 92c1930083c6437ebf532236e65739ec
msgid "Tells MapServer whether to generate incomplete label texts or not. The default here is not to generate fragments of a label text. The value is either TRUE or FALSE."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:115
# 84c1e252722a4105a3cf4ae67f72bb30
msgid "**MINDISTANCE**"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:114
# 5694703ee1484f0f89a09d1e6fdca353
msgid "This is the minimum distance in pixels between duplicate labels. See what happens if you increase or decrease this value."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:117
# e3602d4142c84bc9b7125bf2e6025f50
msgid "**BUFFER**"
msgstr ""

#: ../../../en/tutorial/example1-4.txt:119
# 1e7844acf83b44d998ac5d715d86238e
msgid "The padding (in pixels) for each label. This is used to enhance readability. A BUFFER of 4 pixels mean that no label will be drawn within four pixels of each other. Again, change to see how it works."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:124
# cfe7e3780020425e8ca11edbfce34322
msgid "You can also create labels separate from a POLYGON layer. You do this with the ANNOTATION data type. Have a look at the next example's map file to see how you'd implement this kind of labeling.  You will notice that the CLASS object within the \"label\" layer has a COLOR parameter value of \"-1 -1 -1\". The negative number tells MapServer to give this CLASS a transparent color (the label IDs don't show up). Once again, play with the values to understand how it affects the map."
msgstr ""

#: ../../../en/tutorial/example1-4.txt:134
# 46cbcdd605ec4d4684515c15caad16ce
msgid ":ref:`Back to Example 1.3 <example1-3>` | :ref:`Proceed to Example 1.5 <example1-5>`"
msgstr ""

#: ../../../en/tutorial/example1-4-map.txt:6
# a6f0c057acc7483382d9acaf2759a4c0
msgid "Example1-4.map"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:7
# d4af4eb43b76484f900c1c9020277d40
msgid "Example 1.5"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:10
# c70ce33ab88c4f4ca44d0f4395c96455
msgid "Adding a Raster Layer"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:14
# cdcace85664a4657afe02dbd478f88b1
msgid "In addition to vector data support (point, lines, polygons, and annotations), MapServer can also display raster data. Through the use of GDAL library, MapServer can input and output multiple raster formats. Whereas in versions prior to 4.x raster input is limited to single layer, grayscale or indexed color images, recent MapServer versions support RGB and multispectral (multi-layer) images. This example shows how to select what layers to display when using multispectral data."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:25
# d6d56efa3a394e4888482e21207e7de4
msgid "There might be a noticeable performance hit when using RGB and multispectral images."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:28
# ec7c507abcdf450bbef84f615e5acb97
msgid "Because MapServer 5.x uses AGG or GD version 2.0.x to generate output images, it supports RGB (24-bit or true color) output as well. So, along with 8-bit (indexed color or grayscale) PNG8, you can now also use PNG (true color) for output. This example uses PNG as IMAGETYPE."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:36
# 3ac48b8108254178acd784acd0f45511
msgid "As with RGB input, there might be a noticeable performance hit when using PNG compared to PNG8."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:39
# 34232e22e76547918c99aac8c009b311
msgid "MapServer can actually use GDAL to generate output images as well, but that's another topic. If you want to know more about it, look at the :ref:`OUTPUTFORMAT <outputformat>` object in the mapfile reference."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:46
# 2f1ee7cc580042e0b2eea9bce7e88809
msgid "This is what the mapfile looks like: :ref:`Example1-5.map <example1-5-map>`"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:59
# a2bb90db7afc472095f7a47fdba23462
msgid "When you look at the mapfile, you'll see that the new LAYER object is added below (after) the state POLYGON layer. Why? MapServer displays layers in reverse order: last in, first out (LIFO). The first layer defined in the mapfile is drawn at the bottom of the map."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:64
# 13927c5b79264effa0aa9c606c96871b
msgid "So, if we have drawn the state POLYGON layer, it would be on the bottom. Since the raster layer gets drawn on top of it, we won't see it. That's why the first layer gets the STATUS value of OFF. The state LINE layer is defined below the raster layer so it gets drawn on top (and you can see it). This is why we separated the state LINE layer from the state POLYGON layer. Of course the labels get drawn on top of everything."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:71
# a9d553ec858e468484d4537aa4a62cb5
msgid "MapServer can automatically turn layers on or off based on the status of other layers (say you want the states polygon layer turned off when the raster layer is turned on). This is done by using the REQUIRES parameter. Keep this in mind as you might want to use it once you start creating your own MapServer applications."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:78
# 06b311182d74493d97c2a0df1d53a405
msgid "Parameters"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:80
# 87660642d70347348b5caaeabe6a61bd
msgid "Let's have a look at the new parameters introduced in the mapfile:"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:83
# b727d53a1dee4c2a837bd0e7b94eab5c
msgid "PNG is the 24-bit or true-color version of the PNG format.  By the way, try changing this value to PNG8.  Notice the time it takes to generate the image using either formats. In choosing between true color and indexed color, take into account the time it takes to generate the image."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:94
# 8ee25e9523f642f8ae309b7988661616
msgid "**SYMBOLSET**"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:90
# 9ea3cb07e0d345adbcbf055f165ce8d0
msgid "Points to the path of the symbol definition file. The symbols in this file are referenced by the SYMBOL parameter in the :ref:`CLASS <class>` object.  It's not really needed at this point but I thought I'd throw this here now.  Please refer to the :ref:`Cartographic Symbol Reference <sym_construction>` for further information."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:103
# ab2ee8e99e334259ae2b6ef2d138077e
msgid "**DATA raster/mod09a12003161_ugl_ll_8bit.tif**"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:97
# ac9f7604c51240fca5ab743269c0423f
msgid "In the newly added LAYER object, the DATA parameter points to a GeoTIFF image.  Like vector datasets, MapServer supports multiple raster file formats. This support is accomplished through use of the GDAL library. For more information on the different raster formats supported by MapServer and for general discussion on the use of rasters in MapServer, please read the :ref:`Raster Data Reference <raster>`."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:108
#: ../../../en/tutorial/example1-7.txt:51
# 8e352a036a7c40868fb684738f63948c
# 17aad139cc5a416b9d50d2853931f747
msgid "**TYPE RASTER**"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:106
# f4c5ef2909a84c4685856bd978c89e9e
msgid "When using raster data (images) we use the value RASTER for the parameter TYPE, as opposed to the POLYGON, LINE, and POINT values for vector data and ANNOTATION for label IDs."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:115
# a48dc9e8e2e940ca8a1001ffe4daa483
msgid "**PROCESSING \"BANDS=1,2,3\"**"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:111
# c6e39cc285bf48dc838ac1c1c30f489a
msgid "This LAYER object parameter was added in MapServer 4.x. The :ref:`PROCESSING <layer>` keyword has many values but in this case we are using it to select which bands in a multispectral image to display. The values here are strings that will be passed to the GDAL library."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:121
# cd5ced5da06049289a0d4e9d45fa1476
msgid "**OFFSITE**"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:118
# 6462e35cfef043789e6315ab775f3d8e
msgid "This parameter tells MapServer what pixel values to render as background (or ignore). You can get the pixel values using image processing or image manipulation programs (i.e. Imagine, Photoshop, Gimp)."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:124
# d3099814a344425f98d5845d97c56a3c
msgid "RGB vs Indexed Color Image"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:126
# 45604921a0a54824914983d28d32176d
msgid "To compare map creation speed when using RGB image as opposed to indexed color image, replace the following lines in the mapfile:"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:137
# 3b34a4867cbb41fdae1dc8b3f61470eb
msgid "with these:"
msgstr ""

#: ../../../en/tutorial/example1-5.txt:147
# f2eb21de85d74c9dbad1706bfcd8a9e6
msgid "Also, try changing the IMAGETYPE from PNG to PNG8."
msgstr ""

#: ../../../en/tutorial/example1-5.txt:151
# ed766636d9564d13b5622c021cae612f
msgid ":ref:`Back to Example 1.4 <example1-4>` | :ref:`Proceed to Example 1.6 <example1-6>`"
msgstr ""

#: ../../../en/tutorial/example1-5-map.txt:6
# b79f9cbe8de34bca855cadb1748dc205
msgid "Example1-5.map"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:7
# a95a04679ac84e0eaaea75c81a33622e
msgid "Example 1.6"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:10
# 982d70c8e5004930b993655f967af1d5
msgid "Defining Projections and Extents"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:14
# b50335e99bcd4091a6b773b9290c72ce
msgid "Whoa! What happened here?"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:16
# 3dd54b34eba146b9a8f66c23d2fe9a8b
msgid "You've just experienced on-the-fly reprojection. When a PROJECTION object is defined in the mapfile, MapServer passes the layer and projection info to the Proj.4 library which does the reprojection.  For more information about the Proj.4 library, please visit `<http://proj.maptools.org/>`_."
msgstr ""

#: ../../../en/tutorial/example1-6.txt:21
# c0a9fcbfcf154da19a6b31dbb3191936
msgid "This example attempts to shed some light on the projection support in MapServer."
msgstr ""

#: ../../../en/tutorial/example1-6.txt:23
# b3c3b7598f17477f9d07924f60e07168
msgid "This is what the mapfile looks like: :ref:`Example1-6.map <example1-6-map>`"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:25
# c2ee42ea49954785aa30450c6ce14c8f
msgid "The first thing you might have noticed with our mapfile is the original EXTENT has been commented out and the new EXTENT values don't look anything like latitude and longitude values. Also, we have added a PROJECTION object near the top and within each of our layers."
msgstr ""

#: ../../../en/tutorial/example1-6.txt:30
# 3b2f7ddba5ec47a7a993edbd206d45ca
msgid "Let's have a look at the new object and parameter::"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:34
# 56981df859924c86b4db9828e5160c9f
msgid "The extent we provide to MapServer needs to be in the same units as the output projection.  Since Lambert Azimuthal Equal-Area's units are in meters, we have to give the new extent in meters.  We can calculate the new extent using ArcView or some other GIS package, or you can use Proj.4's cs2cs utility.  The command below is what can be used to reproject the original extent values::"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:42
# e6eff312cd054eb4a62e39b8106b3d4c
msgid "After typing the command, enter the southwestern coordinate pair (the lower left coordinates), separated by a space::"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:47
# 7b09bce9d9574c69ae605e409347868d
msgid "to which the \"cs2cs\" utility gives the values::"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:51
# d7c902a25bf745679eb6fc24bc39858c
msgid "I then type the northeastern coordinate pair (upper right corner coordinates), again separated by space::"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:56
# 9231d01dc50e4ef68004edf9cda9ba26
msgid "and the following values are returned::"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:60
# 531c8a0d29d54cbfb52cb8682264ac52
msgid "You will notice that \"cs2cs\" returns a set of three values.  You can ignore the third value, 0.000, as it means to represent altitute (which we're not using). Anyway, we can now present the EXTENT as::"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:66
# 6bfc509cd2014b528bec5f4d13afbdeb
msgid "But it doesn't match up the extent above, you say.  Well, that's what usually happens when you reproject -- the map doesn't necessarily get centered as you'd expect.  You can fudge around it, taking a few thousand meters off to the left and adding a few to the right.  Or, you can use a graphical GIS package to give you the extent. `Here are the instructions <http://biometry.gis.umn.edu/tutorial/arcview_extent.html>`_ for getting `EXTENT` using ArcView."
msgstr ""

#: ../../../en/tutorial/example1-6.txt:74
# a8a7d5eb54f14f55a597e2e60f303dde
msgid "MapServer can take projection definitions in two ways. The first is shown in the mapfile's output PROJECTION object (the first PROJECTION block). This is the traditional way of passing parameters to the Proj.4 library. The other way is to use the EPSG codes. These codes are standard projection codes (or spatial reference identifiers) as defined by the European Petroleum Survey Group (EPSG). In the case of our Lambert Azimuthal Equal-Area projection, it has a code of \"2163\". If you comment out the four lines after PROJECTION and uncomment the line \"init=epsg:2163\", this will provide the same information to Proj.4. If you want to learn more about EPSG codes, have a look at \"/usr/local/share/proj/epsg\" or \"C:/proj/nad/epsg\" (\"/ms4w/proj/nad\" in MS4W)."
msgstr ""

#: ../../../en/tutorial/example1-6.txt:85
# 5692e9336ca0449395cf1f97c733f9f8
msgid "Also, check out the EPSG web site at `<http://www.epsg.org>`_."
msgstr ""

#: ../../../en/tutorial/example1-6.txt:87
# 8aa631e854554e23b684544a5e0cd3dd
msgid "If you need to learn more about projections, please look through some of the links below:"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:89
# c97f8e38a5874f65a37a3f7144407e11
msgid "`<http://www.colorado.edu/geography/gcraft/notes/mapproj/mapproj_f.html>`_"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:91
# be7e5776fa0e4d9e87d79735515e836a
msgid "`<http://www.geography.hunter.cuny.edu/mp/>`_"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:93
# 28bc2c40e6ed4b7199f0722a7c5042b2
msgid "`<http://www.nationalatlas.gov/articles/mapping/a_projections.html>`_"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:95
# 7fd4fa95234145df9fd5938f24024aac
msgid "`<http://en.wikipedia.org/wiki/Map_projection>`_"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:97
# 82db8cad8b6f45b5ac1ab562cfae428d
msgid "`<http://erg.usgs.gov/isb/pubs/MapProjections/projections.html>`_"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:99
# e38c48fe8af141fca94008bad16e209a
msgid "`<http://spatialreference.org/>`_"
msgstr ""

#: ../../../en/tutorial/example1-6.txt:101
# e12aa297c2c647fe93e2b5d2bda79bb6
msgid "You can find more by searching the web for \"map projection\"."
msgstr ""

#: ../../../en/tutorial/example1-6.txt:105
# dab34930bf0b4d678335b309d53656e8
msgid ":ref:`Back to Example 1.5 <example1-5>` | :ref:`Proceed to Example 1.7 <example1-7>`"
msgstr ""

#: ../../../en/tutorial/example1-6-map.txt:6
# f19f3224d212447081fe532d6c1f5bf9
msgid "Example1-6.map"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:7
# c0dfdc35554b4a5ca1b62ba4bd518a5e
msgid "Example 1.7"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:10
# adfb24832bd44c25adfc68d459a1ccb4
msgid "Adding OGC WMS Layers"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:14
# 0de431c0bedc46aeaa6f503c99de3113
msgid "Another exciting feature of MapServer is its ability to use layers from other map servers. In this case, a MapServer application becomes a WMS (or WFS) client. MapServer can also share (or serve up) the layers in the mapfile to other map servers. This makes an application a WMS (or WFS) server. What is WMS or WFS? These are \"web-based interoperability service\" specifications published by the Open Geospatial Consortium (OGC). WMS stands for Web Map Service and WFS for Web Feature Service. The difference between these two specifications, in simple terms, is that WMS uses web raster formats (PNG, GIF, JPEG) to share layers while WFS uses GML, the Geography Markup Language. A third OGC interoperability specification is the Web Coverage Services specification or WCS.  MapServer supports WCS at the server level only. To find more information about WMS, WFS, and WCS go the the `OGC's web site <http://www.opengeospatial.org>`_ and look for the `OGC Implementation Specifications <http://www.opengeospatial.org/specs/?page=specs>`_ or `OGC Abstract Specifications <http://www.opengeospatial.org/specs/?page=abstract>`_. The MapServer web site also has :ref:`documentation <documentation>` and `WIKI pages <https://github.com/mapserver/mapserver/wiki>`_ for these specifications."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:32
# d69fa2693aac4c09bb201d4de96a03b4
msgid "This example shows you how to add a WMS layer in your mapfile."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:35
#: ../../../en/tutorial/example1-8.txt:19
# 6814824710ea41588a76caca47912860
# 1080c330bf6c47c0a9e62a1b25275d3b
msgid "The MapFile"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:37
# 86ab9297909448fea9341c70bafdccdf
msgid "This is what the mapfile looks like: :ref:`Example1-7.map <example1-7-map>`"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:40
# 826312fba6cf41178aa214c4a49a8568
msgid "LAYER Object and WMS Parameters"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:42
# c2367a4c923b47aea3f702c467f886bb
msgid "Let's have a look at the WMS layer:"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:45
# 03a4d536bf07405bbf46164442e4d5d2
msgid "**LAYER # MODIS WMS map from JPL**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:45
# 7d69ec37ecac4889a4bdffa10d3cd2c7
msgid "Marks the start of the WMS LAYER object."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:48
# f83dd89c835a4aee86cef9bec78038d3
msgid "**NAME modis_jpl**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:48
# 6da85dc72e2442df9079da3935444210
msgid "The LAYER identifier."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:51
# d08d8bf411914dcca93d87a0aafea9ed
msgid "Since this the WMS layer is an image, we use RASTER as LAYER TYPE."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:54
# ca8ea3515704441f99526a3220062b2d
msgid "**OFFSITE 0 0 0**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:54
# faaca04046064038b65317b4c0d7bd3e
msgid "Ignore the black background color"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:57
# d16b43aa131a463b949696e602db5f08
msgid "**STATUS OFF**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:57
# b6a133f912594e07bfa3a41ec4a83eae
msgid "Turn this layer off by default."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:67
# b5b3dadc1a094cd79af9cd95ddd91399
msgid "**CONNECTIONTYPE WMS**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:60
# 627105eefd1e41f987ec1be5137e225e
msgid "The type of LAYER connection to use. The default is LOCAL."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:64
# e2597c78cc5e40d4a02a228dec0c6ff9
msgid "If we have to be explicit, we would add CONNECTIONTYPE LOCAL to all othe vector and raster layers in our mapfile. Instead we only define connection types that are external. WMS is an external data layer, coming from another map server."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:73
# 49068e3b8edb4da1970abcef838428cb
msgid "**CONNECTION \"http://mapus.jpl.nasa.gov/wms.cgi?\"**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:70
# b0d3f34cef364bbb863b8777f3110d77
msgid "The connection string that allows us to *get* the data from another server. In the case of WMS connections, this is a URL.  If we were using a PostGIS database, it would be an SQL statement.  Please note that the string has to be in a single line in your mapfile."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:79
# aa0d6f866f7f40dd86dc1d71059f6174
msgid "**METADATA**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:76
# f8c2b6ed138a4adcba7b2ccd3c5836e5
msgid "marks the beginning of the METADATA object for our WMS layer. MapServer uses the parameters defined within this object along with the CONNECTION parameter above to form a valid WMS request to the WMS server."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:85
# 7fb4ec5811ce4e2d866f3877295df758
msgid "**\"wms_srs\" \"epsg:4326\"**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:82
# e149ab2967e741c5989cbcac63216116
msgid "The WMS projection.  Sometimes the WMS server supports more than one projection.  If this is the case you might want to request the map in your output projection (epsg:2163).  Unfortunately, the JPL server doesn't support this projection."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:88
# 2a6dc368b48a425e9c54740282dbf766
msgid "**\"wms_name\" \"modis\"**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:88
# 32bd556b436a46c49412b7810ee5b32e
msgid "The WMS layer name. This is like adding the parameter \"layers=modis\"."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:92
# 6a3c4fe62b3e4a12beebcd7d7cbf1391
msgid "**\"wms_server_version\" \"1.1.1\"**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:91
# 5168e729d93645f6b6c847c0c4305d60
msgid "The WMS version the server complies to.  For more options, see :ref:`ogc_support`."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:96
# 0d8b0da88f8446a8b9785d70a38a9b7b
msgid "**\"wms_format\" \"image/jpeg\"**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:95
# 787955d599f5481e8d86aa29231773ff
msgid "The image format we expect to be receiving from the WMS server. You can try replacing the value with *image/png* or something else."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:99
# 6c3c7111751e4e64bd906da1324a9806
msgid "**END**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:99
# 405473fcfd5f4b6ea81cdb1b3e53dd88
msgid "marks the end of the METADATA object"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:101
# 8b213163e4f44036849aee6dba5ff083
msgid "To know more about adding WMS layers to your applications, please visit the :ref:`MapServer WMS Client Howto <wms_client>`."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:105
# d2a471bd8c044fdf9d5da1c57151fe70
msgid "WEB Object Parameters"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:107
# d90765c88e0c4a6ea6eaa0c8ed0324c6
msgid "In addition to adding the WMS layer object, there's also a new object under MAP. This is the WEB object. Within the WEB object are two parameters:"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:114
# 656283f463814a5dbf714f054409ec44
msgid "**IMAGEPATH '/data/tmp/'**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:110
# d4f8b47595914370aa9325c6dd48d784
msgid "The absolute local path to a web accessible temporary directory. The user running the web server processes should be able to write to this directory. Make sure that the path includes a slash (/) at the end. (Your IMAGEPATH might look something like this: \"/home/apache/htdocs/tmp/\" or \"C:/Inetpub/wwwroot/tmp/\".)"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:120
# c740ebe530034f52a06b52caabdc64c5
msgid "**IMAGEURL '/tmp/'**"
msgstr ""

#: ../../../en/tutorial/example1-7.txt:117
# 1bddad29b0b44297bd53ad2b5072217c
msgid "This is how IMAGEPATH will appear relative to the web server's root directory. If we have to type the full URL for this, it will be \"http://terrasip.gis.umn.edu/tmp/\". Make sure that the path includes a slash (/) at the end."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:124
# b74d5736bf264606a32fbab98b80af62
msgid "Finally, within the MAP object, I added a new parameter: NAME. This is the identifier for the MAP object. MapServer uses this as prefix to all images it creates and dumps to the *tmp* directory.  It's not needed at this point but it also doesn't hurt to have it."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:129
# 7a82f5a8d9f2418fa2230474cd782bcb
msgid "If you would like to share your data layers to other map servers, you will need to add METADATA objects within your MAP object and within each of the LAYER objects you would like to share. All the WMS layers that you added from another server will automatically be cascaded and will also become available to others. To know more about how to make your MapServer application become a WMS server, please read the :ref:`MapServer WMS Server HowTo <wms_server>`.  Documentation also exists for configuring MapServer applications to support the WFS standard, both as a :ref:`server <wfs_server>` and as a :ref:`client <wfs_client>`."
msgstr ""

#: ../../../en/tutorial/example1-7.txt:142
# 9cb7ee4a8b6143ae8fea5e8d70b640b0
msgid ":ref:`Back to Example 1.6 <example1-6>` | :ref:`Proceed to Example 1.8 <example1-8>`"
msgstr ""

#: ../../../en/tutorial/example1-7-map.txt:6
# ed27612c3cb2411d81830a9d7288b61c
msgid "Example1-7.map"
msgstr ""

#: ../../../en/tutorial/example1-8.txt:7
# 932b149363584d65b14d65262aad6edc
msgid "Example 1.8"
msgstr ""

#: ../../../en/tutorial/example1-8.txt:10
# daec20a2381a4f8781bdd133d5aba313
msgid "Changing the Map's Output Format"
msgstr ""

#: ../../../en/tutorial/example1-8.txt:14
# 09f6c1c015e7496dbc98a8ed1159fed1
msgid "Depending on the format you choose, the image may not display on your browser. If the link fails to display on your browser, right click on the graphic above and save the link as whatever format you specified on your mapfile."
msgstr ""

#: ../../../en/tutorial/example1-8.txt:21
# 43e7b6854cf34d2eab6462251c88ae24
msgid "Here's the mapfile: :ref:`Example1-8.map <example1-8-map>`"
msgstr ""

#: ../../../en/tutorial/example1-8.txt:24
# 0f65397593ce443e96d50ed28a81c2b2
msgid "OUTPUTFORMAT Object"
msgstr ""

#: ../../../en/tutorial/example1-8.txt:26
# 3155c7677c1e4a7c9078ee37bc994eb1
msgid "Our mapfile now contains a new object, OUTPUTFORMAT. This object is defined within the MAP object and is used in conjunction with the IMAGETYPE keyword.  Depending on the libraries you compiled with MapServer, you can have several output format choices.  The AGG library provides PNG, PNG8 and JPEG; The GD library provides GIF; the GDAL library, a source for many of MapServer's input formats, can also provide output to PNG, JPEG, TIFF/GeoTIFF, and other raster formats; the Cairo library provides PDF, PNG and SVG output.  Have a look at the OUTPUTFORMAT object and experiment by changing the IMAGETYPE keyword on you mapfile. The NAME of your OUTPUT format should be used as your IMAGETYPE value ex: IMAGETYPE png or IMAGETYPE png24)."
msgstr ""

#: ../../../en/tutorial/example1-8.txt:38
# d659301795e249558b2f27399b2ecf9f
msgid "Please consult the :ref:`OUTPUTFORMAT object reference <outputformat>`."
msgstr ""

#: ../../../en/tutorial/example1-8.txt:42
# 3c25136805cb40a3bc366d1fbd90dbf2
msgid ":ref:`Back to Example 1.7 <example1-7>` | `Proceed to Example 1.9 <http://demo.mapserver.org/cgi-bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example1-9.map&layer=states&layer=modis>`_"
msgstr ""

#: ../../../en/tutorial/example1-8-map.txt:6
# d9bf90324ab9419ab78e26c488e6424f
msgid "Example1-8.map"
msgstr ""

#: ../../../en/tutorial/index.txt:8
# 3106431075a34ea592b03cbe1342da44
msgid "MapServer Tutorial"
msgstr ""

#: ../../../en/tutorial/index.txt:10
# a5f736122ab946f48031c9a2fb4a1a82
msgid "Pericles S. Nacionales"
msgstr ""

#: ../../../en/tutorial/index.txt:11
# 41252a22ee9c40ec89cf1c0fb099d72e
msgid "pnaciona at gmail.com"
msgstr ""

#: ../../../en/tutorial/index.txt:12
# d03a3d97c024449cae877448c17b48eb
msgid "Jeff McKenna"
msgstr ""

#: ../../../en/tutorial/index.txt:13
# 5bfa30618d434c109d1edc96179894dd
msgid "jmckenna at gatewaygeomatics.com"
msgstr ""

#: ../../../en/tutorial/index.txt:14
# be85ad1f5c2e4c908f7c0faa7dbcdfa1
msgid "2010-04-07"
msgstr ""

#: ../../../en/tutorial/index.txt:16
# 5c3431346e004e18b617d00fe0d47697
msgid "This tutorial was designed to give new users a quick (relatively speaking) introduction to the concepts behind MapServer. It is arranged into four sections with each section having one or more examples and increasing in complexity.  Users can jump to any section at any time although it is recommended that absolute beginners work on the first three sections sequentially."
msgstr ""

#: ../../../en/tutorial/index.txt:23
# 062dadc8f85d40b88569f811ff1cdfa9
msgid "Section one focuses on basic MapServer configuration concepts such as layer and class ordering, using vector and raster data, projections and labeling.  Section two provides examples on how to use HTML templates to create a simple interface for an interactive web mapping application. Section three introduces the use of HTML templates to provide a \"query\" interface. Finally, section four introduces some advanced user interface concepts."
msgstr ""

#: ../../../en/tutorial/index.txt:42
# 417349ece6b545788f4eacc0a18539e8
msgid ":ref:`Begin tutorial <tutorial_background>`"
msgstr ""

#: ../../../en/tutorial/index.txt:1
# 08055d37ebee4b3d980c8cb59ce9ed3d
msgid "Tutorial"
msgstr ""

#: ../../../en/tutorial/section1.txt:4
# c255cfb3e9754166bfbe5c08f2115002
msgid "Section 1: Static Maps and the MapFile"
msgstr ""

#: ../../../en/tutorial/section1.txt:6
# f668a0641a3945099cf68ed956087f2c
msgid "Take a Shapefile dataset. Any Shapefile dataset.  We can use MapServer to display that Shapefile dataset in a web browser. Look..."
msgstr ""

#: ../../../en/tutorial/section1.txt:10
# 97f29091ed9d43de98050b47d5ce9d58
msgid ":ref:`Example 1.1 - A map with a single layer <example1-1>`"
msgstr ""

#: ../../../en/tutorial/section1.txt:12
# c61b704529a04805a5762242b3fc9c03
msgid "We can display the same Shapefile dataset repeatedly. We can display the polygon attributes in one LAYER and the line attributes in another..."
msgstr ""

#: ../../../en/tutorial/section1.txt:16
# a1eed7536f49445abd6b2f44f191bdaa
msgid ":ref:`Example 1.2 - A map with two layers <example1-2>`"
msgstr ""

#: ../../../en/tutorial/section1.txt:18
# bbb333c214dd4b8dbe783407e5aaf291
msgid "And we can select which parts of the Shapefile dataset to display. We do this using the CLASS object..."
msgstr ""

#: ../../../en/tutorial/section1.txt:21
# ce99eee2c87449a98fff2f6703a13ee5
msgid ":ref:`Example 1.3 - Using classes to make a \"useful\" map <example1-3>`"
msgstr ""

#: ../../../en/tutorial/section1.txt:23
# 0206f52846e04ac88c6c538a9c82b565
msgid "We can also label our maps..."
msgstr ""

#: ../../../en/tutorial/section1.txt:25
# b5b7fcead0154badb75aee3d672569b7
msgid ":ref:`Example 1.4 - Labeling layers and label layers <example1-4>`"
msgstr ""

#: ../../../en/tutorial/section1.txt:27
# 3bdf7c52f5b84c389a6c277a3b84e420
msgid "Or add raster data such as satellite images, aerial photographs, or shaded reliefs..."
msgstr ""

#: ../../../en/tutorial/section1.txt:30
# b779c0476c154f7687b9b049ebfa18b8
msgid ":ref:`Example 1.5 - Adding a raster layer <example1-5>`"
msgstr ""

#: ../../../en/tutorial/section1.txt:32
# 854ffbbed21b433fbbef1109c8e6c7bf
msgid "We can reproject our data from just about any projection to just about any... Yeah, check it out!"
msgstr ""

#: ../../../en/tutorial/section1.txt:35
# a4710077a1634b33a84b3105efea50c3
msgid ":ref:`Example 1.6 - Projection/Reprojection <example1-6>`"
msgstr ""

#: ../../../en/tutorial/section1.txt:37
# 446b31d5df2945a9bc613e03fbd858c0
msgid "And we can use layers from other map servers on the Internet (for example WMS servers)..."
msgstr ""

#: ../../../en/tutorial/section1.txt:40
# 3f4c6ca30f9a4e899871916806bcb91d
msgid ":ref:`Example 1.7 - Adding a WMS layer <example1-7>`"
msgstr ""

#: ../../../en/tutorial/section1.txt:42
# 7f6d41a4bed740e3a2860220d338baa4
msgid "MapServer can output to various formats such as PDF and GeoTIFF."
msgstr ""

#: ../../../en/tutorial/section1.txt:44
# 64d553d113224e419f759d0ab5ceb9ab
msgid ":ref:`Example 1.8 - A different output format <example1-8>`"
msgstr ""

#: ../../../en/tutorial/section1.txt:46
# f5d8c8648781416f9b50e225accd4593
msgid "MapServer not only generates static maps, it can also create interactive maps..."
msgstr ""

#: ../../../en/tutorial/section1.txt:49
# 26496ad5622348ac8831d7457fbf176b
msgid "`Example 1.9 - The difference between map mode and browse mode <http://demo.mapserver.org/cgi-bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example1-9.map&layer=states&layer=modis>`_"
msgstr ""

#: ../../../en/tutorial/section1.txt:53
# 3e23be50889c4130be0beec2ae9947a0
msgid ":ref:`Back to Tutorial home <tutorial>` | :ref:`Proceed to Section 2 <tutorial_section2>`"
msgstr ""

#: ../../../en/tutorial/section2.txt:4
# a2e9d173fe3b43c7a70bedc36b04ec77
msgid "Section 2: CGI variables and the User Interface"
msgstr ""

#: ../../../en/tutorial/section2.txt:6
# 97ead11eba3a48c5b0663679fdefe157
msgid "So far we have only looked at the mapfile when creating maps. In creating web mapping applications, it is usually our intention to make maps that can be changed by the user (of the application) interactively. That is, a user should be able to change the content of (or the information in) the map. To accomplish this interactivity, we use the MapServer HTML templates."
msgstr ""

#: ../../../en/tutorial/section2.txt:14
# 5398466913cd43edafcbd8f448651c13
msgid "HTML Templates"
msgstr ""

#: ../../../en/tutorial/section2.txt:16
# 91f1b8afb9934c16acd60abca64c06af
msgid "A MapServer HTML template is essentially an HTML file with a few MapServer specific tags.  These tags are the MapServer CGI variables and are enclosed in square brackets \"[]\".  When the MapServer CGI program processes an application, it first parses the query string and the mapfile, and produces the necessary output. Some of this output will need to be written to the HTML template file which you would have to also specify in the mapfile using the web template keyword (or in a separate HTML initialization file). The CGI program will replace all the variables in the HTML template with the proper value before sending it back to the web browser. If you are to directly view an HTML template in a web browser, there won't be any maps rendered and you will instead get blank images and other junk."
msgstr ""

#: ../../../en/tutorial/section2.txt:30
# 45bb51374b9849139338639abed8abc9
msgid "Variables"
msgstr ""

#: ../../../en/tutorial/section2.txt:32
# 6a19512659ff4f62bd7fb5c2f16f787d
msgid "MapServer provides several variables for web mapping: the \"img\" variable which you've seen in Example 1.9 is but one example. There area few core CGI variables originally designed as part of the mapping interface but practically all the mapfile parameters can be defined as variables. The definitive reference to the MapServer  CGI variables can be found :ref:`here <cgi>`."
msgstr ""

#: ../../../en/tutorial/section2.txt:39
# 267b0b5f78574b06ae4dfd40f1a247dc
msgid "We can also define our own variables, which MapServer will pass along to our application.  For example, we can create a variable called \"root\" to represent the root directory of this tutorial, the value for \"root\" will then be \"/tutorial\". When the MapServer CGI program processes our HTML template, it will replace every instance of he \"[root]\" tag with \"/tutorial\". You will see this in action for each of the following examples."
msgstr ""

#: ../../../en/tutorial/section2.txt:48
# d2c6495482fd47f1a16cf3466ede9a8f
msgid "Examples"
msgstr ""

#: ../../../en/tutorial/section2.txt:50
# 749db7bf0df347bc8659776eb404fbaf
msgid "So, let's build an interactive interface for our application..."
msgstr ""

#: ../../../en/tutorial/section2.txt:52
# d5d8e30f47304f34b86c2515be22921f
msgid "Users of a web mapping application should be able to pan and zoom on the map: `Example 2.1 - Pan and Zoom Controls <http://demo.mapserver.org/cgi-bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program=/cgi-bin/mapserv&map_web=template+example2-1.html>`_"
msgstr ""

#: ../../../en/tutorial/section2.txt:55
# 49ccda9659c048c98f38b122bd8ff475
msgid "They also should be able to turn on and off layers on a map: `Example 2.2 - Layer Control <http://demo.mapserver.org/cgi-bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program=/cgi-bin/mapserv&map_web=template+example2-2.html>`_"
msgstr ""

#: ../../../en/tutorial/section2.txt:58
# 294cda6da82440c6a0efaab040821933
msgid "A map should always include a scalebar. `Example 2.3 - Adding a Scalebar <http://demo.mapserver.org/cgi-bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program=/cgi-bin/mapserv&map_web=template+example2-3.html>`_"
msgstr ""

#: ../../../en/tutorial/section2.txt:61
# 071652684cc24d2ca33b42e07698e220
msgid "If users are to navigate through the map, a reference map should be provided: `Example 2.4 - Adding a Reference Map <http://demo.mapserver.org/cgi-bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program=/cgi-bin/mapserv&map_web=template+example2-4.html>`_"
msgstr ""

#: ../../../en/tutorial/section2.txt:64
# fb34952ebb0b4a6d80e06facfd298b2b
msgid "The map should include a legend. `Example 2.5- Adding a Legend <http://demo.mapserver.org/cgi-bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program=/cgi-bin/mapserv&map_web=template+example2-5.html>`_"
msgstr ""

#: ../../../en/tutorial/section2.txt:69
# e72b86abecad4274a9c2d008c6a05632
msgid ":ref:`Back to Section 1 index <tutorial_section1>` | :ref:`Proceed to Section 3 <tutorial_section3>`"
msgstr ""

#: ../../../en/tutorial/section3.txt:4
# 391cc017716e4d988aeda13f5a7bf144
msgid "Section 3: Query and more about HTML Templates"
msgstr ""

#: ../../../en/tutorial/section3.txt:6
# 58c3d5e4d2dc497db39522684b83e007
msgid "To learn more about query and HTML templates with MapServer, see examples 3.1 to 3.4 in the `Tutorial Viewer <http://demo.mapserver.org/tutorial/section3.html>`_."
msgstr ""

#: ../../../en/tutorial/section3.txt:13
# 002a9aed142a47429996a325a7998545
msgid ":ref:`Back to Section 2 index <tutorial_section2>` | :ref:`Proceed to Section 4 <tutorial_section4>`"
msgstr ""

#: ../../../en/tutorial/section4.txt:4
# 03f1b7e1b21843f88bcc05c65b3e4b44
msgid "Section 4: Advanced User Interfaces"
msgstr ""

#: ../../../en/tutorial/section4.txt:6
# 4344d04f933d4ba99c314bc69e83f152
msgid "To learn more about advanced navigation such as pan and rubber-band zoom with Javascript and MapServer CGI, see examples 4.1 to 4.4 in the `Tutorial Viewer <http://demo.mapserver.org/tutorial/section4.html>`_."
msgstr ""

#: ../../../en/tutorial/section4.txt:13
# 22f3995b196741cd9fe3f117fd89a810
msgid ":ref:`Back to Section 3 index <tutorial_section3>` | :ref:`Tutorial home <tutorial>`"
msgstr ""

