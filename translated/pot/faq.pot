# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Regents of the University of Minnesota
# This file is distributed under the same license as the MapServer package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MapServer 6.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-22 13:22+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../en/faq.txt:5
# cefa85659f80488e8a480c8587edfc4a
msgid "FAQ"
msgstr ""

#: ../../../en/faq.txt:8
# a46f76d247704958a45f6b32998c5f08
msgid "Where is the MapServer log file?"
msgstr ""

#: ../../../en/faq.txt:10
# 080d7957bd8f455e9c0b49272d86c1a2
msgid "See :ref:`rfc28`"
msgstr ""

#: ../../../en/faq.txt:13
# 6c1bfe9e7f1a4c4b9a12a3defe297bcb
msgid "What books are available about MapServer?"
msgstr ""

#: ../../../en/faq.txt:15
# b4117401db8a47b494062849cb85f52a
msgid "`\"Mapping Hacks\" <http://www.oreilly.com/catalog/mappinghks/>`__ by Schuyler Erle, Rich Gibson, and Jo Walsh is available from O'Reilly."
msgstr ""

#: ../../../en/faq.txt:18
# f1f154191c29455d8660bec8095af91a
msgid "`\"Web Mapping Illustrated\" <http://oreilly.com/catalog/webmapping>`__ by Tyler Mitchell is available from O'Reilly. Introduces MapServer and many other related technologies including, GDAL/OGR, MapScript, PostGIS, map projections, etc."
msgstr ""

#: ../../../en/faq.txt:23
# e8fc7c0e27f148429f7dbcdc67304501
msgid "`\"MapServer: Open Source GIS Development\" <http://www.apress.com/book/bookDisplay.html?bID=443>`__ by Bill Kropla."
msgstr ""

#: ../../../en/faq.txt:28
# 1f17b31229524462986615cad997df29
msgid "How do I compile MapServer for Windows?"
msgstr ""

#: ../../../en/faq.txt:30
# 6737763d304e4b44ac6e560b4f806562
msgid "See :ref:`win32`. Also, you can use the development libraries in :ref:`OSGeo4W <windows>` as a starting point instead of building all of the dependent libraries yourself."
msgstr ""

#: ../../../en/faq.txt:35
# f4933f68de9c48e7869c7a558aca4c46
msgid "What do MapServer version numbers mean?"
msgstr ""

#: ../../../en/faq.txt:37
# a24c22f9c3564cac845833d40133232d
msgid "MapServer's version numbering scheme is very similar to Linux's. For example, a MapServer version number of 4.2.5 can be decoded as such:"
msgstr ""

#: ../../../en/faq.txt:40
# 7fd3a5b198ee40259689352fa05b1fa0
msgid "4: Major version number. MapServer releases a major version every two to three years."
msgstr ""

#: ../../../en/faq.txt:42
# 23e769a84c8b44fbad9b97fcb0803ed4
msgid "2: Minor version number. Increments in minor version number almost always relate to additions in functionality."
msgstr ""

#: ../../../en/faq.txt:44
# 761404704cf8432a81a9058564c556ed
msgid "5: Revision number. Revisions are bug fixes only. No new functionality is provided in revisions."
msgstr ""

#: ../../../en/faq.txt:47
# 0c93ccbf686f4fc183119a7bff9f051c
msgid "From a developer's standpoint, MapServer version numbering scheme is also like Linux. Even minor version numbers (0..2..4..6) relate to *release* versions, and odd minor versions (1..3..5..7) correspond to developmental versions."
msgstr ""

#: ../../../en/faq.txt:52
# d8a9fc15b64d417ea4ff1b5f0ed59dac
msgid "Is MapServer Thread-safe?"
msgstr ""

#: ../../../en/faq.txt:54
# c9cf0050869d48a18957af2cd29035c5
msgid "**Q**: Is MapServer thread-safe?"
msgstr ""

#: ../../../en/faq.txt:56
# 755a81d4af774e86b562e8cac7e94ff7
msgid "**A**: Generally, no (but see the next question). Many components of MapServer use static or global data that could potentially be modified by another thread. Under heavy load these unlikely events become inevitable, and could result in sporadic errors."
msgstr ""

#: ../../../en/faq.txt:61
# eb05bdc3c1cd4be69b50546c49ef60d2
msgid "**Q**: Is it possible to safely use any of MapServer in a multi-threaded application?"
msgstr ""

#: ../../../en/faq.txt:64
# 038407927e9040848a558fca1d5e8c17
msgid "**A**: Some of it, yes, with care. Or with Python :) Programmers must either avoid using the unsafe components of MapServer or carefully place locks around them. Python's global interpreter lock immunizes against MapServer threading problems; since no mapscript code ever releases the GIL all mapscript functions or methods are effectively atomic. Users of mapscript and Java, .NET, mod_perl, or mod_php do not have this extra layer of protection."
msgstr ""

#: ../../../en/faq.txt:71
# 1b974391cd1e42c78c84b06897ab138f
msgid "**A**: Which components are to be avoided?"
msgstr ""

#: ../../../en/faq.txt:73
# 5b789bd2d9e34b35ae8db064ed213b60
msgid "**Q**: Below are lists of unsafe and unprotected components and unsafe but locked components."
msgstr ""

#: ../../../en/faq.txt:76
# 8f16495d3cde4af8b426c557231514b1
msgid "Unsafe:"
msgstr ""

#: ../../../en/faq.txt:78
# 5e50251a1fd145ae9ac4880aefafd06f
msgid "OGR layers: use unsafe CPL services"
msgstr ""

#: ../../../en/faq.txt:79
# 948c872766e346bbbb0978d14da0442c
msgid "Cartoline rendering: static data"
msgstr ""

#: ../../../en/faq.txt:80
# 29b84ea3564242f4b27dc6d0365d1e82
msgid "Imagemap output: static data"
msgstr ""

#: ../../../en/faq.txt:81
# 17213b1c78474462ad827e9af471620b
msgid "SWF output: static data and use of unsafe msGetBasename()"
msgstr ""

#: ../../../en/faq.txt:82
# 89ef060822e445feb93f7b8831910d99
msgid "SVG output: static data"
msgstr ""

#: ../../../en/faq.txt:83
# 0cd6d65d3a4641028a21675c7c0dfaf0
msgid "WMS/WFS server: static data used for state of dispatcher"
msgstr ""

#: ../../../en/faq.txt:84
# 63e22517773b4416aa2bb7970507b65e
msgid "Forcing a temporary file base (an obscure feature): static data"
msgstr ""

#: ../../../en/faq.txt:85
# 02f7fcb0d2b9434aa036d4bf89c66383
msgid "MyGIS: some static data"
msgstr ""

#: ../../../en/faq.txt:87
# 3aeea34c2a584424be62e5b8ce484768
msgid "Unsafe, but locked:"
msgstr ""

#: ../../../en/faq.txt:89
# ef23968f64074b8cbcaad4d8dfee638f
msgid "Map config file loading: global parser"
msgstr ""

#: ../../../en/faq.txt:90
# d48c9dbeb7074d10a47bbd64120809eb
msgid "Setting class and and layer filter expressions (global parser)"
msgstr ""

#: ../../../en/faq.txt:91
# fefae2540e944fbcb1b9aeda4f942ae2
msgid "Class expression evaluation (global parser)"
msgstr ""

#: ../../../en/faq.txt:92
# f70ff541f52642c28c23b516e804e95a
msgid "Setting map and layer projections (PROJ)"
msgstr ""

#: ../../../en/faq.txt:93
# 128aea50d35141a5a8c060510e986192
msgid "Raster layer rendering and querying (GDAL)"
msgstr ""

#: ../../../en/faq.txt:94
# 0241308c34c347e1ac5fd6d132a0a80a
msgid "Database Connections (mappool.c)"
msgstr ""

#: ../../../en/faq.txt:95
# 6b4db90f9e2c4fc992c4409f1b3c9b6b
msgid "PostGIS support"
msgstr ""

#: ../../../en/faq.txt:96
# e857555d3c204aaf95a73abe223e8896
msgid "Oracle Spatial (use a single environment handle for connection)"
msgstr ""

#: ../../../en/faq.txt:97
# db44fc29904a47ad91d4c65363cc7072
msgid "SDE support (global layer cache)"
msgstr ""

#: ../../../en/faq.txt:98
# ef4cac42094047e3b39bb957d15feb2f
msgid "Error handling (static repository of the error objects)"
msgstr ""

#: ../../../en/faq.txt:99
# 6dd24a50b3814dd3868d8cfe35e88d7b
msgid "WMS/WFS client connections: potential race condition in Curl initialization"
msgstr ""

#: ../../../en/faq.txt:100
# 930c1423e608420ca64145a06b6efb39
msgid "Plugin layers (static repository of the loaded dll-s)"
msgstr ""

#: ../../../en/faq.txt:102
# 5d14bc1d570148968858e82985243aa3
msgid "Rather coarse locks are in place for the above. Only a single thread can use the global parser at a time, and only one thread can access GDAL raster data at a time. Performance is exchanged for safety."
msgstr ""

#: ../../../en/faq.txt:107
# e285db45c68947e5a8fa18bf320c1666
msgid "What does STATUS mean in a LAYER?"
msgstr ""

#: ../../../en/faq.txt:109
# 519a64046bbd4252b51d8816530e8634
msgid "STATUS ON and STATUS OFF set the default status of the layer. If a map is requested, those layers will be ON/OFF unless otherwise specified via the layers parameter. This is particularly the case when using MapScript and MapServer's built-in template mechanism, but is also useful as a hint when writing your own apps and setting up the initial map view."
msgstr ""

#: ../../../en/faq.txt:115
# b84843b4d79c4085965ceef75985f118
msgid "STATUS DEFAULT means that the layer is always on, even if not specified in the layers parameter. A layer's status can be changed from DEFAULT to OFF in MapScript, but other than that, it's always on."
msgstr ""

#: ../../../en/faq.txt:119
# 3d4a39aea75c4bbab24ad513afc278a1
msgid ":ref:`cgi` turns everything off that is not \"STATUS DEFAULT\" off so all layers start from the same state (e.g. off) and must be explicitly requested to be drawn or query. That common state made (at least in my mind) implementations easier. I mean, if a layer \"lakes\" started ON the doing layer=lakes would turn it OFF. So I wanted to remove the ambiguity of a starting state."
msgstr ""

#: ../../../en/faq.txt:126
# 2fb101fa7824415d89650994967be49d
msgid "How can I make my maps run faster?"
msgstr ""

#: ../../../en/faq.txt:128
# d198288da4714b5ab2f9aca93ffbc0af
msgid "There are a lot of different approaches to improving the performance of your maps, aside from the obvious and expensive step of buying faster hardware. Here are links to some individual howtos for various optimizations."
msgstr ""

#: ../../../en/faq.txt:132
# 95800b35b18a48fa816b4c18e1b8b81d
msgid ":ref:`Tuning your mapfile for performance <mapfile_tuning>`"
msgstr ""

#: ../../../en/faq.txt:133
# 64b7c7e4586b45cb8ab8d2c5b2c22c40
msgid ":ref:`Optimizing the performance of vector data sources <vector_optimization>`"
msgstr ""

#: ../../../en/faq.txt:134
# d0175e0487f14cd88322ead93422ad8c
msgid ":ref:`Optimizing the performance of raster data sources <raster_optimization>`"
msgstr ""

#: ../../../en/faq.txt:135
# af13d9f1346344fdb707811398f8ff9e
msgid ":ref:`Tileindexes for mosaicing and performance <tileindex>`"
msgstr ""

#: ../../../en/faq.txt:137
# 44685797922b4d7d8745f704aeabc9d0
msgid "Some general tips for all cases:"
msgstr ""

#: ../../../en/faq.txt:139
# 3ee5114323924e05bf84783a00b8d85e
msgid "First and foremost is hardware. An extra GB of RAM will give your map performance increases beyond anything you're likely to achieve by tweaking your data. With the price of RAM these days, it's cheap and easy to speed up every map with one inexpensive upgrade."
msgstr ""

#: ../../../en/faq.txt:144
# cf848249f23e494c87764159ec2b9e9c
msgid "Use the scientific method. Change one thing at a time, and see what effect it had. Try disabling all layers and enabling them one at a time until you discover which layer is being problematic."
msgstr ""

#: ../../../en/faq.txt:148
# d1b306ffa95344d48f05c295d34604a5
msgid "Use :ref:`shp2img` program to time your results. This runs from the command line and draws an image of your entire map. Since it's run from the command line, it is immune to net lag and will give more consistent measurements that your web browser."
msgstr ""

#: ../../../en/faq.txt:154
# b9fb6b49df314b9ba3a16551691bc6df
msgid "What does Polyline mean in MapServer?"
msgstr ""

#: ../../../en/faq.txt:156
# 270a57f529714cd491d7aed6622697b0
msgid "There's confusion over what POLYLINE means in MapServer and via ESRI. In MapServer POLYLINE simply means a linear representation of POLYGON data. With ESRI polyline means multi-line. Old versions of the Shapefile techical description don't even refer to polyline shapefiles, just line. So, ESRI polyline shapefiles are just linework and can only be drawn and labeled as LINE layers. Those shapefiles don't have feature closure enforced as polygon shapefiles do which is why the distinction is so important. I suppose there is a better choice than POLYLINE but I don't know what it would be."
msgstr ""

#: ../../../en/faq.txt:166
# 4a18fe6e69ed40d4a829f7048835e2bc
msgid "The only difference between POLYLINE and LINE layers is how they are labeled."
msgstr ""

#: ../../../en/faq.txt:170
# d812ed68dad44d4a9a4d70f29749e5c1
msgid "What is MapScript?"
msgstr ""

#: ../../../en/faq.txt:172
# 5657db8b5999436d84fbc5aace596b53
msgid "MapScript is the scripting interface to MapServer, usually generated by :term:`SWIG` (except in the case of :ref:`php_mapscript`). MapScript allows you to program with MapServer's objects directly instead of interacting with MapServer through its :ref:`cgi` and :ref:`mapfile`."
msgstr ""

#: ../../../en/faq.txt:180
# fbde152093044f2c90d15b72cd25a597
msgid "Does MapServer support reverse geocoding?"
msgstr ""

#: ../../../en/faq.txt:182
#: ../../../en/faq.txt:194
# 50e999925510482fa8f29849423d9e43
# fa3769782876484ba328c04ada9db691
msgid "No."
msgstr ""

#: ../../../en/faq.txt:184
# 5500f44c40804fd1a504503ad345d592
msgid "Reverse geocoding is an activity where you take a list of street features that you already have and generate postal addresses from them. This kind of spatial functionality is provided by proprietary packages such as the ESRI suite of tools, as well as services such as those provided by GDT. MapServer is for *map rendering*, and it does not provide for advanced spatial operations such as this."
msgstr ""

#: ../../../en/faq.txt:192
# e096c87c2b17459694a35b294ad48703
msgid "Does MapServer support geocoding?"
msgstr ""

#: ../../../en/faq.txt:196
# 742ed4abb04b49d6827f77f950fd6a5f
msgid "Geocoding is an activity where you take a list of addresses and generate lat/lon points for them. This kind of spatial functionality is provided by proprietary packages such as the ESRI suite of tools, as well as services such as those provided by GDT. MapServer is for *map rendering*, and it does not provide for advanced spatial operations such as this."
msgstr ""

#: ../../../en/faq.txt:202
# cd6d92757ab54fd89fb2372bac90ae74
msgid "If you are using MapScript, there is a free geocder available through XMLRPC and SOAP at http://geocoder.us . You could hook you application up to use this service to provide lat/lon pairs for addresses, and then use MapServer to display those points."
msgstr ""

#: ../../../en/faq.txt:208
# ce5d6f6962c54b27af0e3673ecb12370
msgid "How do I set line width in my maps?"
msgstr ""

#: ../../../en/faq.txt:210
# 18ccd92f79bd4ad692c5de7a871cd39a
msgid "In the current MapServer  version, line width is set using the STYLE parameter WIDTH.  For a LINE layer, lines can be made red and 3 pixels wide by using the following style in a CLASS."
msgstr ""

#: ../../../en/faq.txt:222
# bb9c716650644737a0b78af337f5da90
msgid "In earlier versions of MapServer , you could set the symbol for the LAYER to 'circle' and then you can set the symbol SIZE to be the width you want. A 'circle' symbol can be defined as"
msgstr ""

#: ../../../en/faq.txt:236
# 0c0899ba1de24ba28e0fd1eb3a13160a
msgid "Why do my JPEG input images look crappy via MapServer?"
msgstr ""

#: ../../../en/faq.txt:238
# ba4610f9cb044c11aa73eec8efcb6308
msgid "You must be using an old version of MapServer  (where GD was the default library for rendering)."
msgstr ""

#: ../../../en/faq.txt:241
# 8d8a6af00f524c37abe3538479de9698
msgid "Newer versions of MapServer  use AGG for rendering, and the default output formats is 24 bit colour, so there should not be a problem."
msgstr ""

#: ../../../en/faq.txt:244
# 7d495a904e88463191456d664756839f
msgid "The default output format for MapServer with GD was 8bit pseudo-colored PNG or GIF.  Inherently there will be some color degradation in converting a 24bit image (16 million colors) image into 8bit (256 colors)."
msgstr ""

#: ../../../en/faq.txt:249
# 9255c22c0e054bc7a9afe78b4de50749
msgid "With GD output, MapServer used quite a simple method to do the transformation, converting pixels to the nearest color in a 175 color colorcube. This would usually result in blotchy color in a fairly smoothly varying image."
msgstr ""

#: ../../../en/faq.txt:254
# 00b473012ffc48f7b780bd3a23cc4144
msgid "For GD, solutions used to be:"
msgstr ""

#: ../../../en/faq.txt:256
# 196cf24314324b4ba8d2357cf2960923
msgid "Select 24bit output.  This might be as easy as \"IMAGETYPE JPEG\" in your MAP section."
msgstr ""

#: ../../../en/faq.txt:258
# 8a8c134ce27e40d6a32aca92efaa8461
msgid "Enable dithering (PROCESSING \"DITHER=YES\") to produce a better color appearance."
msgstr ""

#: ../../../en/faq.txt:260
# f5883859611d40eaa8ae545f9408a396
msgid "Preprocess your image to 8bit before using it in MapServer with an external application like the GDAL rgb2pct.py script."
msgstr ""

#: ../../../en/faq.txt:263
# 36a5190d14044ff2b44c60a30eb8f801
msgid "For more information review the :ref:`raster`."
msgstr ""

#: ../../../en/faq.txt:266
# 792ef069868b4aadbb565e0affd9c601
msgid "Which image format should I use?"
msgstr ""

#: ../../../en/faq.txt:268
# 15e803d6eb2d4642bd747d7fdde28c47
msgid "Although MapScript can generate the map in any desired image format it is sufficient to only consider the three most prevalent ones: JPEG, PNG, and GIF."
msgstr ""

#: ../../../en/faq.txt:271
# 1e09e3472c4c45b69d4af72c8380de59
msgid "JPEG is an image format that uses a lossy compression algorithm to reduce an image's file size and is mostly used when loss of detail through compression is either not noticeable or negligible, as in most photos. Maps on the other hand mainly consist of fine lines and areas solidly filled in one colour, which is something JPEG is not known for displaying very well. In addition, maps, unless they include some aerial or satellite imagery, generally only use very few different colours. JPEG with its 24bit colour depth capable of displaying around 16.7 million colours is simple not suitable for this purpose. GIF and PNG however use an indexed colour palette which can be optimized for any number (up to 256) of colours which makes them the perfect solution for icons, logos, charts or maps. The following comparison (generated file sizes only; not file generation duration) will therefore only include these two file formats:"
msgstr ""

#: ../../../en/faq.txt:288
# 43b73269018641afa4b7627a97eeeae5
msgid "GIF"
msgstr ""

#: ../../../en/faq.txt:288
# d8d778c4ba5843f4aa15fbe756a07c5e
msgid "PNG"
msgstr ""

#: ../../../en/faq.txt:288
# 15ab7ccc65774a4ea973ca0796eed656
msgid "PNG24"
msgstr ""

#: ../../../en/faq.txt:290
# 7717cf7c9c0d4d7b89809a1d15717cb7
msgid "Vector Data only"
msgstr ""

#: ../../../en/faq.txt:290
# e020776d45574278a48f0fbad3c19c3d
msgid "59kb"
msgstr ""

#: ../../../en/faq.txt:290
# 02393d36441b47fb9e9668e846ea09bc
msgid "26kb"
msgstr ""

#: ../../../en/faq.txt:290
# e45001931d554f178beb1d42f7a1f11e
msgid "69kb"
msgstr ""

#: ../../../en/faq.txt:292
# 7ca8874462e64a7b93402684b9115495
msgid "Vector Data & Satellite Image coloured"
msgstr ""

#: ../../../en/faq.txt:292
# eb2d7bc8c90547b2bf38e3962d70a973
msgid "156kb"
msgstr ""

#: ../../../en/faq.txt:292
# e9aac2453c104f81ac769635a8073c3f
msgid "182kb"
msgstr ""

#: ../../../en/faq.txt:292
# b5257827f0094585964e304183efa836
msgid "573kb"
msgstr ""

#: ../../../en/faq.txt:294
# 122e3f61bde545ff8e7f473e8c7c764b
msgid "Vector Data & Satellite Image monochrome"
msgstr ""

#: ../../../en/faq.txt:294
# 6033ed3862d244bda900544fa86b8892
msgid "142kb"
msgstr ""

#: ../../../en/faq.txt:294
# a83dc2245d804e199c599230fa12f3af
msgid "134kb"
msgstr ""

#: ../../../en/faq.txt:294
# 1d62a787163f43b0a79fe4d7cea71952
msgid "492kb"
msgstr ""

#: ../../../en/faq.txt:297
# 95b3a15e21154e9ea0651d54127caf3e
msgid "(results based on an average 630x396 map with various colours, symbols, labels/annotations etc.)"
msgstr ""

#: ../../../en/faq.txt:300
# 8836eed561df47379f189c45b6e8f553
msgid "Although GIF shows a quantitative as well as qualitative advantage over PNG when generating maps that contain full coloured remote sensing imagery, PNG is the clear quantitative winner in terms of generated file sizes for maps with or without additional monochrome imagery and should therefore be the preferred image format. If the mapping application however can also display fullcolour aerial or satellite imagery, the output file format can be changed dynamically to either GIF or even PNG24 to achieve the highest possible image quality."
msgstr ""

#: ../../../en/faq.txt:310
# c26baabc06b548a2bcbe6040fb561100
msgid "Why doesn't PIL (Python Imaging Library) open my PNGs?"
msgstr ""

#: ../../../en/faq.txt:312
# 79dc73e31d854da9a0e91262e4a62985
msgid "`PIL <http://www.pythonware.com/products/pil/>`__ does not support interlaced PNGs at this time (no timetable on when it actually will either). To be able to read PNGs in PIL, they must not be interlaced. Modify your OUTPUTFORMAT with a FORMATOPTION like so:"
msgstr ""

#: ../../../en/faq.txt:329
# 37f51ce8545c4cd7a758c18e6bba416e
msgid "Why do my symbols look poor in JPEG output?"
msgstr ""

#: ../../../en/faq.txt:331
# bbd535bc1ea74dfaa0a02726096e0d3e
msgid "When I render my symbols to an 8bit output (PNG, GIF) they look fine, but in 24bit jpeg output they look very blocky and gross."
msgstr ""

#: ../../../en/faq.txt:334
# 308e3a30253642f88eb850bed3f6c373
msgid "You must be using an old version of MapServer .  This should not be problem with newer versions.  The following explains the old (GD) behaviour."
msgstr ""

#: ../../../en/faq.txt:338
# cd0f3598b8e34c71aa089a76aa5b45f7
msgid "In order to render some classes of symbols properly in 24bit output, such as symbols from true type fonts, it is necessary to force rendering to occur in RGBA. This can be accomplished by including the \"TRANSPARENCY ALPHA\" line in the layer definition. Don't use this unnecessarily as there is a performance penalty."
msgstr ""

#: ../../../en/faq.txt:344
# 49a736005c26476a842eb074ad8f8cb6
msgid "This problem also affects PNG24 output or any RGB output format. 8bit (PC256) or RGBA output types are already ok."
msgstr ""

#: ../../../en/faq.txt:348
# b8b617d9f6e64f28832399bb9476c325
msgid "How do I add a copyright notice on the corner of my map?"
msgstr ""

#: ../../../en/faq.txt:350
# a66261f95ecb458d92992dbddd9df8ce
msgid "You can use an inline feature, with the :ref:`FEATURE` object, to make a point on your map. Use the TEXT parameter of the FEATURE object for the actual text of the notice, and a :ref:`LABEL` object to style the notice."
msgstr ""

#: ../../../en/faq.txt:356
# 8537dd2d98844ef19f734e3b7ec0bd6d
msgid "Example Layer"
msgstr ""

#: ../../../en/faq.txt:391
# 86cdf6f0c87a44c2b05279ffff2835d1
msgid "Result"
msgstr ""

#: ../../../en/faq.txt:397
# 9ae28fc891494fd1bbd73af61638cf8d
msgid "How do I have a polygon that has both a fill and an outline with a width?"
msgstr ""

#: ../../../en/faq.txt:399
# 6781083c75bb4bbbbf41e740d87dbad7
msgid "How do I have a polygon that has both a fill and an outline with a width? Whenever I put both a color (fill) and an outlinecolor with a width on a polygon within a single STYLE, the outline width isn't respected."
msgstr ""

#: ../../../en/faq.txt:403
# bd4dfe8039e64f6e81cd4bffd5c58584
msgid "For historical reasons, width has two meanings within the context of filling polygons and stroke widths for the outline. If a polygon is filled, then the width defines the width of the symbol *inside* the filled polygon. In this event, the outline width is disregarded, and it is always set to 1. To acheive the effect of *both* a fill and an outline width, you need to use two styles in your class."
msgstr ""

#: ../../../en/faq.txt:421
# b51023f771a04291b2e7eb56408bc89d
msgid "How can I create simple antialiased line features?"
msgstr ""

#: ../../../en/faq.txt:423
# 1bbad4828910409c994a64f2b617349e
msgid "With AGG (used in recent MapServer  version), antialiased lines is the default, and can't be turned off."
msgstr ""

#: ../../../en/faq.txt:426
# f27feb4a4fb941e7b1fc9001d6c0b896
msgid "With GD, the easiest way to produce antialiased lines is to:"
msgstr ""

#: ../../../en/faq.txt:428
# 1039a3ec8d1b4859b48460b0dd9bf377
msgid "use a 24-bit output image type (IMAGEMODE RGB (or RGBA))"
msgstr ""

#: ../../../en/faq.txt:429
# b95ea6d60e63486f88e5044ef2db7d48
msgid "set TRANSPARENCY ALPHA in the layer using antialiased lines"
msgstr ""

#: ../../../en/faq.txt:430
# e3e62f9972a5431d9b8583ad32181bb5
msgid "set ANTIALIAS TRUE in the STYLE element of the CLASS with antialiased lines"
msgstr ""

#: ../../../en/faq.txt:432
# eff53f375aaa4f7bbcb8d7a1777b5c8c
msgid "The following mapfile snippets enable antialiased county borders for GD:"
msgstr ""

#: ../../../en/faq.txt:466
# 13403fb508564969bad56c07b9159d63
msgid "The bdry_counln2 shapefile referenced in the counties layer is a line shapefile. A polygon shapefile could be substituted with roughly the same results, though owing to the nature of shapefiles each border would be rendered twice and the resulting output line would likely appear to be slightly thicker. Alternatively, one could use a polygon shapefile, set TYPE to POLYGON, and use OUTLINECOLOR in place of COLOR in the STYLE element."
msgstr ""

#: ../../../en/faq.txt:475
# eb1ea0e11aad4ddda98314b1a7662703
msgid "You can tweak the combination of STYLE->WIDTH and SYMBOLSCALE to modify line widths in your output images."
msgstr ""

#: ../../../en/faq.txt:479
# ecd830a512944de1961a0936c9b2bcdf
msgid ":ref:`Cartoline <sym_construction>` symbols can be used to achieve fancier effects."
msgstr ""

#: ../../../en/faq.txt:483
# 7d1c2dd0238b425c9a0c4133b7a63a03
msgid "Which OGC Specifications does MapServer support?"
msgstr ""

#: ../../../en/faq.txt:485
# 715a8311aee74496829c95e1b10d59bf
msgid "See: :ref:`ogc_support`."
msgstr ""

#: ../../../en/faq.txt:488
# 9fbf8d4a422d4d0f92be7db3a1533554
msgid "Why does my requested WMS layer not align correctly?"
msgstr ""

#: ../../../en/faq.txt:490
# 804986bc907b436ea7a8ae701d78e529
msgid "Requesting a layer from some ArcIMS WMS connectors results in a map with misalgned data (the aspect ratio of the pixels looks wrong)."
msgstr ""

#: ../../../en/faq.txt:493
# 82c4d767cb15409e9ed2cc37750f74a0
msgid "Some ArcIMS sites are not set up to stretch the returned image to fit the requested envelope by default. This results in a map with data layers that overlay well in the center of the map, but not towards the edges. This can be solved by adding \"*reaspect=false*\" to the request (by tacking it on to the connection string)."
msgstr ""

#: ../../../en/faq.txt:499
# c214a450123e449ba63cc43e345c32fc
msgid "For example, if your mapfile is in a projection other than EPSG:4326, the following layer will not render correctly:"
msgstr ""

#: ../../../en/faq.txt:523
# 8ad71a7e417045e8b68cb023181071c0
msgid "Adding \"reaspect=false\" to the connection string solves the problem:"
msgstr ""

#: ../../../en/faq.txt:547
# a92d707556544f40a33042bc5aa11a63
msgid "When I do a GetCapabilities, why does my browser want to download mapserv.exe/mapserv?"
msgstr ""

#: ../../../en/faq.txt:549
# 62a28eb03dd64d74a0a599e2d1be24c4
msgid "A beginner question here... I'm new to MS and to Apache. I've got MS4W up and running with the Itasca demo. Now I want to enable it as a WMS server. mapserv -v at the command line tells me it supports WMS_SERVER. When I point my browser to it, my browser just wants to download mapserv.exe!"
msgstr ""

#: ../../../en/faq.txt:554
# 3113d50c3e4942549a0bf61abbbbaf36
msgid "What am I missing?"
msgstr ""

#: ../../../en/faq.txt:556
# a55c75dd7fa44ec0b851e39372e5f0a3
msgid "Here is the URL I'm using to issue a GetCapabilities WMS request: http://localhost/cgi-bin/mapserv.exe?map=../htdocs/itasca/demo.map&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities"
msgstr ""

#: ../../../en/faq.txt:559
# 187fe88794634976824825953e10f3bc
msgid "The OGC:WMS 1.1.0 and 1.1.1 specifications (which are both supported by MapServer) state that, for GetCapabilities responses, the OGC:WMS server returns a specific MIME type (i.e. application/vnd.ogc.xml (see subclause 6.5.3 of `OGC:WMS 1.1.1 <http://portal.opengeospatial.org/files/?artifact_id=1081&version=1&format=pdf>`__."
msgstr ""

#: ../../../en/faq.txt:565
# 909dde1ddc6a46a9889a44e166b0c2e8
msgid "A MIME type is passed from the web server to the client (in your case, a web browser), from which a client can decide how to process it."
msgstr ""

#: ../../../en/faq.txt:568
# e0e99633c82548069cc6498d5fa4a10e
msgid "Example 1: if using a web browser, if a web server returns an HTTP Header of \"Content-type:image/png\", then the web browser will know that this is a PNG image and display it accordingly."
msgstr ""

#: ../../../en/faq.txt:572
# 58880483a2cc45d48a92e67f255f09b4
msgid "Example 2: if using a web browser, if a web server returns an HTTP Header of \"Content-type:text/html\", then the web browser will know that this is an HTML page and display it accordingly (i.e. tables, divs, etc.)"
msgstr ""

#: ../../../en/faq.txt:576
# 201381c60fc74b41a7b6bd403d50ff68
msgid "Basically, what is happening is that the OGC:WMS is returning, in the headers of the HTTP response, a MIME type which your web browser does not understand, which usually prompts a dialog box on whether to open or download the content (i.e. Content-type:application/vnd.ogc.wms_xml)."
msgstr ""

#: ../../../en/faq.txt:581
# 3ab4908a31394ddcac82e96798ec8033
msgid "You could configure your web browser to handle the application/vnd.ogc.wms_xml MIME type a certain way (i.e. open in Notepad, etc.)."
msgstr ""

#: ../../../en/faq.txt:585
# 9bd7b65cf01e4c74a38bb2626896b681
msgid "Why do my WMS GetMap requests return exception using MapServer 5.0?"
msgstr ""

#: ../../../en/faq.txt:587
# 6dcd54039ee54bda8da8389733457e06
msgid "Before upgrading to MapServer 5.0, I was able to do quick GetMap tests in the form of: http://wms.example.com/wms?service=WMS&version=1.1.1&request=GetMap&layers=foo"
msgstr ""

#: ../../../en/faq.txt:591
# 1ec50d3c33834bedb85101ee65e16c1e
msgid "Now when I try the same test, MapServer WMS returns an XML document saying something about missing required parameters. What's going on here?"
msgstr ""

#: ../../../en/faq.txt:594
# 688b63954aea452dbe0f4f89f53d660f
msgid "This was a major change for WMS Server support in MapServer 5.0. MapServer WMS Server GetMap requests now require the following additional parameters:"
msgstr ""

#: ../../../en/faq.txt:597
# 031fe47638064a95b243efb2d0b9c967
msgid "srs"
msgstr ""

#: ../../../en/faq.txt:598
# 33e9632828e04ef093d107899203dfe5
msgid "bbox"
msgstr ""

#: ../../../en/faq.txt:599
# b68dcd8baa4a476b82ef8abb361e3571
msgid "width"
msgstr ""

#: ../../../en/faq.txt:600
# c4e7d5d20c554c3593f9ab910aa9415f
msgid "height"
msgstr ""

#: ../../../en/faq.txt:601
# edb2107100db4e0490a4ab005215a835
msgid "format"
msgstr ""

#: ../../../en/faq.txt:602
# 7e27145c0a414ca1a6e8ef662e9e974b
msgid "styles"
msgstr ""

#: ../../../en/faq.txt:605
# 5551811dc5824c7cb6b9f078146308a4
msgid "These parameters were always required in all versions of the WMS specification, but MapServer previously had not required them in a client request (even though most OGC WMS clients would issue them anyway to be consistent with the WMS spec)."
msgstr ""

#: ../../../en/faq.txt:610
# a2033769f2174308a9542f9be59f6fda
msgid "The request below now constitutes a valid GetMap request:"
msgstr ""

#: ../../../en/faq.txt:616
# 2c75382640054ed28dc8e81331e9892e
msgid "Which is consistent with the WMS specification."
msgstr ""

#: ../../../en/faq.txt:618
# 0297b12b91b1499e92d9d73a2719bec2
msgid "More information on these parameters can be found in the :ref:`wms_server` and the `OGC WMS 1.1.1 specification <http://portal.opengeospatial.org/files/?artifact_id=1081&version=1&format=pdf>`__"
msgstr ""

#: ../../../en/faq.txt:622
# e68d2faf0bf045348ae07476f50890bd
msgid "For more detailed information, see `ticket 1088 <http://trac.osgeo.org/mapserver/ticket/1088>`__"
msgstr ""

#: ../../../en/faq.txt:626
# 027d5cfc5038444cb4aa9103616795a1
msgid "STYLES, though a required WMS parameter, is now optional again in MapServer. For more detailed information, see `ticket 2427 <http://trac.osgeo.org/mapserver/ticket/2427#comment:2>`__"
msgstr ""

#: ../../../en/faq.txt:631
# b3e800be167e416cac01822439dc5e0e
msgid "Using MapServer 6.0, why don't my layers show up in GetCapabilities responses or are not found anymore?"
msgstr ""

#: ../../../en/faq.txt:633
# 6952725e698146199e628d7518df0ecc
msgid "MapServer 6.0 introduces the option of hiding layers against OGC Web Service requests.  OGC Web Services can provide powerful access to your geospatial data.  It was decided to disable layer level request access as a default.  See :ref:`rfc67` provides a full explanation of the changes and implications."
msgstr ""

#: ../../../en/faq.txt:638
# c452a993f884480299fc23df37ac00de
msgid "To enable pre-6.0 behaviour, you can add the following to the :ref:`WEB` object's METADATA section in your mapfile:"
msgstr ""

#: ../../../en/faq.txt:645
# 0d2a0b80d0fc4fcc91b6fcad8fce9e90
msgid "This will enable access of all layers to all OGC Web Service requests."
msgstr ""

#: ../../../en/faq.txt:648
# fe4af94ed1b748c39052d3fa8afd8fc7
msgid "Where do I find my :term:`EPSG` code?"
msgstr ""

#: ../../../en/faq.txt:650
# e8769b39d993486396f64cedb0369f5c
msgid "There is a text file \"epsg\" in your PROJ4 installation (e.g. \"/usr/local/share/proj/epsg\") which contain the EPSG information used by PROJ4. In Windows, this is often located in C:\\\\proj\\\\nad or is found with an environment variable called PROJ_LIB."
msgstr ""

#: ../../../en/faq.txt:655
# 43864f7a67b04622a249e3b18677ead8
msgid "http://spatialreference.org allows you to search for EPSG codes."
msgstr ""

#: ../../../en/faq.txt:657
# 1561d7acf46046de996254d8d52b6233
msgid "You can also have a look at: http://ocean.csl.co.uk"
msgstr ""

#: ../../../en/faq.txt:660
# 808c14921e114d9ebf5a07dbcd967057
msgid "More information to EPSG: http://www.epsg.org"
msgstr ""

#: ../../../en/faq.txt:663
# 7a6d306a4a02499393dc5c7b6c427a56
msgid "More information to PROJ4: http://trac.osgeo.org/proj"
msgstr ""

#: ../../../en/faq.txt:667
# 2b6438ea4e84465e97d2634724689e22
msgid "How can I reproject my data using ogr2ogr?"
msgstr ""

#: ../../../en/faq.txt:669
# a190b82c9ef5478d9ee0b07b5a30ba57
msgid "With ogr2ogr of course! ogr2ogr is a powerful utility that will transform the projections of your shapefiles when passed the appropriate parameters. In my case, I was using MapServer to serve data in RI State Plane Feet. In order to do so, the data had to first be converted to meters. Here is the command I used:"
msgstr ""

#: ../../../en/faq.txt:679
# 59292ffe04984d199cc8cfe46a6d75a1
msgid "Since my data already had a projection defined, I did not need to explicitly state a source projection. This command uses the EPSG definition for NAD83 Rhode Island (32130) and performs the feet to meters conversion."
msgstr ""

#: ../../../en/faq.txt:683
# eab9409cb8b6490c993153b510792fad
msgid "Now say my data wasn't already projected? Here's how we deal with that:"
msgstr ""

#: ../../../en/faq.txt:689
# f5a64000cafe4ce2a451258556163eeb
msgid "Let's examine what is going on here:"
msgstr ""

#: ../../../en/faq.txt:691
# 44d2645d97a543bc9dbee02a8abdb233
msgid "The -s_srs parameter explicitly defines a projection for the data. The parameters used here were taken out of the EPSG definition (in this case, 32130) in the epsg file(see the `projection FAQ <epsg_codes>`__ for more details on locating EPSG definitions). The entry for RI in the epsg file is as follows:"
msgstr ""

#: ../../../en/faq.txt:702
# b3e3a9d61d0444a9ab5f8262ea4ad52a
msgid "You can see how the definition in the initial command is formulated. Notice that the \"+units=m\" parameter has been changed to “+to_meter=0.3408”. This is important for the conversion. Where did the value of 0.3408 come from you ask? From the EPSG file! It has many goodies buried in it so by simply running 'grep \"to_meter\" epsg’ you can refresh your memory if you need to."
msgstr ""

#: ../../../en/faq.txt:708
# 438391371a304b55a464cd8dbae69a9b
msgid "The next parameter in the command is \"-t_srs EPSG:32130\". This command tells ogr2ogr to transform the data to the EPSG code of 32130. After this is declared, all you need to do is declare a file name for your new shape file and to set which file is being used as the input (note: make sure you don’t confuse the order of these two)."
msgstr ""

#: ../../../en/faq.txt:714
# 380a7b25f0cb451d9ecd30f408de8e9a
msgid "Hit enter, bombs away, and enjoy your new data in meters!"
msgstr ""

#: ../../../en/faq.txt:718
# 17f81eb2f69749cda4adbeb4988b7d1a
msgid "How can I help improve the documentation on this site?"
msgstr ""

#: ../../../en/faq.txt:720
# 50ad26d373d04211b5e2fb25f2b17da7
msgid "New documentation material and corrections to existing documentation are definitely very welcome. These contributions are handled through the same issue tracker used to track software bugs and enhancements."
msgstr ""

#: ../../../en/faq.txt:724
# 605a1f8c151b4c2ab9a3735bb5e38df6
msgid "Follow the directions for submitting bugs at: http://www.mapserver.org/development/bugs.html. When creating a ticket, in the Component field, select `MapServer Documentation`. If our ticket pertains to a specific web page, please include the URL to that page."
msgstr ""

#: ../../../en/faq.txt:730
# 7d0ab340357f4746bec2456f1ef71cbc
msgid "If you have tips or examples that don't really fit the definition of documentation, a good place to put them is the MapServer wiki at: https://github.com/mapserver/mapserver/wiki"
msgstr ""

#: ../../../en/faq.txt:736
# 048812dbd24649a4b480c03b6956a144
msgid "What's with MapServer's logo?"
msgstr ""

#: ../../../en/faq.txt:738
# 5c688913bccb4080a4aae05b78b7e2b5
msgid "The MapServer logo illustrates the confluence of the `Minnesota`_ and `Mississippi`_ rivers, quite near to the home of the `St. Paul Campus`_ of the `University of Minnesota`_, which was the `birthplace of MapServer`_."
msgstr ""

