# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011, Regents of the University of Minnesota
# This file is distributed under the same license as the MapServer package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MapServer 5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-07-01 14:35\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../en/faq.txt:5
# f687d0553c4d4f43a989adcae95c9e90
msgid "FAQ"
msgstr ""

#: ../../../en/faq.txt:8
# f8ff014eb4164178b09fed74c261c0fc
msgid "Where is the MapServer log file?"
msgstr ""

#: ../../../en/faq.txt:10
# b90470ac109940769e5f5c085f36b862
msgid "See :ref:`rfc28`"
msgstr ""

#: ../../../en/faq.txt:13
# 0e8997091295442d9dbbbe93a20191ca
msgid "What books are available about MapServer?"
msgstr ""

#: ../../../en/faq.txt:15
# 075f38257f3d47c7bfe3e152d342bb05
msgid "`\"Mapping Hacks\" <http://www.oreilly.com/catalog/mappinghks/>`__ by Schuyler Erle, Rich Gibson, and Jo Walsh is available from O'Reilly."
msgstr ""

#: ../../../en/faq.txt:18
# 61113c2f503744988c3a688ab20d9620
msgid "`\"Web Mapping Illustrated\" <http://oreilly.com/catalog/webmapping>`__ by Tyler Mitchell is available from O'Reilly. Introduces MapServer and many other related technologies including, GDAL/OGR, MapScript, PostGIS, map projections, etc."
msgstr ""

#: ../../../en/faq.txt:23
# d3ef89c0afed4c26a8d56d9c989a1938
msgid "`\"MapServer: Open Source GIS Development\" <http://www.apress.com/book/bookDisplay.html?bID=443>`__ by Bill Kropla."
msgstr ""

#: ../../../en/faq.txt:28
# 8448894faf0e4db59bf4c131279baeb7
msgid "How do I compile MapServer for Windows?"
msgstr ""

#: ../../../en/faq.txt:30
# 6049971ac8b8407bb5936a8ae77b25ea
msgid "See :ref:`win32`. Also, you can use the development libraries in :ref:`OSGeo4W <windows>` as a starting point instead of building all of the dependent libraries yourself."
msgstr ""

#: ../../../en/faq.txt:35
# 30eaac6f203c49e896dd318ac9bf515e
msgid "What do MapServer version numbers mean?"
msgstr ""

#: ../../../en/faq.txt:37
# 7ecfa364207b47708bdc60ffce053886
msgid "MapServer's version numbering scheme is very similar to Linux's. For example, a MapServer version number of 4.2.5 can be decoded as such:"
msgstr ""

#: ../../../en/faq.txt:40
# 46c0152347ce4bcd9f322536a9f0fb71
msgid "4: Major version number. MapServer releases a major version every two to three years."
msgstr ""

#: ../../../en/faq.txt:42
# 9c5f3f39a262494085a85eefe43683f6
msgid "2: Minor version number. Increments in minor version number almost always relate to additions in functionality."
msgstr ""

#: ../../../en/faq.txt:44
# 4154bfe017a842c484dd9d41df142e89
msgid "5: Revision number. Revisions are bug fixes only. No new functionality is provided in revisions."
msgstr ""

#: ../../../en/faq.txt:47
# 93a35137b8ad4c53866e8a4e58668264
msgid "From a developer's standpoint, MapServer version numbering scheme is also like Linux. Even minor version numbers (0..2..4..6) relate to *release* versions, and odd minor versions (1..3..5..7) correspond to developmental versions."
msgstr ""

#: ../../../en/faq.txt:52
# 5350ee71b70944318b4ed487098f21f6
msgid "Is MapServer Thread-safe?"
msgstr ""

#: ../../../en/faq.txt:54
# 42e045e8e74e4a21ad2759cbe24dd295
msgid "**Q**: Is MapServer thread-safe?"
msgstr ""

#: ../../../en/faq.txt:56
# 2ea8ff3c18c642f9aa136def53c11856
msgid "**A**: Generally, no (but see the next question). Many components of MapServer use static or global data that could potentially be modified by another thread. Under heavy load these unlikely events become inevitable, and could result in sporadic errors."
msgstr ""

#: ../../../en/faq.txt:61
# a3c12925dfaf498794ffd66a02923cd3
msgid "**Q**: Is it possible to safely use any of MapServer in a multi-threaded application?"
msgstr ""

#: ../../../en/faq.txt:64
# fb40d10befb24e26afd1466161fd5fac
msgid "**A**: Some of it, yes, with care. Or with Python :) Programmers must either avoid using the unsafe components of MapServer or carefully place locks around them. Python's global interpreter lock immunizes against MapServer threading problems; since no mapscript code ever releases the GIL all mapscript functions or methods are effectively atomic. Users of mapscript and Java, .NET, mod_perl, or mod_php do not have this extra layer of protection."
msgstr ""

#: ../../../en/faq.txt:71
# f7c6756547504395bdcd5a1ded5af157
msgid "**A**: Which components are to be avoided?"
msgstr ""

#: ../../../en/faq.txt:73
# c370f8a6d50245629499da4939307099
msgid "**Q**: Below are lists of unsafe and unprotected components and unsafe but locked components."
msgstr ""

#: ../../../en/faq.txt:76
# 91d6c27b2d064171b667f38a1fd4a667
msgid "Unsafe:"
msgstr ""

#: ../../../en/faq.txt:78
# 785643b0daa34350a0234def5bd7d0cb
msgid "OGR layers: use unsafe CPL services"
msgstr ""

#: ../../../en/faq.txt:79
# c312dd24ed864162b4640965b66f2b9c
msgid "Cartoline rendering: static data"
msgstr ""

#: ../../../en/faq.txt:80
# 27c1555bbbd449b5b02e4df37c848c92
msgid "Imagemap output: static data"
msgstr ""

#: ../../../en/faq.txt:81
# c946d354e11849a986ff710870364f38
msgid "SWF output: static data and use of unsafe msGetBasename()"
msgstr ""

#: ../../../en/faq.txt:82
# 790d69a5c511407da531f61947397735
msgid "SVG output: static data"
msgstr ""

#: ../../../en/faq.txt:83
# 4638e16e052447aeb3db30703eaf0f25
msgid "WMS/WFS server: static data used for state of dispatcher"
msgstr ""

#: ../../../en/faq.txt:84
# e88a6448af08435bb12765008185c2a4
msgid "Forcing a temporary file base (an obscure feature): static data"
msgstr ""

#: ../../../en/faq.txt:85
# 5a7d6d3071494be4af21389f46a1105f
msgid "MyGIS: some static data"
msgstr ""

#: ../../../en/faq.txt:87
# 92803d9f6a864367ac44e37657435f21
msgid "Unsafe, but locked:"
msgstr ""

#: ../../../en/faq.txt:89
# aad5706326cd4e6c86bd6dc00117684d
msgid "Map config file loading: global parser"
msgstr ""

#: ../../../en/faq.txt:90
# b12272ebaf9e4c49931292f58067d374
msgid "Setting class and and layer filter expressions (global parser)"
msgstr ""

#: ../../../en/faq.txt:91
# 8b7ee662a1ce4792b7fdb6ae46efd1c9
msgid "Class expression evaluation (global parser)"
msgstr ""

#: ../../../en/faq.txt:92
# 15f52cf13c604a6a84face8bbc95e8f3
msgid "Setting map and layer projections (PROJ)"
msgstr ""

#: ../../../en/faq.txt:93
# 2676e7a214a34bd896600f8f15b6a1b7
msgid "Raster layer rendering and querying (GDAL)"
msgstr ""

#: ../../../en/faq.txt:94
# 0d06164184ba4665a102dca6acc61d02
msgid "Database Connections (mappool.c)"
msgstr ""

#: ../../../en/faq.txt:95
# f62d6684e51c44f3b443c186cda2b48e
msgid "PostGIS support"
msgstr ""

#: ../../../en/faq.txt:96
# 9ed047c9e04f47eb8319c9972822a36c
msgid "Oracle Spatial (use a single environment handle for connection)"
msgstr ""

#: ../../../en/faq.txt:97
# d2df23d75bb34dc2b9d33dc0433508db
msgid "SDE support (global layer cache)"
msgstr ""

#: ../../../en/faq.txt:98
# 1a1fe1b24237440c952abe239e6abf88
msgid "Error handling (static repository of the error objects)"
msgstr ""

#: ../../../en/faq.txt:99
# d9d89a640673439fb2d7b3aa9cd2ec49
msgid "WMS/WFS client connections: potential race condition in Curl initialization"
msgstr ""

#: ../../../en/faq.txt:100
# 26828caaebc14c1d9768c5331291677b
msgid "Plugin layers (static repository of the loaded dll-s)"
msgstr ""

#: ../../../en/faq.txt:102
# ec507a90e436460e832e2410791d429c
msgid "Rather coarse locks are in place for the above. Only a single thread can use the global parser at a time, and only one thread can access GDAL raster data at a time. Performance is exchanged for safety."
msgstr ""

#: ../../../en/faq.txt:107
# d1d26ff400bb4e3f83c857528fb12b28
msgid "What does STATUS mean in a LAYER?"
msgstr ""

#: ../../../en/faq.txt:109
# c083a1a206cb4d49a42278e9ffb071df
msgid "STATUS ON and STATUS OFF set the default status of the layer. If a map is requested, those layers will be ON/OFF unless otherwise specified via the layers parameter. This is particularly the case when using MapScript and MapServer's built-in template mechanism, but is also useful as a hint when writing your own apps and setting up the initial map view."
msgstr ""

#: ../../../en/faq.txt:115
# a25de90a29a64e0b839383bcfe260a47
msgid "STATUS DEFAULT means that the layer is always on, even if not specified in the layers parameter. A layer's status can be changed from DEFAULT to OFF in MapScript, but other than that, it's always on."
msgstr ""

#: ../../../en/faq.txt:119
# 937c60f3227441afa53e164337aa8e5c
msgid ":ref:`cgi` turns everything off that is not \"STATUS DEFAULT\" off so all layers start from the same state (e.g. off) and must be explicitly requested to be drawn or query. That common state made (at least in my mind) implementations easier. I mean, if a layer \"lakes\" started ON the doing layer=lakes would turn it OFF. So I wanted to remove the ambiguity of a starting state."
msgstr ""

#: ../../../en/faq.txt:126
# 835be3a62c1540b38736a3f1a0952e29
msgid "How can I make my maps run faster?"
msgstr ""

#: ../../../en/faq.txt:128
# 1b1e4d8033e543fbb78b437017194bbc
msgid "There are a lot of different approaches to improving the performance of your maps, aside from the obvious and expensive step of buying faster hardware. Here are links to some individual howtos for various optimizations."
msgstr ""

#: ../../../en/faq.txt:132
# 53ae77d992ea458caa5378ba0800ce19
msgid ":ref:`Tuning your mapfile for performance <mapfile_tuning>`"
msgstr ""

#: ../../../en/faq.txt:133
# 5f7f475eae1640baa23d261aded97faa
msgid ":ref:`Optimizing the performance of vector data sources <vector_optimization>`"
msgstr ""

#: ../../../en/faq.txt:134
# 6a1f693d8af4406b9b500ea48bc24e44
msgid ":ref:`Optimizing the performance of raster data sources <raster_optimization>`"
msgstr ""

#: ../../../en/faq.txt:135
# f812c9bbccbe43dba01d7d9f7e9b618c
msgid ":ref:`Tileindexes for mosaicing and performance <tileindex>`"
msgstr ""

#: ../../../en/faq.txt:137
# 726a886a98484862ba8259a5e75ab3bd
msgid "Some general tips for all cases:"
msgstr ""

#: ../../../en/faq.txt:139
# 27c845dd4e02438187e1ab18df53500c
msgid "First and foremost is hardware. An extra GB of RAM will give your map performance increases beyond anything you're likely to achieve by tweaking your data. With the price of RAM these days, it's cheap and easy to speed up every map with one inexpensive upgrade."
msgstr ""

#: ../../../en/faq.txt:144
# 63075b7fc3da4abdb1325fa52b2087f0
msgid "Use the scientific method. Change one thing at a time, and see what effect it had. Try disabling all layers and enabling them one at a time until you discover which layer is being problematic."
msgstr ""

#: ../../../en/faq.txt:148
# af2ec817b83943baace8d546736e5d15
msgid "Use :ref:`shp2img` program to time your results. This runs from the command line and draws an image of your entire map. Since it's run from the command line, it is immune to net lag and will give more consistent measurements that your web browser."
msgstr ""

#: ../../../en/faq.txt:154
# dde75d5848a74797be2a7b417b2c622e
msgid "What does Polyline mean in MapServer?"
msgstr ""

#: ../../../en/faq.txt:156
# 341dde74bbff4dfabe7d415aca417892
msgid "There's confusion over what POLYLINE means in MapServer and via ESRI. In MapServer POLYLINE simply means a linear representation of POLYGON data. With ESRI polyline means multi-line. Old versions of the Shapefile techical description don't even refer to polyline shapefiles, just line. So, ESRI polyline shapefiles are just linework and can only be drawn and labeled as LINE layers. Those shapefiles don't have feature closure enforced as polygon shapefiles do which is why the distinction is so important. I suppose there is a better choice than POLYLINE but I don't know what it would be."
msgstr ""

#: ../../../en/faq.txt:166
# 4726ffa4bfe84f89bb0758246f228855
msgid "The only difference between POLYLINE and LINE layers is how they are labeled."
msgstr ""

#: ../../../en/faq.txt:170
# 91eb947127ec4f558f19734b3e3670f5
msgid "What is MapScript?"
msgstr ""

#: ../../../en/faq.txt:172
# 65e9e66e51ce40db8c468af5e8d5e7fd
msgid "MapScript is the scripting interface to MapServer, usually generated by :term:`SWIG` (except in the case of :ref:`php_mapscript`). MapScript allows you to program with MapServer's objects directly instead of interacting with MapServer through its :ref:`cgi` and :ref:`mapfile`."
msgstr ""

#: ../../../en/faq.txt:180
# c2075b5b4f9a4d2ca9721f0a3e5eaee6
msgid "Does MapServer support reverse geocoding?"
msgstr ""

#: ../../../en/faq.txt:182
#: ../../../en/faq.txt:194
# e4a932b9536c474183b1c3ce9b4cbfef
# f35105f9138f4e13ae55657cfdb1324e
msgid "No."
msgstr ""

#: ../../../en/faq.txt:184
# 130bb8bd96f44422b99b9c54c4e2aba0
msgid "Reverse geocoding is an activity where you take a list of street features that you already have and generate postal addresses from them. This kind of spatial functionality is provided by proprietary packages such as the ESRI suite of tools, as well as services such as those provided by GDT. MapServer is for *map rendering*, and it does not provide for advanced spatial operations such as this."
msgstr ""

#: ../../../en/faq.txt:192
# 2d21f0cc15884d3bb06821a7990954f3
msgid "Does MapServer support geocoding?"
msgstr ""

#: ../../../en/faq.txt:196
# 82d3b604946e498ba507135171eb0aba
msgid "Geocoding is an activity where you take a list of addresses and generate lat/lon points for them. This kind of spatial functionality is provided by proprietary packages such as the ESRI suite of tools, as well as services such as those provided by GDT. MapServer is for *map rendering*, and it does not provide for advanced spatial operations such as this."
msgstr ""

#: ../../../en/faq.txt:202
# 443c98e2f4c949e3a2b280a9722fbd13
msgid "If you are using MapScript, there is a free geocder available through XMLRPC and SOAP at http://geocoder.us . You could hook you application up to use this service to provide lat/lon pairs for addresses, and then use MapServer to display those points."
msgstr ""

#: ../../../en/faq.txt:208
# 9bb422e8ee5744ec999c7cef7a80bf57
msgid "How do I set line width in my maps?"
msgstr ""

#: ../../../en/faq.txt:210
# c90f2e9fc1b349048ec4b78ea71cfcd8
msgid "In the current Mapserver version, line width is set using the STYLE parameter WIDTH.  For a LINE layer, lines can be made red and 3 pixels wide by using the following style in a CLASS."
msgstr ""

#: ../../../en/faq.txt:222
# 5b90e4c30dcb4982896e997a82e3da48
msgid "In earlier versions of Mapserver, you could set the symbol for the LAYER to 'circle' and then you can set the symbol SIZE to be the width you want. A 'circle' symbol can be defined as"
msgstr ""

#: ../../../en/faq.txt:236
# 1918fbed3f3a484e83a53cf7d6cba704
msgid "Why do my JPEG input images look crappy via MapServer?"
msgstr ""

#: ../../../en/faq.txt:238
# 43e5dde32c0741c0808cd4ce7592ed18
msgid "You must be using an old version of Mapserver (where GD was the default library for rendering)."
msgstr ""

#: ../../../en/faq.txt:241
# 77eb181a392b4156bc7f53acd081c1e0
msgid "Newer versions of Mapserver use AGG for rendering, and the default output formats is 24 bit colour, so there should not be a problem."
msgstr ""

#: ../../../en/faq.txt:244
# 2d5f711220c84528903eacfb94d8a4b9
msgid "The default output format for MapServer with GD was 8bit pseudo-colored PNG or GIF.  Inherently there will be some color degradation in converting a 24bit image (16 million colors) image into 8bit (256 colors)."
msgstr ""

#: ../../../en/faq.txt:249
# aede7dcd07174c8e96c1d6c88bf3c7b1
msgid "With GD output, MapServer used quite a simple method to do the transformation, converting pixels to the nearest color in a 175 color colorcube. This would usually result in blotchy color in a fairly smoothly varying image."
msgstr ""

#: ../../../en/faq.txt:254
# 418eb399ba9845c68cecc5bac5aeaece
msgid "For GD, solutions used to be:"
msgstr ""

#: ../../../en/faq.txt:256
# 397a9555efe7437f88ab08e252ad9c04
msgid "Select 24bit output.  This might be as easy as \"IMAGETYPE JPEG\" in your MAP section."
msgstr ""

#: ../../../en/faq.txt:258
# 6244ca8fe88b4ab7845a3c84ff64c3f0
msgid "Enable dithering (PROCESSING \"DITHER=YES\") to produce a better color appearance."
msgstr ""

#: ../../../en/faq.txt:260
# 2a95b90cb02d4b5d91a935487b77deba
msgid "Preprocess your image to 8bit before using it in MapServer with an external application like the GDAL rgb2pct.py script."
msgstr ""

#: ../../../en/faq.txt:263
# 1ece1b0b40194d0db04e089e2063ee40
msgid "For more information review the :ref:`raster`."
msgstr ""

#: ../../../en/faq.txt:266
# c33e273bb37a4693818a9f2846f93b92
msgid "Which image format should I use?"
msgstr ""

#: ../../../en/faq.txt:268
# f0b363d014074173a22823d7189561ab
msgid "Although MapScript can generate the map in any desired image format it is sufficient to only consider the three most prevalent ones: JPEG, PNG, and GIF."
msgstr ""

#: ../../../en/faq.txt:271
# b537aa6f11d8475ea737837ee4f310de
msgid "JPEG is an image format that uses a lossy compression algorithm to reduce an image's file size and is mostly used when loss of detail through compression is either not noticeable or negligible, as in most photos. Maps on the other hand mainly consist of fine lines and areas solidly filled in one colour, which is something JPEG is not known for displaying very well. In addition, maps, unless they include some aerial or satellite imagery, generally only use very few different colours. JPEG with its 24bit colour depth capable of displaying around 16.7 million colours is simple not suitable for this purpose. GIF and PNG however use an indexed colour palette which can be optimized for any number (up to 256) of colours which makes them the perfect solution for icons, logos, charts or maps. The following comparison (generated file sizes only; not file generation duration) will therefore only include these two file formats:"
msgstr ""

#: ../../../en/faq.txt:288
# 20ca2264b9f14a0ea87dbe5ab6ba2872
msgid "GIF"
msgstr ""

#: ../../../en/faq.txt:288
# 3ec1872bf2df42bd920ba6bc951abd48
msgid "PNG"
msgstr ""

#: ../../../en/faq.txt:288
# 5884d2f36df94d23b089f7117d270a6b
msgid "PNG24"
msgstr ""

#: ../../../en/faq.txt:290
# e88b6135476449ecaba00266a168a7bc
msgid "Vector Data only"
msgstr ""

#: ../../../en/faq.txt:290
# 24919e1a62c14638abb5ba4434ead209
msgid "59kb"
msgstr ""

#: ../../../en/faq.txt:290
# fa50a774c2894be49a00beb4950cd8fb
msgid "26kb"
msgstr ""

#: ../../../en/faq.txt:290
# 86e079d1edd5490690ebddf095be8482
msgid "69kb"
msgstr ""

#: ../../../en/faq.txt:292
# 64c90d3f31bd4f8d91d7788c2de3ecb2
msgid "Vector Data & Satellite Image coloured"
msgstr ""

#: ../../../en/faq.txt:292
# bd84e370095940d8b65bdd63320a7bcc
msgid "156kb"
msgstr ""

#: ../../../en/faq.txt:292
# 3ee1414cee4341b39d7bb556f7a6b096
msgid "182kb"
msgstr ""

#: ../../../en/faq.txt:292
# fc0ed6ac80e046dbba95ddca7d5f8eb0
msgid "573kb"
msgstr ""

#: ../../../en/faq.txt:294
# db6d4640498b4c76b380e4a06e4f9346
msgid "Vector Data & Satellite Image monochrome"
msgstr ""

#: ../../../en/faq.txt:294
# 8b31194c8dca405abfefc2991b5759aa
msgid "142kb"
msgstr ""

#: ../../../en/faq.txt:294
# e8f5bda0cf724a5ca6e9b3c03c19c48b
msgid "134kb"
msgstr ""

#: ../../../en/faq.txt:294
# b2426a734fc7402b9b781c6f1ed2f0d1
msgid "492kb"
msgstr ""

#: ../../../en/faq.txt:297
# 2db3e3b59c3244ec8a64969a6ced1d6a
msgid "(results based on an average 630x396 map with various colours, symbols, labels/annotations etc.)"
msgstr ""

#: ../../../en/faq.txt:300
# 63b1e85d0a4449f7984f4f5b56a813f6
msgid "Although GIF shows a quantitative as well as qualitative advantage over PNG when generating maps that contain full coloured remote sensing imagery, PNG is the clear quantitative winner in terms of generated file sizes for maps with or without additional monochrome imagery and should therefore be the preferred image format. If the mapping application however can also display fullcolour aerial or satellite imagery, the output file format can be changed dynamically to either GIF or even PNG24 to achieve the highest possible image quality."
msgstr ""

#: ../../../en/faq.txt:310
# 151f7bd5a8d04231a75655d0146693fc
msgid "Why doesn't PIL (Python Imaging Library) open my PNGs?"
msgstr ""

#: ../../../en/faq.txt:312
# ba908e66c2ad460cac705734149bcf78
msgid "`PIL <http://www.pythonware.com/products/pil/>`__ does not support interlaced PNGs at this time (no timetable on when it actually will either). To be able to read PNGs in PIL, they must not be interlaced. Modify your OUTPUTFORMAT with a FORMATOPTION like so:"
msgstr ""

#: ../../../en/faq.txt:329
# 5113c1caabe74ecabf2c42d06e6ef3ee
msgid "Why do my symbols look poor in JPEG output?"
msgstr ""

#: ../../../en/faq.txt:331
# 56411e6ce61a4c408a69ee528860e6d0
msgid "When I render my symbols to an 8bit output (PNG, GIF) they look fine, but in 24bit jpeg output they look very blocky and gross."
msgstr ""

#: ../../../en/faq.txt:334
# 2d76a03e24944d438afc1eac5561896e
msgid "You must be using an old version of Mapserver.  This should not be problem with newer versions.  The following explains the old (GD) behaviour."
msgstr ""

#: ../../../en/faq.txt:338
# 4e9a3a1f4cb8424689ef8e72caba89c4
msgid "In order to render some classes of symbols properly in 24bit output, such as symbols from true type fonts, it is necessary to force rendering to occur in RGBA. This can be accomplished by including the \"TRANSPARENCY ALPHA\" line in the layer definition. Don't use this unnecessarily as there is a performance penalty."
msgstr ""

#: ../../../en/faq.txt:344
# a3a9a47532274c33838dd07b1bdb1cf2
msgid "This problem also affects PNG24 output or any RGB output format. 8bit (PC256) or RGBA output types are already ok."
msgstr ""

#: ../../../en/faq.txt:348
# 4d3f6d1735f64c288b0ee41cd54c77ad
msgid "How do I add a copyright notice on the corner of my map?"
msgstr ""

#: ../../../en/faq.txt:350
# 1a4e0ecf2be24adebe9247009d7fad29
msgid "You can use an inline feature, with the :ref:`FEATURE` object, to make a point on your map. Use the TEXT parameter of the FEATURE object for the actual text of the notice, and a :ref:`LABEL` object to style the notice."
msgstr ""

#: ../../../en/faq.txt:355
# f7a78f814c5d4f2fb948a5686dc2313c
msgid "Example Layer"
msgstr ""

#: ../../../en/faq.txt:389
# b24336ea9a2840b0b026ac821577c0f1
msgid "Result"
msgstr ""

#: ../../../en/faq.txt:395
# 63d53d6ba8bb424f83bbed1bc3033c13
msgid "How do I have a polygon that has both a fill and an outline with a width?"
msgstr ""

#: ../../../en/faq.txt:397
# fcab9049feac494cbfee0c1e43628b10
msgid "How do I have a polygon that has both a fill and an outline with a width? Whenever I put both a color (fill) and an outlinecolor with a width on a polygon within a single STYLE, the outline width isn't respected."
msgstr ""

#: ../../../en/faq.txt:401
# 4e4008859ede4270b4b313a3a638f4c9
msgid "For historical reasons, width has two meanings within the context of filling polygons and stroke widths for the outline. If a polygon is filled, then the width defines the width of the symbol *inside* the filled polygon. In this event, the outline width is disregarded, and it is always set to 1. To acheive the effect of *both* a fill and an outline width, you need to use two styles in your class."
msgstr ""

#: ../../../en/faq.txt:419
# fdb29b59aadb4ac09fc08ab1472002c2
msgid "How can I create simple antialiased line features?"
msgstr ""

#: ../../../en/faq.txt:421
# a99c32df14ea4141861054adf5cee43b
msgid "With AGG (used in recent Mapserver version), antialiased lines is the default, and can't be turned off."
msgstr ""

#: ../../../en/faq.txt:424
# d0aabf6417154112af9852fce6cb389b
msgid "With GD, the easiest way to produce antialiased lines is to:"
msgstr ""

#: ../../../en/faq.txt:426
# 2af0d28e2630496d8d997723f4a3c4e6
msgid "use a 24-bit output image type (IMAGEMODE RGB (or RGBA))"
msgstr ""

#: ../../../en/faq.txt:427
# d2f3fe08e7f44d538323ec439b4b5536
msgid "set TRANSPARENCY ALPHA in the layer using antialiased lines"
msgstr ""

#: ../../../en/faq.txt:428
# 290cbc9698784e529bac7dc332edb4a6
msgid "set ANTIALIAS TRUE in the STYLE element of the CLASS with antialiased lines"
msgstr ""

#: ../../../en/faq.txt:430
# 91a9a5aecc4d460a9c90a534d0b89fb2
msgid "The following mapfile snippets enable antialiased county borders for GD:"
msgstr ""

#: ../../../en/faq.txt:464
# 8e7743b7fdfb47adaf833b458b0f7092
msgid "The bdry_counln2 shapefile referenced in the counties layer is a line shapefile. A polygon shapefile could be substituted with roughly the same results, though owing to the nature of shapefiles each border would be rendered twice and the resulting output line would likely appear to be slightly thicker. Alternatively, one could use a polygon shapefile, set TYPE to POLYGON, and use OUTLINECOLOR in place of COLOR in the STYLE element."
msgstr ""

#: ../../../en/faq.txt:473
# 35327bee6586443195b0a8c0edb24e76
msgid "You can tweak the combination of STYLE->WIDTH and SYMBOLSCALE to modify line widths in your output images."
msgstr ""

#: ../../../en/faq.txt:481
# eecf71d716394b35ab7052eec792684a
msgid "Which OGC Specifications does MapServer support?"
msgstr ""

#: ../../../en/faq.txt:483
# b0deb85c3ea4460dab3c4d4f81ddedc3
msgid "See: :ref:`ogc_support`."
msgstr ""

#: ../../../en/faq.txt:486
# 3c546c5f70a645f78c572d86182aebbb
msgid "Why does my requested WMS layer not align correctly?"
msgstr ""

#: ../../../en/faq.txt:488
# f8908510fe62424591cf38b4d5789c17
msgid "Requesting a layer from some ArcIMS WMS connectors results in a map with misalgned data (the aspect ratio of the pixels looks wrong)."
msgstr ""

#: ../../../en/faq.txt:491
# bf0e3565d5514e34b5da4e67d0dfa65a
msgid "Some ArcIMS sites are not set up to stretch the returned image to fit the requested envelope by default. This results in a map with data layers that overlay well in the center of the map, but not towards the edges. This can be solved by adding \"*reaspect=false*\" to the request (by tacking it on to the connection string)."
msgstr ""

#: ../../../en/faq.txt:497
# ed729214b89140698ae6ab754f24037b
msgid "For example, if your mapfile is in a projection other than EPSG:4326, the following layer will not render correctly:"
msgstr ""

#: ../../../en/faq.txt:521
# 1445cd0ea9db4f309d323e6c12f18d65
msgid "Adding \"reaspect=false\" to the connection string solves the problem:"
msgstr ""

#: ../../../en/faq.txt:545
# e8dd6823aee74c2081f85df9f277dfe3
msgid "When I do a GetCapabilities, why does my browser want to download mapserv.exe/mapserv?"
msgstr ""

#: ../../../en/faq.txt:547
# 03cbefea51cc4588afc7cc3188ecea46
msgid "A beginner question here... I'm new to MS and to Apache. I've got MS4W up and running with the Itasca demo. Now I want to enable it as a WMS server. mapserv -v at the command line tells me it supports WMS_SERVER. When I point my browser to it, my browser just wants to download mapserv.exe!"
msgstr ""

#: ../../../en/faq.txt:552
# 0f854a04c67d4e8ab055392d7d28d453
msgid "What am I missing?"
msgstr ""

#: ../../../en/faq.txt:554
# 51c3f8cd547b456c87e8d8cdf1a05cba
msgid "Here is the URL I'm using to issue a GetCapabilities WMS request: http://localhost/cgi-bin/mapserv.exe?map=../htdocs/itasca/demo.map&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities"
msgstr ""

#: ../../../en/faq.txt:557
# fee7dfc957ac4215a56508e5b967db91
msgid "The OGC:WMS 1.1.0 and 1.1.1 specifications (which are both supported by MapServer) state that, for GetCapabilities responses, the OGC:WMS server returns a specific MIME type (i.e. application/vnd.ogc.xml (see subclause 6.5.3 of `OGC:WMS 1.1.1 <http://portal.opengeospatial.org/files/?artifact_id=1081&version=1&format=pdf>`__."
msgstr ""

#: ../../../en/faq.txt:563
# 97e1c0233baa47b08b146acf100328ba
msgid "A MIME type is passed from the web server to the client (in your case, a web browser), from which a client can decide how to process it."
msgstr ""

#: ../../../en/faq.txt:566
# d2099e2990d74c9296f418ef8c0e232e
msgid "Example 1: if using a web browser, if a web server returns an HTTP Header of \"Content-type:image/png\", then the web browser will know that this is a PNG image and display it accordingly."
msgstr ""

#: ../../../en/faq.txt:570
# f5ab31d1471741adb1b6d6ea649b9192
msgid "Example 2: if using a web browser, if a web server returns an HTTP Header of \"Content-type:text/html\", then the web browser will know that this is an HTML page and display it accordingly (i.e. tables, divs, etc.)"
msgstr ""

#: ../../../en/faq.txt:574
# 2f1e639a0e914193b7777fae4e3e37b6
msgid "Basically, what is happening is that the OGC:WMS is returning, in the headers of the HTTP response, a MIME type which your web browser does not understand, which usually prompts a dialog box on whether to open or download the content (i.e. Content-type:application/vnd.ogc.wms_xml)."
msgstr ""

#: ../../../en/faq.txt:579
# 84065a2ba4f2485099aec2d9ea7cf1fd
msgid "You could configure your web browser to handle the application/vnd.ogc.wms_xml MIME type a certain way (i.e. open in Notepad, etc.)."
msgstr ""

#: ../../../en/faq.txt:583
# 18b92543139d4944a574745c5e070240
msgid "Why do my WMS GetMap requests return exception using MapServer 5.0?"
msgstr ""

#: ../../../en/faq.txt:585
# b482c955412c45a99fa82fa15d727226
msgid "Before upgrading to MapServer 5.0, I was able to do quick GetMap tests in the form of: http://wms.example.com/wms?service=WMS&version=1.1.1&request=GetMap&layers=foo"
msgstr ""

#: ../../../en/faq.txt:589
# 2271283cf8b64fc6a608cf8c049153d2
msgid "Now when I try the same test, MapServer WMS returns an XML document saying something about missing required parameters. What's going on here?"
msgstr ""

#: ../../../en/faq.txt:592
# d303c14c71ff4a728ff296bc529ff449
msgid "This was a major change for WMS Server support in MapServer 5.0. MapServer WMS Server GetMap requests now require the following additional parameters:"
msgstr ""

#: ../../../en/faq.txt:595
# 02155c4ef18d419cb37c76545271cafd
msgid "srs"
msgstr ""

#: ../../../en/faq.txt:596
# b473d2382ad148f5bceb696f937cf7bc
msgid "bbox"
msgstr ""

#: ../../../en/faq.txt:597
# ae3f425fbea24b388a3c8c8e6ad9b50e
msgid "width"
msgstr ""

#: ../../../en/faq.txt:598
# 8a49f600d60b4f1d97a173bfa21caebe
msgid "height"
msgstr ""

#: ../../../en/faq.txt:599
# 4332bc2e4b0e421c9dab6ce37b90f8e3
msgid "format"
msgstr ""

#: ../../../en/faq.txt:600
# cfe2ecfa563549359412993583d50844
msgid "styles"
msgstr ""

#: ../../../en/faq.txt:603
# 5373a53908e34aa7ac660e379099eeb2
msgid "These parameters were always required in all versions of the WMS specification, but MapServer previously had not required them in a client request (even though most OGC WMS clients would issue them anyway to be consistent with the WMS spec)."
msgstr ""

#: ../../../en/faq.txt:608
# dcbc374492744fae96abc6c760db70c8
msgid "The request below now constitutes a valid GetMap request:"
msgstr ""

#: ../../../en/faq.txt:614
# 81787fecd68b4419b5dd5dd7db7784d4
msgid "Which is consistent with the WMS specification."
msgstr ""

#: ../../../en/faq.txt:616
# 46ef636c372b4af19d8beee805b04497
msgid "More information on these parameters can be found in the :ref:`wms_server` and the `OGC WMS 1.1.1 specification <http://portal.opengeospatial.org/files/?artifact_id=1081&version=1&format=pdf>`__"
msgstr ""

#: ../../../en/faq.txt:620
# f7af2ac1282c4f23aa883320c9110e25
msgid "For more detailed information, see `ticket 1088 <http://trac.osgeo.org/mapserver/ticket/1088>`__"
msgstr ""

#: ../../../en/faq.txt:624
# dcd715c071aa40ba8bdbc3a9e30ddfcb
msgid "STYLES, though a required WMS parameter, is now optional again in MapServer. For more detailed information, see `ticket 2427 <http://trac.osgeo.org/mapserver/ticket/2427#comment:2>`__"
msgstr ""

#: ../../../en/faq.txt:629
# 2def0d4297804e438b24d7c7c3892393
msgid "Using MapServer 6.0, why don't my layers show up in GetCapabilities responses or are not found anymore?"
msgstr ""

#: ../../../en/faq.txt:631
# a418bbd8d855472d9ae55ddffbab7be3
msgid "MapServer 6.0 introduces the option of hiding layers against OGC Web Service requests.  OGC Web Services can provide powerful access to your geospatial data.  It was decided to disable layer level request access as a default.  See :ref:`rfc67` provides a full explanation of the changes and implications."
msgstr ""

#: ../../../en/faq.txt:636
# 75c7c16128904d6f85fda36a1496cb60
msgid "To enable pre-6.0 behaviour, you can add the following to the :ref:`WEB` object's METADATA section in your mapfile:"
msgstr ""

#: ../../../en/faq.txt:643
# b2eeb110092b4e9baee3b9c2fb0c7d72
msgid "This will enable access of all layers to all OGC Web Service requests."
msgstr ""

#: ../../../en/faq.txt:646
# c6908a0c0a224188a908c84b8fb2270e
msgid "Where do I find my :term:`EPSG` code?"
msgstr ""

#: ../../../en/faq.txt:648
# f79b7ecb1d6245dcb746c6f26cd4dc50
msgid "There is a text file \"epsg\" in your PROJ4 installation (e.g. \"/usr/local/share/proj/epsg\") which contain the EPSG information used by PROJ4. In Windows, this is often located in C:\\\\proj\\\\nad or is found with an environment variable called PROJ_LIB."
msgstr ""

#: ../../../en/faq.txt:653
# 2708f720c4ea4d109aad92b9d0d3ba42
msgid "http://spatialreference.org allows you to search for EPSG codes."
msgstr ""

#: ../../../en/faq.txt:655
# 4e3c3b05eb794c0e9c9405813462d19e
msgid "You can also have a look at: http://ocean.csl.co.uk"
msgstr ""

#: ../../../en/faq.txt:658
# 61f9405929e44f998d9adb51734f8ddc
msgid "More information to EPSG: http://www.epsg.org"
msgstr ""

#: ../../../en/faq.txt:661
# 0d2d2f7d0af04b87877e1a463ac2eaa6
msgid "More information to PROJ4: http://trac.osgeo.org/proj"
msgstr ""

#: ../../../en/faq.txt:665
# a80386735225456586add76a7e5f588a
msgid "How can I reproject my data using ogr2ogr?"
msgstr ""

#: ../../../en/faq.txt:667
# 1a1396da76a643559d35f2fbc04b1a80
msgid "With ogr2ogr of course! ogr2ogr is a powerful utility that will transform the projections of your shapefiles when passed the appropriate parameters. In my case, I was using MapServer to serve data in RI State Plane Feet. In order to do so, the data had to first be converted to meters. Here is the command I used:"
msgstr ""

#: ../../../en/faq.txt:677
# 4f6c70c3e36a4b6db94ddb55506342b8
msgid "Since my data already had a projection defined, I did not need to explicitly state a source projection. This command uses the EPSG definition for NAD83 Rhode Island (32130) and performs the feet to meters conversion."
msgstr ""

#: ../../../en/faq.txt:681
# d328428c804c4cb9b67824841e6cc867
msgid "Now say my data wasn't already projected? Here's how we deal with that:"
msgstr ""

#: ../../../en/faq.txt:687
# b2137a46a3ef4a1699368c09d808137a
msgid "Let's examine what is going on here:"
msgstr ""

#: ../../../en/faq.txt:689
# c92419046e304b00a302fc8d77d42e9d
msgid "The -s_srs parameter explicitly defines a projection for the data. The parameters used here were taken out of the EPSG definition (in this case, 32130) in the epsg file(see the `projection FAQ <epsg_codes>`__ for more details on locating EPSG definitions). The entry for RI in the epsg file is as follows:"
msgstr ""

#: ../../../en/faq.txt:700
# d493385a3f06450e8e8e67378953143d
msgid "You can see how the definition in the initial command is formulated. Notice that the \"+units=m\" parameter has been changed to “+to_meter=0.3408”. This is important for the conversion. Where did the value of 0.3408 come from you ask? From the EPSG file! It has many goodies buried in it so by simply running 'grep \"to_meter\" epsg’ you can refresh your memory if you need to."
msgstr ""

#: ../../../en/faq.txt:706
# ee8da72c674c4ba9bb46d397f970e516
msgid "The next parameter in the command is \"-t_srs EPSG:32130\". This command tells ogr2ogr to transform the data to the EPSG code of 32130. After this is declared, all you need to do is declare a file name for your new shape file and to set which file is being used as the input (note: make sure you don’t confuse the order of these two)."
msgstr ""

#: ../../../en/faq.txt:712
# e7b1a130d64a4667b64e387a827daf20
msgid "Hit enter, bombs away, and enjoy your new data in meters!"
msgstr ""

#: ../../../en/faq.txt:716
# 76166ab3a4b94ce8a3c6d4a317559525
msgid "How can I help improve the documentation on this site?"
msgstr ""

#: ../../../en/faq.txt:718
# 40e93ed0a5be4769aba5598cb23a3322
msgid "New documentation material and corrections to existing documentation are definitely very welcome. These contributions are handled through the same issue tracker used to track software bugs and enhancements."
msgstr ""

#: ../../../en/faq.txt:722
# 2f8b3c4381904fc18af2f0fabb4e3d7b
msgid "Follow the directions for submitting bugs at: http://www.mapserver.org/development/bugs.html. When creating a ticket, in the Component field, select `MapServer Documentation`. If our ticket pertains to a specific web page, please include the URL to that page."
msgstr ""

#: ../../../en/faq.txt:728
# ae72f149bef745278af03fdf0e703426
msgid "If you have tips or examples that don't really fit the definition of documentation, a good place to put them is the MapServer wiki at: https://github.com/mapserver/mapserver/wiki"
msgstr ""

#: ../../../en/faq.txt:734
# 27ebf51606724c2b8fbd9f0a9742e2a8
msgid "What's with MapServer's logo?"
msgstr ""

#: ../../../en/faq.txt:736
# 1c663bcfe8d9414493cf702cb7de2ff5
msgid "The MapServer logo illustrates the confluence of the `Minnesota`_ and `Mississippi`_ rivers, quite near to the home of the `St. Paul Campus`_ of the `University of Minnesota`_, which was the `birthplace of MapServer`_."
msgstr ""

